#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.14.0                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5758408186925393532) {
   out_5758408186925393532[0] = 0;
   out_5758408186925393532[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5758408186925393532[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5758408186925393532[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5758408186925393532[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5758408186925393532[5] = -sin(in_vec[1]);
   out_5758408186925393532[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5758408186925393532[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5758408186925393532[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5758408186925393532[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5758408186925393532[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5758408186925393532[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5758408186925393532[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5758408186925393532[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5758408186925393532[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5758408186925393532[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5758408186925393532[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5758408186925393532[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_180185448712572281) {
   out_180185448712572281[0] = delta_x[0] + nom_x[0];
   out_180185448712572281[1] = delta_x[1] + nom_x[1];
   out_180185448712572281[2] = delta_x[2] + nom_x[2];
   out_180185448712572281[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_180185448712572281[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_180185448712572281[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_180185448712572281[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_180185448712572281[7] = delta_x[6] + nom_x[7];
   out_180185448712572281[8] = delta_x[7] + nom_x[8];
   out_180185448712572281[9] = delta_x[8] + nom_x[9];
   out_180185448712572281[10] = delta_x[9] + nom_x[10];
   out_180185448712572281[11] = delta_x[10] + nom_x[11];
   out_180185448712572281[12] = delta_x[11] + nom_x[12];
   out_180185448712572281[13] = delta_x[12] + nom_x[13];
   out_180185448712572281[14] = delta_x[13] + nom_x[14];
   out_180185448712572281[15] = delta_x[14] + nom_x[15];
   out_180185448712572281[16] = delta_x[15] + nom_x[16];
   out_180185448712572281[17] = delta_x[16] + nom_x[17];
   out_180185448712572281[18] = delta_x[17] + nom_x[18];
   out_180185448712572281[19] = delta_x[18] + nom_x[19];
   out_180185448712572281[20] = delta_x[19] + nom_x[20];
   out_180185448712572281[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4396804282860757599) {
   out_4396804282860757599[0] = -nom_x[0] + true_x[0];
   out_4396804282860757599[1] = -nom_x[1] + true_x[1];
   out_4396804282860757599[2] = -nom_x[2] + true_x[2];
   out_4396804282860757599[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4396804282860757599[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4396804282860757599[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4396804282860757599[6] = -nom_x[7] + true_x[7];
   out_4396804282860757599[7] = -nom_x[8] + true_x[8];
   out_4396804282860757599[8] = -nom_x[9] + true_x[9];
   out_4396804282860757599[9] = -nom_x[10] + true_x[10];
   out_4396804282860757599[10] = -nom_x[11] + true_x[11];
   out_4396804282860757599[11] = -nom_x[12] + true_x[12];
   out_4396804282860757599[12] = -nom_x[13] + true_x[13];
   out_4396804282860757599[13] = -nom_x[14] + true_x[14];
   out_4396804282860757599[14] = -nom_x[15] + true_x[15];
   out_4396804282860757599[15] = -nom_x[16] + true_x[16];
   out_4396804282860757599[16] = -nom_x[17] + true_x[17];
   out_4396804282860757599[17] = -nom_x[18] + true_x[18];
   out_4396804282860757599[18] = -nom_x[19] + true_x[19];
   out_4396804282860757599[19] = -nom_x[20] + true_x[20];
   out_4396804282860757599[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6447116989609664619) {
   out_6447116989609664619[0] = 1.0;
   out_6447116989609664619[1] = 0;
   out_6447116989609664619[2] = 0;
   out_6447116989609664619[3] = 0.0;
   out_6447116989609664619[4] = 0.0;
   out_6447116989609664619[5] = 0.0;
   out_6447116989609664619[6] = 0.0;
   out_6447116989609664619[7] = 0.0;
   out_6447116989609664619[8] = 0.0;
   out_6447116989609664619[9] = 0.0;
   out_6447116989609664619[10] = 0.0;
   out_6447116989609664619[11] = 0.0;
   out_6447116989609664619[12] = 0.0;
   out_6447116989609664619[13] = 0.0;
   out_6447116989609664619[14] = 0.0;
   out_6447116989609664619[15] = 0.0;
   out_6447116989609664619[16] = 0.0;
   out_6447116989609664619[17] = 0.0;
   out_6447116989609664619[18] = 0.0;
   out_6447116989609664619[19] = 0.0;
   out_6447116989609664619[20] = 0.0;
   out_6447116989609664619[21] = 0;
   out_6447116989609664619[22] = 1.0;
   out_6447116989609664619[23] = 0;
   out_6447116989609664619[24] = 0.0;
   out_6447116989609664619[25] = 0.0;
   out_6447116989609664619[26] = 0.0;
   out_6447116989609664619[27] = 0.0;
   out_6447116989609664619[28] = 0.0;
   out_6447116989609664619[29] = 0.0;
   out_6447116989609664619[30] = 0.0;
   out_6447116989609664619[31] = 0.0;
   out_6447116989609664619[32] = 0.0;
   out_6447116989609664619[33] = 0.0;
   out_6447116989609664619[34] = 0.0;
   out_6447116989609664619[35] = 0.0;
   out_6447116989609664619[36] = 0.0;
   out_6447116989609664619[37] = 0.0;
   out_6447116989609664619[38] = 0.0;
   out_6447116989609664619[39] = 0.0;
   out_6447116989609664619[40] = 0.0;
   out_6447116989609664619[41] = 0.0;
   out_6447116989609664619[42] = 0;
   out_6447116989609664619[43] = 0;
   out_6447116989609664619[44] = 1.0;
   out_6447116989609664619[45] = 0.0;
   out_6447116989609664619[46] = 0.0;
   out_6447116989609664619[47] = 0.0;
   out_6447116989609664619[48] = 0.0;
   out_6447116989609664619[49] = 0.0;
   out_6447116989609664619[50] = 0.0;
   out_6447116989609664619[51] = 0.0;
   out_6447116989609664619[52] = 0.0;
   out_6447116989609664619[53] = 0.0;
   out_6447116989609664619[54] = 0.0;
   out_6447116989609664619[55] = 0.0;
   out_6447116989609664619[56] = 0.0;
   out_6447116989609664619[57] = 0.0;
   out_6447116989609664619[58] = 0.0;
   out_6447116989609664619[59] = 0.0;
   out_6447116989609664619[60] = 0.0;
   out_6447116989609664619[61] = 0.0;
   out_6447116989609664619[62] = 0.0;
   out_6447116989609664619[63] = 0.0;
   out_6447116989609664619[64] = 0.0;
   out_6447116989609664619[65] = 0.0;
   out_6447116989609664619[66] = -0.5*state[4];
   out_6447116989609664619[67] = -0.5*state[5];
   out_6447116989609664619[68] = -0.5*state[6];
   out_6447116989609664619[69] = 0.0;
   out_6447116989609664619[70] = 0.0;
   out_6447116989609664619[71] = 0.0;
   out_6447116989609664619[72] = 0.0;
   out_6447116989609664619[73] = 0.0;
   out_6447116989609664619[74] = 0.0;
   out_6447116989609664619[75] = 0.0;
   out_6447116989609664619[76] = 0.0;
   out_6447116989609664619[77] = 0.0;
   out_6447116989609664619[78] = 0.0;
   out_6447116989609664619[79] = 0.0;
   out_6447116989609664619[80] = 0.0;
   out_6447116989609664619[81] = 0.0;
   out_6447116989609664619[82] = 0.0;
   out_6447116989609664619[83] = 0.0;
   out_6447116989609664619[84] = 0.0;
   out_6447116989609664619[85] = 0.0;
   out_6447116989609664619[86] = 0.0;
   out_6447116989609664619[87] = 0.5*state[3];
   out_6447116989609664619[88] = 0.5*state[6];
   out_6447116989609664619[89] = -0.5*state[5];
   out_6447116989609664619[90] = 0.0;
   out_6447116989609664619[91] = 0.0;
   out_6447116989609664619[92] = 0.0;
   out_6447116989609664619[93] = 0.0;
   out_6447116989609664619[94] = 0.0;
   out_6447116989609664619[95] = 0.0;
   out_6447116989609664619[96] = 0.0;
   out_6447116989609664619[97] = 0.0;
   out_6447116989609664619[98] = 0.0;
   out_6447116989609664619[99] = 0.0;
   out_6447116989609664619[100] = 0.0;
   out_6447116989609664619[101] = 0.0;
   out_6447116989609664619[102] = 0.0;
   out_6447116989609664619[103] = 0.0;
   out_6447116989609664619[104] = 0.0;
   out_6447116989609664619[105] = 0.0;
   out_6447116989609664619[106] = 0.0;
   out_6447116989609664619[107] = 0.0;
   out_6447116989609664619[108] = -0.5*state[6];
   out_6447116989609664619[109] = 0.5*state[3];
   out_6447116989609664619[110] = 0.5*state[4];
   out_6447116989609664619[111] = 0.0;
   out_6447116989609664619[112] = 0.0;
   out_6447116989609664619[113] = 0.0;
   out_6447116989609664619[114] = 0.0;
   out_6447116989609664619[115] = 0.0;
   out_6447116989609664619[116] = 0.0;
   out_6447116989609664619[117] = 0.0;
   out_6447116989609664619[118] = 0.0;
   out_6447116989609664619[119] = 0.0;
   out_6447116989609664619[120] = 0.0;
   out_6447116989609664619[121] = 0.0;
   out_6447116989609664619[122] = 0.0;
   out_6447116989609664619[123] = 0.0;
   out_6447116989609664619[124] = 0.0;
   out_6447116989609664619[125] = 0.0;
   out_6447116989609664619[126] = 0.0;
   out_6447116989609664619[127] = 0.0;
   out_6447116989609664619[128] = 0.0;
   out_6447116989609664619[129] = 0.5*state[5];
   out_6447116989609664619[130] = -0.5*state[4];
   out_6447116989609664619[131] = 0.5*state[3];
   out_6447116989609664619[132] = 0.0;
   out_6447116989609664619[133] = 0.0;
   out_6447116989609664619[134] = 0.0;
   out_6447116989609664619[135] = 0.0;
   out_6447116989609664619[136] = 0.0;
   out_6447116989609664619[137] = 0.0;
   out_6447116989609664619[138] = 0.0;
   out_6447116989609664619[139] = 0.0;
   out_6447116989609664619[140] = 0.0;
   out_6447116989609664619[141] = 0.0;
   out_6447116989609664619[142] = 0.0;
   out_6447116989609664619[143] = 0.0;
   out_6447116989609664619[144] = 0.0;
   out_6447116989609664619[145] = 0.0;
   out_6447116989609664619[146] = 0.0;
   out_6447116989609664619[147] = 0.0;
   out_6447116989609664619[148] = 0.0;
   out_6447116989609664619[149] = 0.0;
   out_6447116989609664619[150] = 0.0;
   out_6447116989609664619[151] = 0.0;
   out_6447116989609664619[152] = 0.0;
   out_6447116989609664619[153] = 1.0;
   out_6447116989609664619[154] = 0;
   out_6447116989609664619[155] = 0;
   out_6447116989609664619[156] = 0;
   out_6447116989609664619[157] = 0;
   out_6447116989609664619[158] = 0;
   out_6447116989609664619[159] = 0;
   out_6447116989609664619[160] = 0;
   out_6447116989609664619[161] = 0;
   out_6447116989609664619[162] = 0;
   out_6447116989609664619[163] = 0;
   out_6447116989609664619[164] = 0;
   out_6447116989609664619[165] = 0;
   out_6447116989609664619[166] = 0;
   out_6447116989609664619[167] = 0;
   out_6447116989609664619[168] = 0.0;
   out_6447116989609664619[169] = 0.0;
   out_6447116989609664619[170] = 0.0;
   out_6447116989609664619[171] = 0.0;
   out_6447116989609664619[172] = 0.0;
   out_6447116989609664619[173] = 0.0;
   out_6447116989609664619[174] = 0;
   out_6447116989609664619[175] = 1.0;
   out_6447116989609664619[176] = 0;
   out_6447116989609664619[177] = 0;
   out_6447116989609664619[178] = 0;
   out_6447116989609664619[179] = 0;
   out_6447116989609664619[180] = 0;
   out_6447116989609664619[181] = 0;
   out_6447116989609664619[182] = 0;
   out_6447116989609664619[183] = 0;
   out_6447116989609664619[184] = 0;
   out_6447116989609664619[185] = 0;
   out_6447116989609664619[186] = 0;
   out_6447116989609664619[187] = 0;
   out_6447116989609664619[188] = 0;
   out_6447116989609664619[189] = 0.0;
   out_6447116989609664619[190] = 0.0;
   out_6447116989609664619[191] = 0.0;
   out_6447116989609664619[192] = 0.0;
   out_6447116989609664619[193] = 0.0;
   out_6447116989609664619[194] = 0.0;
   out_6447116989609664619[195] = 0;
   out_6447116989609664619[196] = 0;
   out_6447116989609664619[197] = 1.0;
   out_6447116989609664619[198] = 0;
   out_6447116989609664619[199] = 0;
   out_6447116989609664619[200] = 0;
   out_6447116989609664619[201] = 0;
   out_6447116989609664619[202] = 0;
   out_6447116989609664619[203] = 0;
   out_6447116989609664619[204] = 0;
   out_6447116989609664619[205] = 0;
   out_6447116989609664619[206] = 0;
   out_6447116989609664619[207] = 0;
   out_6447116989609664619[208] = 0;
   out_6447116989609664619[209] = 0;
   out_6447116989609664619[210] = 0.0;
   out_6447116989609664619[211] = 0.0;
   out_6447116989609664619[212] = 0.0;
   out_6447116989609664619[213] = 0.0;
   out_6447116989609664619[214] = 0.0;
   out_6447116989609664619[215] = 0.0;
   out_6447116989609664619[216] = 0;
   out_6447116989609664619[217] = 0;
   out_6447116989609664619[218] = 0;
   out_6447116989609664619[219] = 1.0;
   out_6447116989609664619[220] = 0;
   out_6447116989609664619[221] = 0;
   out_6447116989609664619[222] = 0;
   out_6447116989609664619[223] = 0;
   out_6447116989609664619[224] = 0;
   out_6447116989609664619[225] = 0;
   out_6447116989609664619[226] = 0;
   out_6447116989609664619[227] = 0;
   out_6447116989609664619[228] = 0;
   out_6447116989609664619[229] = 0;
   out_6447116989609664619[230] = 0;
   out_6447116989609664619[231] = 0.0;
   out_6447116989609664619[232] = 0.0;
   out_6447116989609664619[233] = 0.0;
   out_6447116989609664619[234] = 0.0;
   out_6447116989609664619[235] = 0.0;
   out_6447116989609664619[236] = 0.0;
   out_6447116989609664619[237] = 0;
   out_6447116989609664619[238] = 0;
   out_6447116989609664619[239] = 0;
   out_6447116989609664619[240] = 0;
   out_6447116989609664619[241] = 1.0;
   out_6447116989609664619[242] = 0;
   out_6447116989609664619[243] = 0;
   out_6447116989609664619[244] = 0;
   out_6447116989609664619[245] = 0;
   out_6447116989609664619[246] = 0;
   out_6447116989609664619[247] = 0;
   out_6447116989609664619[248] = 0;
   out_6447116989609664619[249] = 0;
   out_6447116989609664619[250] = 0;
   out_6447116989609664619[251] = 0;
   out_6447116989609664619[252] = 0.0;
   out_6447116989609664619[253] = 0.0;
   out_6447116989609664619[254] = 0.0;
   out_6447116989609664619[255] = 0.0;
   out_6447116989609664619[256] = 0.0;
   out_6447116989609664619[257] = 0.0;
   out_6447116989609664619[258] = 0;
   out_6447116989609664619[259] = 0;
   out_6447116989609664619[260] = 0;
   out_6447116989609664619[261] = 0;
   out_6447116989609664619[262] = 0;
   out_6447116989609664619[263] = 1.0;
   out_6447116989609664619[264] = 0;
   out_6447116989609664619[265] = 0;
   out_6447116989609664619[266] = 0;
   out_6447116989609664619[267] = 0;
   out_6447116989609664619[268] = 0;
   out_6447116989609664619[269] = 0;
   out_6447116989609664619[270] = 0;
   out_6447116989609664619[271] = 0;
   out_6447116989609664619[272] = 0;
   out_6447116989609664619[273] = 0.0;
   out_6447116989609664619[274] = 0.0;
   out_6447116989609664619[275] = 0.0;
   out_6447116989609664619[276] = 0.0;
   out_6447116989609664619[277] = 0.0;
   out_6447116989609664619[278] = 0.0;
   out_6447116989609664619[279] = 0;
   out_6447116989609664619[280] = 0;
   out_6447116989609664619[281] = 0;
   out_6447116989609664619[282] = 0;
   out_6447116989609664619[283] = 0;
   out_6447116989609664619[284] = 0;
   out_6447116989609664619[285] = 1.0;
   out_6447116989609664619[286] = 0;
   out_6447116989609664619[287] = 0;
   out_6447116989609664619[288] = 0;
   out_6447116989609664619[289] = 0;
   out_6447116989609664619[290] = 0;
   out_6447116989609664619[291] = 0;
   out_6447116989609664619[292] = 0;
   out_6447116989609664619[293] = 0;
   out_6447116989609664619[294] = 0.0;
   out_6447116989609664619[295] = 0.0;
   out_6447116989609664619[296] = 0.0;
   out_6447116989609664619[297] = 0.0;
   out_6447116989609664619[298] = 0.0;
   out_6447116989609664619[299] = 0.0;
   out_6447116989609664619[300] = 0;
   out_6447116989609664619[301] = 0;
   out_6447116989609664619[302] = 0;
   out_6447116989609664619[303] = 0;
   out_6447116989609664619[304] = 0;
   out_6447116989609664619[305] = 0;
   out_6447116989609664619[306] = 0;
   out_6447116989609664619[307] = 1.0;
   out_6447116989609664619[308] = 0;
   out_6447116989609664619[309] = 0;
   out_6447116989609664619[310] = 0;
   out_6447116989609664619[311] = 0;
   out_6447116989609664619[312] = 0;
   out_6447116989609664619[313] = 0;
   out_6447116989609664619[314] = 0;
   out_6447116989609664619[315] = 0.0;
   out_6447116989609664619[316] = 0.0;
   out_6447116989609664619[317] = 0.0;
   out_6447116989609664619[318] = 0.0;
   out_6447116989609664619[319] = 0.0;
   out_6447116989609664619[320] = 0.0;
   out_6447116989609664619[321] = 0;
   out_6447116989609664619[322] = 0;
   out_6447116989609664619[323] = 0;
   out_6447116989609664619[324] = 0;
   out_6447116989609664619[325] = 0;
   out_6447116989609664619[326] = 0;
   out_6447116989609664619[327] = 0;
   out_6447116989609664619[328] = 0;
   out_6447116989609664619[329] = 1.0;
   out_6447116989609664619[330] = 0;
   out_6447116989609664619[331] = 0;
   out_6447116989609664619[332] = 0;
   out_6447116989609664619[333] = 0;
   out_6447116989609664619[334] = 0;
   out_6447116989609664619[335] = 0;
   out_6447116989609664619[336] = 0.0;
   out_6447116989609664619[337] = 0.0;
   out_6447116989609664619[338] = 0.0;
   out_6447116989609664619[339] = 0.0;
   out_6447116989609664619[340] = 0.0;
   out_6447116989609664619[341] = 0.0;
   out_6447116989609664619[342] = 0;
   out_6447116989609664619[343] = 0;
   out_6447116989609664619[344] = 0;
   out_6447116989609664619[345] = 0;
   out_6447116989609664619[346] = 0;
   out_6447116989609664619[347] = 0;
   out_6447116989609664619[348] = 0;
   out_6447116989609664619[349] = 0;
   out_6447116989609664619[350] = 0;
   out_6447116989609664619[351] = 1.0;
   out_6447116989609664619[352] = 0;
   out_6447116989609664619[353] = 0;
   out_6447116989609664619[354] = 0;
   out_6447116989609664619[355] = 0;
   out_6447116989609664619[356] = 0;
   out_6447116989609664619[357] = 0.0;
   out_6447116989609664619[358] = 0.0;
   out_6447116989609664619[359] = 0.0;
   out_6447116989609664619[360] = 0.0;
   out_6447116989609664619[361] = 0.0;
   out_6447116989609664619[362] = 0.0;
   out_6447116989609664619[363] = 0;
   out_6447116989609664619[364] = 0;
   out_6447116989609664619[365] = 0;
   out_6447116989609664619[366] = 0;
   out_6447116989609664619[367] = 0;
   out_6447116989609664619[368] = 0;
   out_6447116989609664619[369] = 0;
   out_6447116989609664619[370] = 0;
   out_6447116989609664619[371] = 0;
   out_6447116989609664619[372] = 0;
   out_6447116989609664619[373] = 1.0;
   out_6447116989609664619[374] = 0;
   out_6447116989609664619[375] = 0;
   out_6447116989609664619[376] = 0;
   out_6447116989609664619[377] = 0;
   out_6447116989609664619[378] = 0.0;
   out_6447116989609664619[379] = 0.0;
   out_6447116989609664619[380] = 0.0;
   out_6447116989609664619[381] = 0.0;
   out_6447116989609664619[382] = 0.0;
   out_6447116989609664619[383] = 0.0;
   out_6447116989609664619[384] = 0;
   out_6447116989609664619[385] = 0;
   out_6447116989609664619[386] = 0;
   out_6447116989609664619[387] = 0;
   out_6447116989609664619[388] = 0;
   out_6447116989609664619[389] = 0;
   out_6447116989609664619[390] = 0;
   out_6447116989609664619[391] = 0;
   out_6447116989609664619[392] = 0;
   out_6447116989609664619[393] = 0;
   out_6447116989609664619[394] = 0;
   out_6447116989609664619[395] = 1.0;
   out_6447116989609664619[396] = 0;
   out_6447116989609664619[397] = 0;
   out_6447116989609664619[398] = 0;
   out_6447116989609664619[399] = 0.0;
   out_6447116989609664619[400] = 0.0;
   out_6447116989609664619[401] = 0.0;
   out_6447116989609664619[402] = 0.0;
   out_6447116989609664619[403] = 0.0;
   out_6447116989609664619[404] = 0.0;
   out_6447116989609664619[405] = 0;
   out_6447116989609664619[406] = 0;
   out_6447116989609664619[407] = 0;
   out_6447116989609664619[408] = 0;
   out_6447116989609664619[409] = 0;
   out_6447116989609664619[410] = 0;
   out_6447116989609664619[411] = 0;
   out_6447116989609664619[412] = 0;
   out_6447116989609664619[413] = 0;
   out_6447116989609664619[414] = 0;
   out_6447116989609664619[415] = 0;
   out_6447116989609664619[416] = 0;
   out_6447116989609664619[417] = 1.0;
   out_6447116989609664619[418] = 0;
   out_6447116989609664619[419] = 0;
   out_6447116989609664619[420] = 0.0;
   out_6447116989609664619[421] = 0.0;
   out_6447116989609664619[422] = 0.0;
   out_6447116989609664619[423] = 0.0;
   out_6447116989609664619[424] = 0.0;
   out_6447116989609664619[425] = 0.0;
   out_6447116989609664619[426] = 0;
   out_6447116989609664619[427] = 0;
   out_6447116989609664619[428] = 0;
   out_6447116989609664619[429] = 0;
   out_6447116989609664619[430] = 0;
   out_6447116989609664619[431] = 0;
   out_6447116989609664619[432] = 0;
   out_6447116989609664619[433] = 0;
   out_6447116989609664619[434] = 0;
   out_6447116989609664619[435] = 0;
   out_6447116989609664619[436] = 0;
   out_6447116989609664619[437] = 0;
   out_6447116989609664619[438] = 0;
   out_6447116989609664619[439] = 1.0;
   out_6447116989609664619[440] = 0;
   out_6447116989609664619[441] = 0.0;
   out_6447116989609664619[442] = 0.0;
   out_6447116989609664619[443] = 0.0;
   out_6447116989609664619[444] = 0.0;
   out_6447116989609664619[445] = 0.0;
   out_6447116989609664619[446] = 0.0;
   out_6447116989609664619[447] = 0;
   out_6447116989609664619[448] = 0;
   out_6447116989609664619[449] = 0;
   out_6447116989609664619[450] = 0;
   out_6447116989609664619[451] = 0;
   out_6447116989609664619[452] = 0;
   out_6447116989609664619[453] = 0;
   out_6447116989609664619[454] = 0;
   out_6447116989609664619[455] = 0;
   out_6447116989609664619[456] = 0;
   out_6447116989609664619[457] = 0;
   out_6447116989609664619[458] = 0;
   out_6447116989609664619[459] = 0;
   out_6447116989609664619[460] = 0;
   out_6447116989609664619[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_342877095328119037) {
   out_342877095328119037[0] = dt*state[7] + state[0];
   out_342877095328119037[1] = dt*state[8] + state[1];
   out_342877095328119037[2] = dt*state[9] + state[2];
   out_342877095328119037[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_342877095328119037[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_342877095328119037[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_342877095328119037[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_342877095328119037[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_342877095328119037[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_342877095328119037[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_342877095328119037[10] = state[10];
   out_342877095328119037[11] = state[11];
   out_342877095328119037[12] = state[12];
   out_342877095328119037[13] = state[13];
   out_342877095328119037[14] = state[14];
   out_342877095328119037[15] = state[15];
   out_342877095328119037[16] = state[16];
   out_342877095328119037[17] = state[17];
   out_342877095328119037[18] = state[18];
   out_342877095328119037[19] = state[19];
   out_342877095328119037[20] = state[20];
   out_342877095328119037[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8253129903815406582) {
   out_8253129903815406582[0] = 1;
   out_8253129903815406582[1] = 0;
   out_8253129903815406582[2] = 0;
   out_8253129903815406582[3] = 0;
   out_8253129903815406582[4] = 0;
   out_8253129903815406582[5] = 0;
   out_8253129903815406582[6] = dt;
   out_8253129903815406582[7] = 0;
   out_8253129903815406582[8] = 0;
   out_8253129903815406582[9] = 0;
   out_8253129903815406582[10] = 0;
   out_8253129903815406582[11] = 0;
   out_8253129903815406582[12] = 0;
   out_8253129903815406582[13] = 0;
   out_8253129903815406582[14] = 0;
   out_8253129903815406582[15] = 0;
   out_8253129903815406582[16] = 0;
   out_8253129903815406582[17] = 0;
   out_8253129903815406582[18] = 0;
   out_8253129903815406582[19] = 0;
   out_8253129903815406582[20] = 0;
   out_8253129903815406582[21] = 0;
   out_8253129903815406582[22] = 1;
   out_8253129903815406582[23] = 0;
   out_8253129903815406582[24] = 0;
   out_8253129903815406582[25] = 0;
   out_8253129903815406582[26] = 0;
   out_8253129903815406582[27] = 0;
   out_8253129903815406582[28] = dt;
   out_8253129903815406582[29] = 0;
   out_8253129903815406582[30] = 0;
   out_8253129903815406582[31] = 0;
   out_8253129903815406582[32] = 0;
   out_8253129903815406582[33] = 0;
   out_8253129903815406582[34] = 0;
   out_8253129903815406582[35] = 0;
   out_8253129903815406582[36] = 0;
   out_8253129903815406582[37] = 0;
   out_8253129903815406582[38] = 0;
   out_8253129903815406582[39] = 0;
   out_8253129903815406582[40] = 0;
   out_8253129903815406582[41] = 0;
   out_8253129903815406582[42] = 0;
   out_8253129903815406582[43] = 0;
   out_8253129903815406582[44] = 1;
   out_8253129903815406582[45] = 0;
   out_8253129903815406582[46] = 0;
   out_8253129903815406582[47] = 0;
   out_8253129903815406582[48] = 0;
   out_8253129903815406582[49] = 0;
   out_8253129903815406582[50] = dt;
   out_8253129903815406582[51] = 0;
   out_8253129903815406582[52] = 0;
   out_8253129903815406582[53] = 0;
   out_8253129903815406582[54] = 0;
   out_8253129903815406582[55] = 0;
   out_8253129903815406582[56] = 0;
   out_8253129903815406582[57] = 0;
   out_8253129903815406582[58] = 0;
   out_8253129903815406582[59] = 0;
   out_8253129903815406582[60] = 0;
   out_8253129903815406582[61] = 0;
   out_8253129903815406582[62] = 0;
   out_8253129903815406582[63] = 0;
   out_8253129903815406582[64] = 0;
   out_8253129903815406582[65] = 0;
   out_8253129903815406582[66] = 1;
   out_8253129903815406582[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8253129903815406582[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8253129903815406582[69] = 0;
   out_8253129903815406582[70] = 0;
   out_8253129903815406582[71] = 0;
   out_8253129903815406582[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8253129903815406582[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8253129903815406582[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8253129903815406582[75] = 0;
   out_8253129903815406582[76] = 0;
   out_8253129903815406582[77] = 0;
   out_8253129903815406582[78] = 0;
   out_8253129903815406582[79] = 0;
   out_8253129903815406582[80] = 0;
   out_8253129903815406582[81] = 0;
   out_8253129903815406582[82] = 0;
   out_8253129903815406582[83] = 0;
   out_8253129903815406582[84] = 0;
   out_8253129903815406582[85] = 0;
   out_8253129903815406582[86] = 0;
   out_8253129903815406582[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8253129903815406582[88] = 1;
   out_8253129903815406582[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8253129903815406582[90] = 0;
   out_8253129903815406582[91] = 0;
   out_8253129903815406582[92] = 0;
   out_8253129903815406582[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8253129903815406582[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8253129903815406582[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8253129903815406582[96] = 0;
   out_8253129903815406582[97] = 0;
   out_8253129903815406582[98] = 0;
   out_8253129903815406582[99] = 0;
   out_8253129903815406582[100] = 0;
   out_8253129903815406582[101] = 0;
   out_8253129903815406582[102] = 0;
   out_8253129903815406582[103] = 0;
   out_8253129903815406582[104] = 0;
   out_8253129903815406582[105] = 0;
   out_8253129903815406582[106] = 0;
   out_8253129903815406582[107] = 0;
   out_8253129903815406582[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8253129903815406582[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8253129903815406582[110] = 1;
   out_8253129903815406582[111] = 0;
   out_8253129903815406582[112] = 0;
   out_8253129903815406582[113] = 0;
   out_8253129903815406582[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8253129903815406582[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8253129903815406582[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8253129903815406582[117] = 0;
   out_8253129903815406582[118] = 0;
   out_8253129903815406582[119] = 0;
   out_8253129903815406582[120] = 0;
   out_8253129903815406582[121] = 0;
   out_8253129903815406582[122] = 0;
   out_8253129903815406582[123] = 0;
   out_8253129903815406582[124] = 0;
   out_8253129903815406582[125] = 0;
   out_8253129903815406582[126] = 0;
   out_8253129903815406582[127] = 0;
   out_8253129903815406582[128] = 0;
   out_8253129903815406582[129] = 0;
   out_8253129903815406582[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8253129903815406582[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8253129903815406582[132] = 1;
   out_8253129903815406582[133] = 0;
   out_8253129903815406582[134] = 0;
   out_8253129903815406582[135] = 0;
   out_8253129903815406582[136] = 0;
   out_8253129903815406582[137] = 0;
   out_8253129903815406582[138] = 0;
   out_8253129903815406582[139] = 0;
   out_8253129903815406582[140] = 0;
   out_8253129903815406582[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8253129903815406582[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8253129903815406582[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8253129903815406582[144] = 0;
   out_8253129903815406582[145] = 0;
   out_8253129903815406582[146] = 0;
   out_8253129903815406582[147] = 0;
   out_8253129903815406582[148] = 0;
   out_8253129903815406582[149] = 0;
   out_8253129903815406582[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8253129903815406582[151] = 0;
   out_8253129903815406582[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8253129903815406582[153] = 0;
   out_8253129903815406582[154] = 1;
   out_8253129903815406582[155] = 0;
   out_8253129903815406582[156] = 0;
   out_8253129903815406582[157] = 0;
   out_8253129903815406582[158] = 0;
   out_8253129903815406582[159] = 0;
   out_8253129903815406582[160] = 0;
   out_8253129903815406582[161] = 0;
   out_8253129903815406582[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8253129903815406582[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8253129903815406582[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8253129903815406582[165] = 0;
   out_8253129903815406582[166] = 0;
   out_8253129903815406582[167] = 0;
   out_8253129903815406582[168] = 0;
   out_8253129903815406582[169] = 0;
   out_8253129903815406582[170] = 0;
   out_8253129903815406582[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8253129903815406582[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8253129903815406582[173] = 0;
   out_8253129903815406582[174] = 0;
   out_8253129903815406582[175] = 0;
   out_8253129903815406582[176] = 1;
   out_8253129903815406582[177] = 0;
   out_8253129903815406582[178] = 0;
   out_8253129903815406582[179] = 0;
   out_8253129903815406582[180] = 0;
   out_8253129903815406582[181] = 0;
   out_8253129903815406582[182] = 0;
   out_8253129903815406582[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8253129903815406582[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8253129903815406582[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8253129903815406582[186] = 0;
   out_8253129903815406582[187] = 0;
   out_8253129903815406582[188] = 0;
   out_8253129903815406582[189] = 0;
   out_8253129903815406582[190] = 0;
   out_8253129903815406582[191] = 0;
   out_8253129903815406582[192] = 0;
   out_8253129903815406582[193] = 0;
   out_8253129903815406582[194] = 0;
   out_8253129903815406582[195] = 0;
   out_8253129903815406582[196] = 0;
   out_8253129903815406582[197] = 0;
   out_8253129903815406582[198] = 1;
   out_8253129903815406582[199] = 0;
   out_8253129903815406582[200] = 0;
   out_8253129903815406582[201] = 0;
   out_8253129903815406582[202] = 0;
   out_8253129903815406582[203] = 0;
   out_8253129903815406582[204] = 0;
   out_8253129903815406582[205] = 0;
   out_8253129903815406582[206] = 0;
   out_8253129903815406582[207] = 0;
   out_8253129903815406582[208] = 0;
   out_8253129903815406582[209] = 0;
   out_8253129903815406582[210] = 0;
   out_8253129903815406582[211] = 0;
   out_8253129903815406582[212] = 0;
   out_8253129903815406582[213] = 0;
   out_8253129903815406582[214] = 0;
   out_8253129903815406582[215] = 0;
   out_8253129903815406582[216] = 0;
   out_8253129903815406582[217] = 0;
   out_8253129903815406582[218] = 0;
   out_8253129903815406582[219] = 0;
   out_8253129903815406582[220] = 1;
   out_8253129903815406582[221] = 0;
   out_8253129903815406582[222] = 0;
   out_8253129903815406582[223] = 0;
   out_8253129903815406582[224] = 0;
   out_8253129903815406582[225] = 0;
   out_8253129903815406582[226] = 0;
   out_8253129903815406582[227] = 0;
   out_8253129903815406582[228] = 0;
   out_8253129903815406582[229] = 0;
   out_8253129903815406582[230] = 0;
   out_8253129903815406582[231] = 0;
   out_8253129903815406582[232] = 0;
   out_8253129903815406582[233] = 0;
   out_8253129903815406582[234] = 0;
   out_8253129903815406582[235] = 0;
   out_8253129903815406582[236] = 0;
   out_8253129903815406582[237] = 0;
   out_8253129903815406582[238] = 0;
   out_8253129903815406582[239] = 0;
   out_8253129903815406582[240] = 0;
   out_8253129903815406582[241] = 0;
   out_8253129903815406582[242] = 1;
   out_8253129903815406582[243] = 0;
   out_8253129903815406582[244] = 0;
   out_8253129903815406582[245] = 0;
   out_8253129903815406582[246] = 0;
   out_8253129903815406582[247] = 0;
   out_8253129903815406582[248] = 0;
   out_8253129903815406582[249] = 0;
   out_8253129903815406582[250] = 0;
   out_8253129903815406582[251] = 0;
   out_8253129903815406582[252] = 0;
   out_8253129903815406582[253] = 0;
   out_8253129903815406582[254] = 0;
   out_8253129903815406582[255] = 0;
   out_8253129903815406582[256] = 0;
   out_8253129903815406582[257] = 0;
   out_8253129903815406582[258] = 0;
   out_8253129903815406582[259] = 0;
   out_8253129903815406582[260] = 0;
   out_8253129903815406582[261] = 0;
   out_8253129903815406582[262] = 0;
   out_8253129903815406582[263] = 0;
   out_8253129903815406582[264] = 1;
   out_8253129903815406582[265] = 0;
   out_8253129903815406582[266] = 0;
   out_8253129903815406582[267] = 0;
   out_8253129903815406582[268] = 0;
   out_8253129903815406582[269] = 0;
   out_8253129903815406582[270] = 0;
   out_8253129903815406582[271] = 0;
   out_8253129903815406582[272] = 0;
   out_8253129903815406582[273] = 0;
   out_8253129903815406582[274] = 0;
   out_8253129903815406582[275] = 0;
   out_8253129903815406582[276] = 0;
   out_8253129903815406582[277] = 0;
   out_8253129903815406582[278] = 0;
   out_8253129903815406582[279] = 0;
   out_8253129903815406582[280] = 0;
   out_8253129903815406582[281] = 0;
   out_8253129903815406582[282] = 0;
   out_8253129903815406582[283] = 0;
   out_8253129903815406582[284] = 0;
   out_8253129903815406582[285] = 0;
   out_8253129903815406582[286] = 1;
   out_8253129903815406582[287] = 0;
   out_8253129903815406582[288] = 0;
   out_8253129903815406582[289] = 0;
   out_8253129903815406582[290] = 0;
   out_8253129903815406582[291] = 0;
   out_8253129903815406582[292] = 0;
   out_8253129903815406582[293] = 0;
   out_8253129903815406582[294] = 0;
   out_8253129903815406582[295] = 0;
   out_8253129903815406582[296] = 0;
   out_8253129903815406582[297] = 0;
   out_8253129903815406582[298] = 0;
   out_8253129903815406582[299] = 0;
   out_8253129903815406582[300] = 0;
   out_8253129903815406582[301] = 0;
   out_8253129903815406582[302] = 0;
   out_8253129903815406582[303] = 0;
   out_8253129903815406582[304] = 0;
   out_8253129903815406582[305] = 0;
   out_8253129903815406582[306] = 0;
   out_8253129903815406582[307] = 0;
   out_8253129903815406582[308] = 1;
   out_8253129903815406582[309] = 0;
   out_8253129903815406582[310] = 0;
   out_8253129903815406582[311] = 0;
   out_8253129903815406582[312] = 0;
   out_8253129903815406582[313] = 0;
   out_8253129903815406582[314] = 0;
   out_8253129903815406582[315] = 0;
   out_8253129903815406582[316] = 0;
   out_8253129903815406582[317] = 0;
   out_8253129903815406582[318] = 0;
   out_8253129903815406582[319] = 0;
   out_8253129903815406582[320] = 0;
   out_8253129903815406582[321] = 0;
   out_8253129903815406582[322] = 0;
   out_8253129903815406582[323] = 0;
   out_8253129903815406582[324] = 0;
   out_8253129903815406582[325] = 0;
   out_8253129903815406582[326] = 0;
   out_8253129903815406582[327] = 0;
   out_8253129903815406582[328] = 0;
   out_8253129903815406582[329] = 0;
   out_8253129903815406582[330] = 1;
   out_8253129903815406582[331] = 0;
   out_8253129903815406582[332] = 0;
   out_8253129903815406582[333] = 0;
   out_8253129903815406582[334] = 0;
   out_8253129903815406582[335] = 0;
   out_8253129903815406582[336] = 0;
   out_8253129903815406582[337] = 0;
   out_8253129903815406582[338] = 0;
   out_8253129903815406582[339] = 0;
   out_8253129903815406582[340] = 0;
   out_8253129903815406582[341] = 0;
   out_8253129903815406582[342] = 0;
   out_8253129903815406582[343] = 0;
   out_8253129903815406582[344] = 0;
   out_8253129903815406582[345] = 0;
   out_8253129903815406582[346] = 0;
   out_8253129903815406582[347] = 0;
   out_8253129903815406582[348] = 0;
   out_8253129903815406582[349] = 0;
   out_8253129903815406582[350] = 0;
   out_8253129903815406582[351] = 0;
   out_8253129903815406582[352] = 1;
   out_8253129903815406582[353] = 0;
   out_8253129903815406582[354] = 0;
   out_8253129903815406582[355] = 0;
   out_8253129903815406582[356] = 0;
   out_8253129903815406582[357] = 0;
   out_8253129903815406582[358] = 0;
   out_8253129903815406582[359] = 0;
   out_8253129903815406582[360] = 0;
   out_8253129903815406582[361] = 0;
   out_8253129903815406582[362] = 0;
   out_8253129903815406582[363] = 0;
   out_8253129903815406582[364] = 0;
   out_8253129903815406582[365] = 0;
   out_8253129903815406582[366] = 0;
   out_8253129903815406582[367] = 0;
   out_8253129903815406582[368] = 0;
   out_8253129903815406582[369] = 0;
   out_8253129903815406582[370] = 0;
   out_8253129903815406582[371] = 0;
   out_8253129903815406582[372] = 0;
   out_8253129903815406582[373] = 0;
   out_8253129903815406582[374] = 1;
   out_8253129903815406582[375] = 0;
   out_8253129903815406582[376] = 0;
   out_8253129903815406582[377] = 0;
   out_8253129903815406582[378] = 0;
   out_8253129903815406582[379] = 0;
   out_8253129903815406582[380] = 0;
   out_8253129903815406582[381] = 0;
   out_8253129903815406582[382] = 0;
   out_8253129903815406582[383] = 0;
   out_8253129903815406582[384] = 0;
   out_8253129903815406582[385] = 0;
   out_8253129903815406582[386] = 0;
   out_8253129903815406582[387] = 0;
   out_8253129903815406582[388] = 0;
   out_8253129903815406582[389] = 0;
   out_8253129903815406582[390] = 0;
   out_8253129903815406582[391] = 0;
   out_8253129903815406582[392] = 0;
   out_8253129903815406582[393] = 0;
   out_8253129903815406582[394] = 0;
   out_8253129903815406582[395] = 0;
   out_8253129903815406582[396] = 1;
   out_8253129903815406582[397] = 0;
   out_8253129903815406582[398] = 0;
   out_8253129903815406582[399] = 0;
   out_8253129903815406582[400] = 0;
   out_8253129903815406582[401] = 0;
   out_8253129903815406582[402] = 0;
   out_8253129903815406582[403] = 0;
   out_8253129903815406582[404] = 0;
   out_8253129903815406582[405] = 0;
   out_8253129903815406582[406] = 0;
   out_8253129903815406582[407] = 0;
   out_8253129903815406582[408] = 0;
   out_8253129903815406582[409] = 0;
   out_8253129903815406582[410] = 0;
   out_8253129903815406582[411] = 0;
   out_8253129903815406582[412] = 0;
   out_8253129903815406582[413] = 0;
   out_8253129903815406582[414] = 0;
   out_8253129903815406582[415] = 0;
   out_8253129903815406582[416] = 0;
   out_8253129903815406582[417] = 0;
   out_8253129903815406582[418] = 1;
   out_8253129903815406582[419] = 0;
   out_8253129903815406582[420] = 0;
   out_8253129903815406582[421] = 0;
   out_8253129903815406582[422] = 0;
   out_8253129903815406582[423] = 0;
   out_8253129903815406582[424] = 0;
   out_8253129903815406582[425] = 0;
   out_8253129903815406582[426] = 0;
   out_8253129903815406582[427] = 0;
   out_8253129903815406582[428] = 0;
   out_8253129903815406582[429] = 0;
   out_8253129903815406582[430] = 0;
   out_8253129903815406582[431] = 0;
   out_8253129903815406582[432] = 0;
   out_8253129903815406582[433] = 0;
   out_8253129903815406582[434] = 0;
   out_8253129903815406582[435] = 0;
   out_8253129903815406582[436] = 0;
   out_8253129903815406582[437] = 0;
   out_8253129903815406582[438] = 0;
   out_8253129903815406582[439] = 0;
   out_8253129903815406582[440] = 1;
}
void h_4(double *state, double *unused, double *out_867594404448767272) {
   out_867594404448767272[0] = state[10] + state[13];
   out_867594404448767272[1] = state[11] + state[14];
   out_867594404448767272[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8400184455233509659) {
   out_8400184455233509659[0] = 0;
   out_8400184455233509659[1] = 0;
   out_8400184455233509659[2] = 0;
   out_8400184455233509659[3] = 0;
   out_8400184455233509659[4] = 0;
   out_8400184455233509659[5] = 0;
   out_8400184455233509659[6] = 0;
   out_8400184455233509659[7] = 0;
   out_8400184455233509659[8] = 0;
   out_8400184455233509659[9] = 0;
   out_8400184455233509659[10] = 1;
   out_8400184455233509659[11] = 0;
   out_8400184455233509659[12] = 0;
   out_8400184455233509659[13] = 1;
   out_8400184455233509659[14] = 0;
   out_8400184455233509659[15] = 0;
   out_8400184455233509659[16] = 0;
   out_8400184455233509659[17] = 0;
   out_8400184455233509659[18] = 0;
   out_8400184455233509659[19] = 0;
   out_8400184455233509659[20] = 0;
   out_8400184455233509659[21] = 0;
   out_8400184455233509659[22] = 0;
   out_8400184455233509659[23] = 0;
   out_8400184455233509659[24] = 0;
   out_8400184455233509659[25] = 0;
   out_8400184455233509659[26] = 0;
   out_8400184455233509659[27] = 0;
   out_8400184455233509659[28] = 0;
   out_8400184455233509659[29] = 0;
   out_8400184455233509659[30] = 0;
   out_8400184455233509659[31] = 0;
   out_8400184455233509659[32] = 0;
   out_8400184455233509659[33] = 1;
   out_8400184455233509659[34] = 0;
   out_8400184455233509659[35] = 0;
   out_8400184455233509659[36] = 1;
   out_8400184455233509659[37] = 0;
   out_8400184455233509659[38] = 0;
   out_8400184455233509659[39] = 0;
   out_8400184455233509659[40] = 0;
   out_8400184455233509659[41] = 0;
   out_8400184455233509659[42] = 0;
   out_8400184455233509659[43] = 0;
   out_8400184455233509659[44] = 0;
   out_8400184455233509659[45] = 0;
   out_8400184455233509659[46] = 0;
   out_8400184455233509659[47] = 0;
   out_8400184455233509659[48] = 0;
   out_8400184455233509659[49] = 0;
   out_8400184455233509659[50] = 0;
   out_8400184455233509659[51] = 0;
   out_8400184455233509659[52] = 0;
   out_8400184455233509659[53] = 0;
   out_8400184455233509659[54] = 0;
   out_8400184455233509659[55] = 0;
   out_8400184455233509659[56] = 1;
   out_8400184455233509659[57] = 0;
   out_8400184455233509659[58] = 0;
   out_8400184455233509659[59] = 1;
   out_8400184455233509659[60] = 0;
   out_8400184455233509659[61] = 0;
   out_8400184455233509659[62] = 0;
   out_8400184455233509659[63] = 0;
   out_8400184455233509659[64] = 0;
   out_8400184455233509659[65] = 0;
}
void h_9(double *state, double *unused, double *out_371672585217068510) {
   out_371672585217068510[0] = state[10];
   out_371672585217068510[1] = state[11];
   out_371672585217068510[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1112965519969062189) {
   out_1112965519969062189[0] = 0;
   out_1112965519969062189[1] = 0;
   out_1112965519969062189[2] = 0;
   out_1112965519969062189[3] = 0;
   out_1112965519969062189[4] = 0;
   out_1112965519969062189[5] = 0;
   out_1112965519969062189[6] = 0;
   out_1112965519969062189[7] = 0;
   out_1112965519969062189[8] = 0;
   out_1112965519969062189[9] = 0;
   out_1112965519969062189[10] = 1;
   out_1112965519969062189[11] = 0;
   out_1112965519969062189[12] = 0;
   out_1112965519969062189[13] = 0;
   out_1112965519969062189[14] = 0;
   out_1112965519969062189[15] = 0;
   out_1112965519969062189[16] = 0;
   out_1112965519969062189[17] = 0;
   out_1112965519969062189[18] = 0;
   out_1112965519969062189[19] = 0;
   out_1112965519969062189[20] = 0;
   out_1112965519969062189[21] = 0;
   out_1112965519969062189[22] = 0;
   out_1112965519969062189[23] = 0;
   out_1112965519969062189[24] = 0;
   out_1112965519969062189[25] = 0;
   out_1112965519969062189[26] = 0;
   out_1112965519969062189[27] = 0;
   out_1112965519969062189[28] = 0;
   out_1112965519969062189[29] = 0;
   out_1112965519969062189[30] = 0;
   out_1112965519969062189[31] = 0;
   out_1112965519969062189[32] = 0;
   out_1112965519969062189[33] = 1;
   out_1112965519969062189[34] = 0;
   out_1112965519969062189[35] = 0;
   out_1112965519969062189[36] = 0;
   out_1112965519969062189[37] = 0;
   out_1112965519969062189[38] = 0;
   out_1112965519969062189[39] = 0;
   out_1112965519969062189[40] = 0;
   out_1112965519969062189[41] = 0;
   out_1112965519969062189[42] = 0;
   out_1112965519969062189[43] = 0;
   out_1112965519969062189[44] = 0;
   out_1112965519969062189[45] = 0;
   out_1112965519969062189[46] = 0;
   out_1112965519969062189[47] = 0;
   out_1112965519969062189[48] = 0;
   out_1112965519969062189[49] = 0;
   out_1112965519969062189[50] = 0;
   out_1112965519969062189[51] = 0;
   out_1112965519969062189[52] = 0;
   out_1112965519969062189[53] = 0;
   out_1112965519969062189[54] = 0;
   out_1112965519969062189[55] = 0;
   out_1112965519969062189[56] = 1;
   out_1112965519969062189[57] = 0;
   out_1112965519969062189[58] = 0;
   out_1112965519969062189[59] = 0;
   out_1112965519969062189[60] = 0;
   out_1112965519969062189[61] = 0;
   out_1112965519969062189[62] = 0;
   out_1112965519969062189[63] = 0;
   out_1112965519969062189[64] = 0;
   out_1112965519969062189[65] = 0;
}
void h_10(double *state, double *unused, double *out_8346954944710380205) {
   out_8346954944710380205[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8346954944710380205[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8346954944710380205[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_568806180655431122) {
   out_568806180655431122[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_568806180655431122[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_568806180655431122[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_568806180655431122[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_568806180655431122[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_568806180655431122[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_568806180655431122[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_568806180655431122[7] = 0;
   out_568806180655431122[8] = 0;
   out_568806180655431122[9] = 0;
   out_568806180655431122[10] = 0;
   out_568806180655431122[11] = 0;
   out_568806180655431122[12] = 0;
   out_568806180655431122[13] = 0;
   out_568806180655431122[14] = 0;
   out_568806180655431122[15] = 0;
   out_568806180655431122[16] = 1;
   out_568806180655431122[17] = 0;
   out_568806180655431122[18] = 0;
   out_568806180655431122[19] = 1;
   out_568806180655431122[20] = 0;
   out_568806180655431122[21] = 0;
   out_568806180655431122[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_568806180655431122[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_568806180655431122[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_568806180655431122[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_568806180655431122[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_568806180655431122[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_568806180655431122[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_568806180655431122[29] = 0;
   out_568806180655431122[30] = 0;
   out_568806180655431122[31] = 0;
   out_568806180655431122[32] = 0;
   out_568806180655431122[33] = 0;
   out_568806180655431122[34] = 0;
   out_568806180655431122[35] = 0;
   out_568806180655431122[36] = 0;
   out_568806180655431122[37] = 0;
   out_568806180655431122[38] = 0;
   out_568806180655431122[39] = 1;
   out_568806180655431122[40] = 0;
   out_568806180655431122[41] = 0;
   out_568806180655431122[42] = 1;
   out_568806180655431122[43] = 0;
   out_568806180655431122[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_568806180655431122[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_568806180655431122[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_568806180655431122[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_568806180655431122[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_568806180655431122[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_568806180655431122[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_568806180655431122[51] = 0;
   out_568806180655431122[52] = 0;
   out_568806180655431122[53] = 0;
   out_568806180655431122[54] = 0;
   out_568806180655431122[55] = 0;
   out_568806180655431122[56] = 0;
   out_568806180655431122[57] = 0;
   out_568806180655431122[58] = 0;
   out_568806180655431122[59] = 0;
   out_568806180655431122[60] = 0;
   out_568806180655431122[61] = 0;
   out_568806180655431122[62] = 1;
   out_568806180655431122[63] = 0;
   out_568806180655431122[64] = 0;
   out_568806180655431122[65] = 1;
}
void h_12(double *state, double *unused, double *out_8202495502726701333) {
   out_8202495502726701333[0] = state[0];
   out_8202495502726701333[1] = state[1];
   out_8202495502726701333[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3380728047201547864) {
   out_3380728047201547864[0] = 1;
   out_3380728047201547864[1] = 0;
   out_3380728047201547864[2] = 0;
   out_3380728047201547864[3] = 0;
   out_3380728047201547864[4] = 0;
   out_3380728047201547864[5] = 0;
   out_3380728047201547864[6] = 0;
   out_3380728047201547864[7] = 0;
   out_3380728047201547864[8] = 0;
   out_3380728047201547864[9] = 0;
   out_3380728047201547864[10] = 0;
   out_3380728047201547864[11] = 0;
   out_3380728047201547864[12] = 0;
   out_3380728047201547864[13] = 0;
   out_3380728047201547864[14] = 0;
   out_3380728047201547864[15] = 0;
   out_3380728047201547864[16] = 0;
   out_3380728047201547864[17] = 0;
   out_3380728047201547864[18] = 0;
   out_3380728047201547864[19] = 0;
   out_3380728047201547864[20] = 0;
   out_3380728047201547864[21] = 0;
   out_3380728047201547864[22] = 0;
   out_3380728047201547864[23] = 1;
   out_3380728047201547864[24] = 0;
   out_3380728047201547864[25] = 0;
   out_3380728047201547864[26] = 0;
   out_3380728047201547864[27] = 0;
   out_3380728047201547864[28] = 0;
   out_3380728047201547864[29] = 0;
   out_3380728047201547864[30] = 0;
   out_3380728047201547864[31] = 0;
   out_3380728047201547864[32] = 0;
   out_3380728047201547864[33] = 0;
   out_3380728047201547864[34] = 0;
   out_3380728047201547864[35] = 0;
   out_3380728047201547864[36] = 0;
   out_3380728047201547864[37] = 0;
   out_3380728047201547864[38] = 0;
   out_3380728047201547864[39] = 0;
   out_3380728047201547864[40] = 0;
   out_3380728047201547864[41] = 0;
   out_3380728047201547864[42] = 0;
   out_3380728047201547864[43] = 0;
   out_3380728047201547864[44] = 0;
   out_3380728047201547864[45] = 0;
   out_3380728047201547864[46] = 1;
   out_3380728047201547864[47] = 0;
   out_3380728047201547864[48] = 0;
   out_3380728047201547864[49] = 0;
   out_3380728047201547864[50] = 0;
   out_3380728047201547864[51] = 0;
   out_3380728047201547864[52] = 0;
   out_3380728047201547864[53] = 0;
   out_3380728047201547864[54] = 0;
   out_3380728047201547864[55] = 0;
   out_3380728047201547864[56] = 0;
   out_3380728047201547864[57] = 0;
   out_3380728047201547864[58] = 0;
   out_3380728047201547864[59] = 0;
   out_3380728047201547864[60] = 0;
   out_3380728047201547864[61] = 0;
   out_3380728047201547864[62] = 0;
   out_3380728047201547864[63] = 0;
   out_3380728047201547864[64] = 0;
   out_3380728047201547864[65] = 0;
}
void h_35(double *state, double *unused, double *out_8221778976482916253) {
   out_8221778976482916253[0] = state[7];
   out_8221778976482916253[1] = state[8];
   out_8221778976482916253[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5033522397860902283) {
   out_5033522397860902283[0] = 0;
   out_5033522397860902283[1] = 0;
   out_5033522397860902283[2] = 0;
   out_5033522397860902283[3] = 0;
   out_5033522397860902283[4] = 0;
   out_5033522397860902283[5] = 0;
   out_5033522397860902283[6] = 0;
   out_5033522397860902283[7] = 1;
   out_5033522397860902283[8] = 0;
   out_5033522397860902283[9] = 0;
   out_5033522397860902283[10] = 0;
   out_5033522397860902283[11] = 0;
   out_5033522397860902283[12] = 0;
   out_5033522397860902283[13] = 0;
   out_5033522397860902283[14] = 0;
   out_5033522397860902283[15] = 0;
   out_5033522397860902283[16] = 0;
   out_5033522397860902283[17] = 0;
   out_5033522397860902283[18] = 0;
   out_5033522397860902283[19] = 0;
   out_5033522397860902283[20] = 0;
   out_5033522397860902283[21] = 0;
   out_5033522397860902283[22] = 0;
   out_5033522397860902283[23] = 0;
   out_5033522397860902283[24] = 0;
   out_5033522397860902283[25] = 0;
   out_5033522397860902283[26] = 0;
   out_5033522397860902283[27] = 0;
   out_5033522397860902283[28] = 0;
   out_5033522397860902283[29] = 0;
   out_5033522397860902283[30] = 1;
   out_5033522397860902283[31] = 0;
   out_5033522397860902283[32] = 0;
   out_5033522397860902283[33] = 0;
   out_5033522397860902283[34] = 0;
   out_5033522397860902283[35] = 0;
   out_5033522397860902283[36] = 0;
   out_5033522397860902283[37] = 0;
   out_5033522397860902283[38] = 0;
   out_5033522397860902283[39] = 0;
   out_5033522397860902283[40] = 0;
   out_5033522397860902283[41] = 0;
   out_5033522397860902283[42] = 0;
   out_5033522397860902283[43] = 0;
   out_5033522397860902283[44] = 0;
   out_5033522397860902283[45] = 0;
   out_5033522397860902283[46] = 0;
   out_5033522397860902283[47] = 0;
   out_5033522397860902283[48] = 0;
   out_5033522397860902283[49] = 0;
   out_5033522397860902283[50] = 0;
   out_5033522397860902283[51] = 0;
   out_5033522397860902283[52] = 0;
   out_5033522397860902283[53] = 1;
   out_5033522397860902283[54] = 0;
   out_5033522397860902283[55] = 0;
   out_5033522397860902283[56] = 0;
   out_5033522397860902283[57] = 0;
   out_5033522397860902283[58] = 0;
   out_5033522397860902283[59] = 0;
   out_5033522397860902283[60] = 0;
   out_5033522397860902283[61] = 0;
   out_5033522397860902283[62] = 0;
   out_5033522397860902283[63] = 0;
   out_5033522397860902283[64] = 0;
   out_5033522397860902283[65] = 0;
}
void h_32(double *state, double *unused, double *out_1561841119683335435) {
   out_1561841119683335435[0] = state[3];
   out_1561841119683335435[1] = state[4];
   out_1561841119683335435[2] = state[5];
   out_1561841119683335435[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4902357612920161814) {
   out_4902357612920161814[0] = 0;
   out_4902357612920161814[1] = 0;
   out_4902357612920161814[2] = 0;
   out_4902357612920161814[3] = 1;
   out_4902357612920161814[4] = 0;
   out_4902357612920161814[5] = 0;
   out_4902357612920161814[6] = 0;
   out_4902357612920161814[7] = 0;
   out_4902357612920161814[8] = 0;
   out_4902357612920161814[9] = 0;
   out_4902357612920161814[10] = 0;
   out_4902357612920161814[11] = 0;
   out_4902357612920161814[12] = 0;
   out_4902357612920161814[13] = 0;
   out_4902357612920161814[14] = 0;
   out_4902357612920161814[15] = 0;
   out_4902357612920161814[16] = 0;
   out_4902357612920161814[17] = 0;
   out_4902357612920161814[18] = 0;
   out_4902357612920161814[19] = 0;
   out_4902357612920161814[20] = 0;
   out_4902357612920161814[21] = 0;
   out_4902357612920161814[22] = 0;
   out_4902357612920161814[23] = 0;
   out_4902357612920161814[24] = 0;
   out_4902357612920161814[25] = 0;
   out_4902357612920161814[26] = 1;
   out_4902357612920161814[27] = 0;
   out_4902357612920161814[28] = 0;
   out_4902357612920161814[29] = 0;
   out_4902357612920161814[30] = 0;
   out_4902357612920161814[31] = 0;
   out_4902357612920161814[32] = 0;
   out_4902357612920161814[33] = 0;
   out_4902357612920161814[34] = 0;
   out_4902357612920161814[35] = 0;
   out_4902357612920161814[36] = 0;
   out_4902357612920161814[37] = 0;
   out_4902357612920161814[38] = 0;
   out_4902357612920161814[39] = 0;
   out_4902357612920161814[40] = 0;
   out_4902357612920161814[41] = 0;
   out_4902357612920161814[42] = 0;
   out_4902357612920161814[43] = 0;
   out_4902357612920161814[44] = 0;
   out_4902357612920161814[45] = 0;
   out_4902357612920161814[46] = 0;
   out_4902357612920161814[47] = 0;
   out_4902357612920161814[48] = 0;
   out_4902357612920161814[49] = 1;
   out_4902357612920161814[50] = 0;
   out_4902357612920161814[51] = 0;
   out_4902357612920161814[52] = 0;
   out_4902357612920161814[53] = 0;
   out_4902357612920161814[54] = 0;
   out_4902357612920161814[55] = 0;
   out_4902357612920161814[56] = 0;
   out_4902357612920161814[57] = 0;
   out_4902357612920161814[58] = 0;
   out_4902357612920161814[59] = 0;
   out_4902357612920161814[60] = 0;
   out_4902357612920161814[61] = 0;
   out_4902357612920161814[62] = 0;
   out_4902357612920161814[63] = 0;
   out_4902357612920161814[64] = 0;
   out_4902357612920161814[65] = 0;
   out_4902357612920161814[66] = 0;
   out_4902357612920161814[67] = 0;
   out_4902357612920161814[68] = 0;
   out_4902357612920161814[69] = 0;
   out_4902357612920161814[70] = 0;
   out_4902357612920161814[71] = 0;
   out_4902357612920161814[72] = 1;
   out_4902357612920161814[73] = 0;
   out_4902357612920161814[74] = 0;
   out_4902357612920161814[75] = 0;
   out_4902357612920161814[76] = 0;
   out_4902357612920161814[77] = 0;
   out_4902357612920161814[78] = 0;
   out_4902357612920161814[79] = 0;
   out_4902357612920161814[80] = 0;
   out_4902357612920161814[81] = 0;
   out_4902357612920161814[82] = 0;
   out_4902357612920161814[83] = 0;
   out_4902357612920161814[84] = 0;
   out_4902357612920161814[85] = 0;
   out_4902357612920161814[86] = 0;
   out_4902357612920161814[87] = 0;
}
void h_13(double *state, double *unused, double *out_1494423759973491701) {
   out_1494423759973491701[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1494423759973491701[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1494423759973491701[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6361310615393362190) {
   out_6361310615393362190[0] = 0;
   out_6361310615393362190[1] = 0;
   out_6361310615393362190[2] = 0;
   out_6361310615393362190[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6361310615393362190[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6361310615393362190[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6361310615393362190[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6361310615393362190[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6361310615393362190[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6361310615393362190[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6361310615393362190[10] = 0;
   out_6361310615393362190[11] = 0;
   out_6361310615393362190[12] = 0;
   out_6361310615393362190[13] = 0;
   out_6361310615393362190[14] = 0;
   out_6361310615393362190[15] = 0;
   out_6361310615393362190[16] = 0;
   out_6361310615393362190[17] = 0;
   out_6361310615393362190[18] = 0;
   out_6361310615393362190[19] = 0;
   out_6361310615393362190[20] = 0;
   out_6361310615393362190[21] = 0;
   out_6361310615393362190[22] = 0;
   out_6361310615393362190[23] = 0;
   out_6361310615393362190[24] = 0;
   out_6361310615393362190[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6361310615393362190[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6361310615393362190[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6361310615393362190[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6361310615393362190[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6361310615393362190[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6361310615393362190[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6361310615393362190[32] = 0;
   out_6361310615393362190[33] = 0;
   out_6361310615393362190[34] = 0;
   out_6361310615393362190[35] = 0;
   out_6361310615393362190[36] = 0;
   out_6361310615393362190[37] = 0;
   out_6361310615393362190[38] = 0;
   out_6361310615393362190[39] = 0;
   out_6361310615393362190[40] = 0;
   out_6361310615393362190[41] = 0;
   out_6361310615393362190[42] = 0;
   out_6361310615393362190[43] = 0;
   out_6361310615393362190[44] = 0;
   out_6361310615393362190[45] = 0;
   out_6361310615393362190[46] = 0;
   out_6361310615393362190[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6361310615393362190[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6361310615393362190[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6361310615393362190[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6361310615393362190[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6361310615393362190[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6361310615393362190[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6361310615393362190[54] = 0;
   out_6361310615393362190[55] = 0;
   out_6361310615393362190[56] = 0;
   out_6361310615393362190[57] = 0;
   out_6361310615393362190[58] = 0;
   out_6361310615393362190[59] = 0;
   out_6361310615393362190[60] = 0;
   out_6361310615393362190[61] = 0;
   out_6361310615393362190[62] = 0;
   out_6361310615393362190[63] = 0;
   out_6361310615393362190[64] = 0;
   out_6361310615393362190[65] = 0;
}
void h_14(double *state, double *unused, double *out_371672585217068510) {
   out_371672585217068510[0] = state[10];
   out_371672585217068510[1] = state[11];
   out_371672585217068510[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1112965519969062189) {
   out_1112965519969062189[0] = 0;
   out_1112965519969062189[1] = 0;
   out_1112965519969062189[2] = 0;
   out_1112965519969062189[3] = 0;
   out_1112965519969062189[4] = 0;
   out_1112965519969062189[5] = 0;
   out_1112965519969062189[6] = 0;
   out_1112965519969062189[7] = 0;
   out_1112965519969062189[8] = 0;
   out_1112965519969062189[9] = 0;
   out_1112965519969062189[10] = 1;
   out_1112965519969062189[11] = 0;
   out_1112965519969062189[12] = 0;
   out_1112965519969062189[13] = 0;
   out_1112965519969062189[14] = 0;
   out_1112965519969062189[15] = 0;
   out_1112965519969062189[16] = 0;
   out_1112965519969062189[17] = 0;
   out_1112965519969062189[18] = 0;
   out_1112965519969062189[19] = 0;
   out_1112965519969062189[20] = 0;
   out_1112965519969062189[21] = 0;
   out_1112965519969062189[22] = 0;
   out_1112965519969062189[23] = 0;
   out_1112965519969062189[24] = 0;
   out_1112965519969062189[25] = 0;
   out_1112965519969062189[26] = 0;
   out_1112965519969062189[27] = 0;
   out_1112965519969062189[28] = 0;
   out_1112965519969062189[29] = 0;
   out_1112965519969062189[30] = 0;
   out_1112965519969062189[31] = 0;
   out_1112965519969062189[32] = 0;
   out_1112965519969062189[33] = 1;
   out_1112965519969062189[34] = 0;
   out_1112965519969062189[35] = 0;
   out_1112965519969062189[36] = 0;
   out_1112965519969062189[37] = 0;
   out_1112965519969062189[38] = 0;
   out_1112965519969062189[39] = 0;
   out_1112965519969062189[40] = 0;
   out_1112965519969062189[41] = 0;
   out_1112965519969062189[42] = 0;
   out_1112965519969062189[43] = 0;
   out_1112965519969062189[44] = 0;
   out_1112965519969062189[45] = 0;
   out_1112965519969062189[46] = 0;
   out_1112965519969062189[47] = 0;
   out_1112965519969062189[48] = 0;
   out_1112965519969062189[49] = 0;
   out_1112965519969062189[50] = 0;
   out_1112965519969062189[51] = 0;
   out_1112965519969062189[52] = 0;
   out_1112965519969062189[53] = 0;
   out_1112965519969062189[54] = 0;
   out_1112965519969062189[55] = 0;
   out_1112965519969062189[56] = 1;
   out_1112965519969062189[57] = 0;
   out_1112965519969062189[58] = 0;
   out_1112965519969062189[59] = 0;
   out_1112965519969062189[60] = 0;
   out_1112965519969062189[61] = 0;
   out_1112965519969062189[62] = 0;
   out_1112965519969062189[63] = 0;
   out_1112965519969062189[64] = 0;
   out_1112965519969062189[65] = 0;
}
void h_33(double *state, double *unused, double *out_8855959415348729283) {
   out_8855959415348729283[0] = state[16];
   out_8855959415348729283[1] = state[17];
   out_8855959415348729283[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1882965393222044679) {
   out_1882965393222044679[0] = 0;
   out_1882965393222044679[1] = 0;
   out_1882965393222044679[2] = 0;
   out_1882965393222044679[3] = 0;
   out_1882965393222044679[4] = 0;
   out_1882965393222044679[5] = 0;
   out_1882965393222044679[6] = 0;
   out_1882965393222044679[7] = 0;
   out_1882965393222044679[8] = 0;
   out_1882965393222044679[9] = 0;
   out_1882965393222044679[10] = 0;
   out_1882965393222044679[11] = 0;
   out_1882965393222044679[12] = 0;
   out_1882965393222044679[13] = 0;
   out_1882965393222044679[14] = 0;
   out_1882965393222044679[15] = 0;
   out_1882965393222044679[16] = 1;
   out_1882965393222044679[17] = 0;
   out_1882965393222044679[18] = 0;
   out_1882965393222044679[19] = 0;
   out_1882965393222044679[20] = 0;
   out_1882965393222044679[21] = 0;
   out_1882965393222044679[22] = 0;
   out_1882965393222044679[23] = 0;
   out_1882965393222044679[24] = 0;
   out_1882965393222044679[25] = 0;
   out_1882965393222044679[26] = 0;
   out_1882965393222044679[27] = 0;
   out_1882965393222044679[28] = 0;
   out_1882965393222044679[29] = 0;
   out_1882965393222044679[30] = 0;
   out_1882965393222044679[31] = 0;
   out_1882965393222044679[32] = 0;
   out_1882965393222044679[33] = 0;
   out_1882965393222044679[34] = 0;
   out_1882965393222044679[35] = 0;
   out_1882965393222044679[36] = 0;
   out_1882965393222044679[37] = 0;
   out_1882965393222044679[38] = 0;
   out_1882965393222044679[39] = 1;
   out_1882965393222044679[40] = 0;
   out_1882965393222044679[41] = 0;
   out_1882965393222044679[42] = 0;
   out_1882965393222044679[43] = 0;
   out_1882965393222044679[44] = 0;
   out_1882965393222044679[45] = 0;
   out_1882965393222044679[46] = 0;
   out_1882965393222044679[47] = 0;
   out_1882965393222044679[48] = 0;
   out_1882965393222044679[49] = 0;
   out_1882965393222044679[50] = 0;
   out_1882965393222044679[51] = 0;
   out_1882965393222044679[52] = 0;
   out_1882965393222044679[53] = 0;
   out_1882965393222044679[54] = 0;
   out_1882965393222044679[55] = 0;
   out_1882965393222044679[56] = 0;
   out_1882965393222044679[57] = 0;
   out_1882965393222044679[58] = 0;
   out_1882965393222044679[59] = 0;
   out_1882965393222044679[60] = 0;
   out_1882965393222044679[61] = 0;
   out_1882965393222044679[62] = 1;
   out_1882965393222044679[63] = 0;
   out_1882965393222044679[64] = 0;
   out_1882965393222044679[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5758408186925393532) {
  H(in_vec, out_5758408186925393532);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_180185448712572281) {
  err_fun(nom_x, delta_x, out_180185448712572281);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4396804282860757599) {
  inv_err_fun(nom_x, true_x, out_4396804282860757599);
}
void live_H_mod_fun(double *state, double *out_6447116989609664619) {
  H_mod_fun(state, out_6447116989609664619);
}
void live_f_fun(double *state, double dt, double *out_342877095328119037) {
  f_fun(state,  dt, out_342877095328119037);
}
void live_F_fun(double *state, double dt, double *out_8253129903815406582) {
  F_fun(state,  dt, out_8253129903815406582);
}
void live_h_4(double *state, double *unused, double *out_867594404448767272) {
  h_4(state, unused, out_867594404448767272);
}
void live_H_4(double *state, double *unused, double *out_8400184455233509659) {
  H_4(state, unused, out_8400184455233509659);
}
void live_h_9(double *state, double *unused, double *out_371672585217068510) {
  h_9(state, unused, out_371672585217068510);
}
void live_H_9(double *state, double *unused, double *out_1112965519969062189) {
  H_9(state, unused, out_1112965519969062189);
}
void live_h_10(double *state, double *unused, double *out_8346954944710380205) {
  h_10(state, unused, out_8346954944710380205);
}
void live_H_10(double *state, double *unused, double *out_568806180655431122) {
  H_10(state, unused, out_568806180655431122);
}
void live_h_12(double *state, double *unused, double *out_8202495502726701333) {
  h_12(state, unused, out_8202495502726701333);
}
void live_H_12(double *state, double *unused, double *out_3380728047201547864) {
  H_12(state, unused, out_3380728047201547864);
}
void live_h_35(double *state, double *unused, double *out_8221778976482916253) {
  h_35(state, unused, out_8221778976482916253);
}
void live_H_35(double *state, double *unused, double *out_5033522397860902283) {
  H_35(state, unused, out_5033522397860902283);
}
void live_h_32(double *state, double *unused, double *out_1561841119683335435) {
  h_32(state, unused, out_1561841119683335435);
}
void live_H_32(double *state, double *unused, double *out_4902357612920161814) {
  H_32(state, unused, out_4902357612920161814);
}
void live_h_13(double *state, double *unused, double *out_1494423759973491701) {
  h_13(state, unused, out_1494423759973491701);
}
void live_H_13(double *state, double *unused, double *out_6361310615393362190) {
  H_13(state, unused, out_6361310615393362190);
}
void live_h_14(double *state, double *unused, double *out_371672585217068510) {
  h_14(state, unused, out_371672585217068510);
}
void live_H_14(double *state, double *unused, double *out_1112965519969062189) {
  H_14(state, unused, out_1112965519969062189);
}
void live_h_33(double *state, double *unused, double *out_8855959415348729283) {
  h_33(state, unused, out_8855959415348729283);
}
void live_H_33(double *state, double *unused, double *out_1882965393222044679) {
  H_33(state, unused, out_1882965393222044679);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
