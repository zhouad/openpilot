#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8256577121296403758) {
   out_8256577121296403758[0] = 0;
   out_8256577121296403758[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8256577121296403758[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8256577121296403758[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8256577121296403758[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8256577121296403758[5] = -sin(in_vec[1]);
   out_8256577121296403758[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8256577121296403758[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8256577121296403758[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8256577121296403758[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8256577121296403758[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8256577121296403758[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8256577121296403758[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8256577121296403758[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8256577121296403758[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8256577121296403758[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8256577121296403758[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8256577121296403758[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7356205350758974129) {
   out_7356205350758974129[0] = delta_x[0] + nom_x[0];
   out_7356205350758974129[1] = delta_x[1] + nom_x[1];
   out_7356205350758974129[2] = delta_x[2] + nom_x[2];
   out_7356205350758974129[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7356205350758974129[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7356205350758974129[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7356205350758974129[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7356205350758974129[7] = delta_x[6] + nom_x[7];
   out_7356205350758974129[8] = delta_x[7] + nom_x[8];
   out_7356205350758974129[9] = delta_x[8] + nom_x[9];
   out_7356205350758974129[10] = delta_x[9] + nom_x[10];
   out_7356205350758974129[11] = delta_x[10] + nom_x[11];
   out_7356205350758974129[12] = delta_x[11] + nom_x[12];
   out_7356205350758974129[13] = delta_x[12] + nom_x[13];
   out_7356205350758974129[14] = delta_x[13] + nom_x[14];
   out_7356205350758974129[15] = delta_x[14] + nom_x[15];
   out_7356205350758974129[16] = delta_x[15] + nom_x[16];
   out_7356205350758974129[17] = delta_x[16] + nom_x[17];
   out_7356205350758974129[18] = delta_x[17] + nom_x[18];
   out_7356205350758974129[19] = delta_x[18] + nom_x[19];
   out_7356205350758974129[20] = delta_x[19] + nom_x[20];
   out_7356205350758974129[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2101148154720658072) {
   out_2101148154720658072[0] = -nom_x[0] + true_x[0];
   out_2101148154720658072[1] = -nom_x[1] + true_x[1];
   out_2101148154720658072[2] = -nom_x[2] + true_x[2];
   out_2101148154720658072[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2101148154720658072[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2101148154720658072[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2101148154720658072[6] = -nom_x[7] + true_x[7];
   out_2101148154720658072[7] = -nom_x[8] + true_x[8];
   out_2101148154720658072[8] = -nom_x[9] + true_x[9];
   out_2101148154720658072[9] = -nom_x[10] + true_x[10];
   out_2101148154720658072[10] = -nom_x[11] + true_x[11];
   out_2101148154720658072[11] = -nom_x[12] + true_x[12];
   out_2101148154720658072[12] = -nom_x[13] + true_x[13];
   out_2101148154720658072[13] = -nom_x[14] + true_x[14];
   out_2101148154720658072[14] = -nom_x[15] + true_x[15];
   out_2101148154720658072[15] = -nom_x[16] + true_x[16];
   out_2101148154720658072[16] = -nom_x[17] + true_x[17];
   out_2101148154720658072[17] = -nom_x[18] + true_x[18];
   out_2101148154720658072[18] = -nom_x[19] + true_x[19];
   out_2101148154720658072[19] = -nom_x[20] + true_x[20];
   out_2101148154720658072[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1559586737427390206) {
   out_1559586737427390206[0] = 1.0;
   out_1559586737427390206[1] = 0;
   out_1559586737427390206[2] = 0;
   out_1559586737427390206[3] = 0;
   out_1559586737427390206[4] = 0;
   out_1559586737427390206[5] = 0;
   out_1559586737427390206[6] = 0;
   out_1559586737427390206[7] = 0;
   out_1559586737427390206[8] = 0;
   out_1559586737427390206[9] = 0;
   out_1559586737427390206[10] = 0;
   out_1559586737427390206[11] = 0;
   out_1559586737427390206[12] = 0;
   out_1559586737427390206[13] = 0;
   out_1559586737427390206[14] = 0;
   out_1559586737427390206[15] = 0;
   out_1559586737427390206[16] = 0;
   out_1559586737427390206[17] = 0;
   out_1559586737427390206[18] = 0;
   out_1559586737427390206[19] = 0;
   out_1559586737427390206[20] = 0;
   out_1559586737427390206[21] = 0;
   out_1559586737427390206[22] = 1.0;
   out_1559586737427390206[23] = 0;
   out_1559586737427390206[24] = 0;
   out_1559586737427390206[25] = 0;
   out_1559586737427390206[26] = 0;
   out_1559586737427390206[27] = 0;
   out_1559586737427390206[28] = 0;
   out_1559586737427390206[29] = 0;
   out_1559586737427390206[30] = 0;
   out_1559586737427390206[31] = 0;
   out_1559586737427390206[32] = 0;
   out_1559586737427390206[33] = 0;
   out_1559586737427390206[34] = 0;
   out_1559586737427390206[35] = 0;
   out_1559586737427390206[36] = 0;
   out_1559586737427390206[37] = 0;
   out_1559586737427390206[38] = 0;
   out_1559586737427390206[39] = 0;
   out_1559586737427390206[40] = 0;
   out_1559586737427390206[41] = 0;
   out_1559586737427390206[42] = 0;
   out_1559586737427390206[43] = 0;
   out_1559586737427390206[44] = 1.0;
   out_1559586737427390206[45] = 0;
   out_1559586737427390206[46] = 0;
   out_1559586737427390206[47] = 0;
   out_1559586737427390206[48] = 0;
   out_1559586737427390206[49] = 0;
   out_1559586737427390206[50] = 0;
   out_1559586737427390206[51] = 0;
   out_1559586737427390206[52] = 0;
   out_1559586737427390206[53] = 0;
   out_1559586737427390206[54] = 0;
   out_1559586737427390206[55] = 0;
   out_1559586737427390206[56] = 0;
   out_1559586737427390206[57] = 0;
   out_1559586737427390206[58] = 0;
   out_1559586737427390206[59] = 0;
   out_1559586737427390206[60] = 0;
   out_1559586737427390206[61] = 0;
   out_1559586737427390206[62] = 0;
   out_1559586737427390206[63] = 0;
   out_1559586737427390206[64] = 0;
   out_1559586737427390206[65] = 0;
   out_1559586737427390206[66] = -0.5*state[4];
   out_1559586737427390206[67] = -0.5*state[5];
   out_1559586737427390206[68] = -0.5*state[6];
   out_1559586737427390206[69] = 0;
   out_1559586737427390206[70] = 0;
   out_1559586737427390206[71] = 0;
   out_1559586737427390206[72] = 0;
   out_1559586737427390206[73] = 0;
   out_1559586737427390206[74] = 0;
   out_1559586737427390206[75] = 0;
   out_1559586737427390206[76] = 0;
   out_1559586737427390206[77] = 0;
   out_1559586737427390206[78] = 0;
   out_1559586737427390206[79] = 0;
   out_1559586737427390206[80] = 0;
   out_1559586737427390206[81] = 0;
   out_1559586737427390206[82] = 0;
   out_1559586737427390206[83] = 0;
   out_1559586737427390206[84] = 0;
   out_1559586737427390206[85] = 0;
   out_1559586737427390206[86] = 0;
   out_1559586737427390206[87] = 0.5*state[3];
   out_1559586737427390206[88] = 0.5*state[6];
   out_1559586737427390206[89] = -0.5*state[5];
   out_1559586737427390206[90] = 0;
   out_1559586737427390206[91] = 0;
   out_1559586737427390206[92] = 0;
   out_1559586737427390206[93] = 0;
   out_1559586737427390206[94] = 0;
   out_1559586737427390206[95] = 0;
   out_1559586737427390206[96] = 0;
   out_1559586737427390206[97] = 0;
   out_1559586737427390206[98] = 0;
   out_1559586737427390206[99] = 0;
   out_1559586737427390206[100] = 0;
   out_1559586737427390206[101] = 0;
   out_1559586737427390206[102] = 0;
   out_1559586737427390206[103] = 0;
   out_1559586737427390206[104] = 0;
   out_1559586737427390206[105] = 0;
   out_1559586737427390206[106] = 0;
   out_1559586737427390206[107] = 0;
   out_1559586737427390206[108] = -0.5*state[6];
   out_1559586737427390206[109] = 0.5*state[3];
   out_1559586737427390206[110] = 0.5*state[4];
   out_1559586737427390206[111] = 0;
   out_1559586737427390206[112] = 0;
   out_1559586737427390206[113] = 0;
   out_1559586737427390206[114] = 0;
   out_1559586737427390206[115] = 0;
   out_1559586737427390206[116] = 0;
   out_1559586737427390206[117] = 0;
   out_1559586737427390206[118] = 0;
   out_1559586737427390206[119] = 0;
   out_1559586737427390206[120] = 0;
   out_1559586737427390206[121] = 0;
   out_1559586737427390206[122] = 0;
   out_1559586737427390206[123] = 0;
   out_1559586737427390206[124] = 0;
   out_1559586737427390206[125] = 0;
   out_1559586737427390206[126] = 0;
   out_1559586737427390206[127] = 0;
   out_1559586737427390206[128] = 0;
   out_1559586737427390206[129] = 0.5*state[5];
   out_1559586737427390206[130] = -0.5*state[4];
   out_1559586737427390206[131] = 0.5*state[3];
   out_1559586737427390206[132] = 0;
   out_1559586737427390206[133] = 0;
   out_1559586737427390206[134] = 0;
   out_1559586737427390206[135] = 0;
   out_1559586737427390206[136] = 0;
   out_1559586737427390206[137] = 0;
   out_1559586737427390206[138] = 0;
   out_1559586737427390206[139] = 0;
   out_1559586737427390206[140] = 0;
   out_1559586737427390206[141] = 0;
   out_1559586737427390206[142] = 0;
   out_1559586737427390206[143] = 0;
   out_1559586737427390206[144] = 0;
   out_1559586737427390206[145] = 0;
   out_1559586737427390206[146] = 0;
   out_1559586737427390206[147] = 0;
   out_1559586737427390206[148] = 0;
   out_1559586737427390206[149] = 0;
   out_1559586737427390206[150] = 0;
   out_1559586737427390206[151] = 0;
   out_1559586737427390206[152] = 0;
   out_1559586737427390206[153] = 1.0;
   out_1559586737427390206[154] = 0;
   out_1559586737427390206[155] = 0;
   out_1559586737427390206[156] = 0;
   out_1559586737427390206[157] = 0;
   out_1559586737427390206[158] = 0;
   out_1559586737427390206[159] = 0;
   out_1559586737427390206[160] = 0;
   out_1559586737427390206[161] = 0;
   out_1559586737427390206[162] = 0;
   out_1559586737427390206[163] = 0;
   out_1559586737427390206[164] = 0;
   out_1559586737427390206[165] = 0;
   out_1559586737427390206[166] = 0;
   out_1559586737427390206[167] = 0;
   out_1559586737427390206[168] = 0;
   out_1559586737427390206[169] = 0;
   out_1559586737427390206[170] = 0;
   out_1559586737427390206[171] = 0;
   out_1559586737427390206[172] = 0;
   out_1559586737427390206[173] = 0;
   out_1559586737427390206[174] = 0;
   out_1559586737427390206[175] = 1.0;
   out_1559586737427390206[176] = 0;
   out_1559586737427390206[177] = 0;
   out_1559586737427390206[178] = 0;
   out_1559586737427390206[179] = 0;
   out_1559586737427390206[180] = 0;
   out_1559586737427390206[181] = 0;
   out_1559586737427390206[182] = 0;
   out_1559586737427390206[183] = 0;
   out_1559586737427390206[184] = 0;
   out_1559586737427390206[185] = 0;
   out_1559586737427390206[186] = 0;
   out_1559586737427390206[187] = 0;
   out_1559586737427390206[188] = 0;
   out_1559586737427390206[189] = 0;
   out_1559586737427390206[190] = 0;
   out_1559586737427390206[191] = 0;
   out_1559586737427390206[192] = 0;
   out_1559586737427390206[193] = 0;
   out_1559586737427390206[194] = 0;
   out_1559586737427390206[195] = 0;
   out_1559586737427390206[196] = 0;
   out_1559586737427390206[197] = 1.0;
   out_1559586737427390206[198] = 0;
   out_1559586737427390206[199] = 0;
   out_1559586737427390206[200] = 0;
   out_1559586737427390206[201] = 0;
   out_1559586737427390206[202] = 0;
   out_1559586737427390206[203] = 0;
   out_1559586737427390206[204] = 0;
   out_1559586737427390206[205] = 0;
   out_1559586737427390206[206] = 0;
   out_1559586737427390206[207] = 0;
   out_1559586737427390206[208] = 0;
   out_1559586737427390206[209] = 0;
   out_1559586737427390206[210] = 0;
   out_1559586737427390206[211] = 0;
   out_1559586737427390206[212] = 0;
   out_1559586737427390206[213] = 0;
   out_1559586737427390206[214] = 0;
   out_1559586737427390206[215] = 0;
   out_1559586737427390206[216] = 0;
   out_1559586737427390206[217] = 0;
   out_1559586737427390206[218] = 0;
   out_1559586737427390206[219] = 1.0;
   out_1559586737427390206[220] = 0;
   out_1559586737427390206[221] = 0;
   out_1559586737427390206[222] = 0;
   out_1559586737427390206[223] = 0;
   out_1559586737427390206[224] = 0;
   out_1559586737427390206[225] = 0;
   out_1559586737427390206[226] = 0;
   out_1559586737427390206[227] = 0;
   out_1559586737427390206[228] = 0;
   out_1559586737427390206[229] = 0;
   out_1559586737427390206[230] = 0;
   out_1559586737427390206[231] = 0;
   out_1559586737427390206[232] = 0;
   out_1559586737427390206[233] = 0;
   out_1559586737427390206[234] = 0;
   out_1559586737427390206[235] = 0;
   out_1559586737427390206[236] = 0;
   out_1559586737427390206[237] = 0;
   out_1559586737427390206[238] = 0;
   out_1559586737427390206[239] = 0;
   out_1559586737427390206[240] = 0;
   out_1559586737427390206[241] = 1.0;
   out_1559586737427390206[242] = 0;
   out_1559586737427390206[243] = 0;
   out_1559586737427390206[244] = 0;
   out_1559586737427390206[245] = 0;
   out_1559586737427390206[246] = 0;
   out_1559586737427390206[247] = 0;
   out_1559586737427390206[248] = 0;
   out_1559586737427390206[249] = 0;
   out_1559586737427390206[250] = 0;
   out_1559586737427390206[251] = 0;
   out_1559586737427390206[252] = 0;
   out_1559586737427390206[253] = 0;
   out_1559586737427390206[254] = 0;
   out_1559586737427390206[255] = 0;
   out_1559586737427390206[256] = 0;
   out_1559586737427390206[257] = 0;
   out_1559586737427390206[258] = 0;
   out_1559586737427390206[259] = 0;
   out_1559586737427390206[260] = 0;
   out_1559586737427390206[261] = 0;
   out_1559586737427390206[262] = 0;
   out_1559586737427390206[263] = 1.0;
   out_1559586737427390206[264] = 0;
   out_1559586737427390206[265] = 0;
   out_1559586737427390206[266] = 0;
   out_1559586737427390206[267] = 0;
   out_1559586737427390206[268] = 0;
   out_1559586737427390206[269] = 0;
   out_1559586737427390206[270] = 0;
   out_1559586737427390206[271] = 0;
   out_1559586737427390206[272] = 0;
   out_1559586737427390206[273] = 0;
   out_1559586737427390206[274] = 0;
   out_1559586737427390206[275] = 0;
   out_1559586737427390206[276] = 0;
   out_1559586737427390206[277] = 0;
   out_1559586737427390206[278] = 0;
   out_1559586737427390206[279] = 0;
   out_1559586737427390206[280] = 0;
   out_1559586737427390206[281] = 0;
   out_1559586737427390206[282] = 0;
   out_1559586737427390206[283] = 0;
   out_1559586737427390206[284] = 0;
   out_1559586737427390206[285] = 1.0;
   out_1559586737427390206[286] = 0;
   out_1559586737427390206[287] = 0;
   out_1559586737427390206[288] = 0;
   out_1559586737427390206[289] = 0;
   out_1559586737427390206[290] = 0;
   out_1559586737427390206[291] = 0;
   out_1559586737427390206[292] = 0;
   out_1559586737427390206[293] = 0;
   out_1559586737427390206[294] = 0;
   out_1559586737427390206[295] = 0;
   out_1559586737427390206[296] = 0;
   out_1559586737427390206[297] = 0;
   out_1559586737427390206[298] = 0;
   out_1559586737427390206[299] = 0;
   out_1559586737427390206[300] = 0;
   out_1559586737427390206[301] = 0;
   out_1559586737427390206[302] = 0;
   out_1559586737427390206[303] = 0;
   out_1559586737427390206[304] = 0;
   out_1559586737427390206[305] = 0;
   out_1559586737427390206[306] = 0;
   out_1559586737427390206[307] = 1.0;
   out_1559586737427390206[308] = 0;
   out_1559586737427390206[309] = 0;
   out_1559586737427390206[310] = 0;
   out_1559586737427390206[311] = 0;
   out_1559586737427390206[312] = 0;
   out_1559586737427390206[313] = 0;
   out_1559586737427390206[314] = 0;
   out_1559586737427390206[315] = 0;
   out_1559586737427390206[316] = 0;
   out_1559586737427390206[317] = 0;
   out_1559586737427390206[318] = 0;
   out_1559586737427390206[319] = 0;
   out_1559586737427390206[320] = 0;
   out_1559586737427390206[321] = 0;
   out_1559586737427390206[322] = 0;
   out_1559586737427390206[323] = 0;
   out_1559586737427390206[324] = 0;
   out_1559586737427390206[325] = 0;
   out_1559586737427390206[326] = 0;
   out_1559586737427390206[327] = 0;
   out_1559586737427390206[328] = 0;
   out_1559586737427390206[329] = 1.0;
   out_1559586737427390206[330] = 0;
   out_1559586737427390206[331] = 0;
   out_1559586737427390206[332] = 0;
   out_1559586737427390206[333] = 0;
   out_1559586737427390206[334] = 0;
   out_1559586737427390206[335] = 0;
   out_1559586737427390206[336] = 0;
   out_1559586737427390206[337] = 0;
   out_1559586737427390206[338] = 0;
   out_1559586737427390206[339] = 0;
   out_1559586737427390206[340] = 0;
   out_1559586737427390206[341] = 0;
   out_1559586737427390206[342] = 0;
   out_1559586737427390206[343] = 0;
   out_1559586737427390206[344] = 0;
   out_1559586737427390206[345] = 0;
   out_1559586737427390206[346] = 0;
   out_1559586737427390206[347] = 0;
   out_1559586737427390206[348] = 0;
   out_1559586737427390206[349] = 0;
   out_1559586737427390206[350] = 0;
   out_1559586737427390206[351] = 1.0;
   out_1559586737427390206[352] = 0;
   out_1559586737427390206[353] = 0;
   out_1559586737427390206[354] = 0;
   out_1559586737427390206[355] = 0;
   out_1559586737427390206[356] = 0;
   out_1559586737427390206[357] = 0;
   out_1559586737427390206[358] = 0;
   out_1559586737427390206[359] = 0;
   out_1559586737427390206[360] = 0;
   out_1559586737427390206[361] = 0;
   out_1559586737427390206[362] = 0;
   out_1559586737427390206[363] = 0;
   out_1559586737427390206[364] = 0;
   out_1559586737427390206[365] = 0;
   out_1559586737427390206[366] = 0;
   out_1559586737427390206[367] = 0;
   out_1559586737427390206[368] = 0;
   out_1559586737427390206[369] = 0;
   out_1559586737427390206[370] = 0;
   out_1559586737427390206[371] = 0;
   out_1559586737427390206[372] = 0;
   out_1559586737427390206[373] = 1.0;
   out_1559586737427390206[374] = 0;
   out_1559586737427390206[375] = 0;
   out_1559586737427390206[376] = 0;
   out_1559586737427390206[377] = 0;
   out_1559586737427390206[378] = 0;
   out_1559586737427390206[379] = 0;
   out_1559586737427390206[380] = 0;
   out_1559586737427390206[381] = 0;
   out_1559586737427390206[382] = 0;
   out_1559586737427390206[383] = 0;
   out_1559586737427390206[384] = 0;
   out_1559586737427390206[385] = 0;
   out_1559586737427390206[386] = 0;
   out_1559586737427390206[387] = 0;
   out_1559586737427390206[388] = 0;
   out_1559586737427390206[389] = 0;
   out_1559586737427390206[390] = 0;
   out_1559586737427390206[391] = 0;
   out_1559586737427390206[392] = 0;
   out_1559586737427390206[393] = 0;
   out_1559586737427390206[394] = 0;
   out_1559586737427390206[395] = 1.0;
   out_1559586737427390206[396] = 0;
   out_1559586737427390206[397] = 0;
   out_1559586737427390206[398] = 0;
   out_1559586737427390206[399] = 0;
   out_1559586737427390206[400] = 0;
   out_1559586737427390206[401] = 0;
   out_1559586737427390206[402] = 0;
   out_1559586737427390206[403] = 0;
   out_1559586737427390206[404] = 0;
   out_1559586737427390206[405] = 0;
   out_1559586737427390206[406] = 0;
   out_1559586737427390206[407] = 0;
   out_1559586737427390206[408] = 0;
   out_1559586737427390206[409] = 0;
   out_1559586737427390206[410] = 0;
   out_1559586737427390206[411] = 0;
   out_1559586737427390206[412] = 0;
   out_1559586737427390206[413] = 0;
   out_1559586737427390206[414] = 0;
   out_1559586737427390206[415] = 0;
   out_1559586737427390206[416] = 0;
   out_1559586737427390206[417] = 1.0;
   out_1559586737427390206[418] = 0;
   out_1559586737427390206[419] = 0;
   out_1559586737427390206[420] = 0;
   out_1559586737427390206[421] = 0;
   out_1559586737427390206[422] = 0;
   out_1559586737427390206[423] = 0;
   out_1559586737427390206[424] = 0;
   out_1559586737427390206[425] = 0;
   out_1559586737427390206[426] = 0;
   out_1559586737427390206[427] = 0;
   out_1559586737427390206[428] = 0;
   out_1559586737427390206[429] = 0;
   out_1559586737427390206[430] = 0;
   out_1559586737427390206[431] = 0;
   out_1559586737427390206[432] = 0;
   out_1559586737427390206[433] = 0;
   out_1559586737427390206[434] = 0;
   out_1559586737427390206[435] = 0;
   out_1559586737427390206[436] = 0;
   out_1559586737427390206[437] = 0;
   out_1559586737427390206[438] = 0;
   out_1559586737427390206[439] = 1.0;
   out_1559586737427390206[440] = 0;
   out_1559586737427390206[441] = 0;
   out_1559586737427390206[442] = 0;
   out_1559586737427390206[443] = 0;
   out_1559586737427390206[444] = 0;
   out_1559586737427390206[445] = 0;
   out_1559586737427390206[446] = 0;
   out_1559586737427390206[447] = 0;
   out_1559586737427390206[448] = 0;
   out_1559586737427390206[449] = 0;
   out_1559586737427390206[450] = 0;
   out_1559586737427390206[451] = 0;
   out_1559586737427390206[452] = 0;
   out_1559586737427390206[453] = 0;
   out_1559586737427390206[454] = 0;
   out_1559586737427390206[455] = 0;
   out_1559586737427390206[456] = 0;
   out_1559586737427390206[457] = 0;
   out_1559586737427390206[458] = 0;
   out_1559586737427390206[459] = 0;
   out_1559586737427390206[460] = 0;
   out_1559586737427390206[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7251794637018685419) {
   out_7251794637018685419[0] = dt*state[7] + state[0];
   out_7251794637018685419[1] = dt*state[8] + state[1];
   out_7251794637018685419[2] = dt*state[9] + state[2];
   out_7251794637018685419[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7251794637018685419[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7251794637018685419[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7251794637018685419[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7251794637018685419[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7251794637018685419[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7251794637018685419[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7251794637018685419[10] = state[10];
   out_7251794637018685419[11] = state[11];
   out_7251794637018685419[12] = state[12];
   out_7251794637018685419[13] = state[13];
   out_7251794637018685419[14] = state[14];
   out_7251794637018685419[15] = state[15];
   out_7251794637018685419[16] = state[16];
   out_7251794637018685419[17] = state[17];
   out_7251794637018685419[18] = state[18];
   out_7251794637018685419[19] = state[19];
   out_7251794637018685419[20] = state[20];
   out_7251794637018685419[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8567902040814167170) {
   out_8567902040814167170[0] = 1;
   out_8567902040814167170[1] = 0;
   out_8567902040814167170[2] = 0;
   out_8567902040814167170[3] = 0;
   out_8567902040814167170[4] = 0;
   out_8567902040814167170[5] = 0;
   out_8567902040814167170[6] = dt;
   out_8567902040814167170[7] = 0;
   out_8567902040814167170[8] = 0;
   out_8567902040814167170[9] = 0;
   out_8567902040814167170[10] = 0;
   out_8567902040814167170[11] = 0;
   out_8567902040814167170[12] = 0;
   out_8567902040814167170[13] = 0;
   out_8567902040814167170[14] = 0;
   out_8567902040814167170[15] = 0;
   out_8567902040814167170[16] = 0;
   out_8567902040814167170[17] = 0;
   out_8567902040814167170[18] = 0;
   out_8567902040814167170[19] = 0;
   out_8567902040814167170[20] = 0;
   out_8567902040814167170[21] = 0;
   out_8567902040814167170[22] = 1;
   out_8567902040814167170[23] = 0;
   out_8567902040814167170[24] = 0;
   out_8567902040814167170[25] = 0;
   out_8567902040814167170[26] = 0;
   out_8567902040814167170[27] = 0;
   out_8567902040814167170[28] = dt;
   out_8567902040814167170[29] = 0;
   out_8567902040814167170[30] = 0;
   out_8567902040814167170[31] = 0;
   out_8567902040814167170[32] = 0;
   out_8567902040814167170[33] = 0;
   out_8567902040814167170[34] = 0;
   out_8567902040814167170[35] = 0;
   out_8567902040814167170[36] = 0;
   out_8567902040814167170[37] = 0;
   out_8567902040814167170[38] = 0;
   out_8567902040814167170[39] = 0;
   out_8567902040814167170[40] = 0;
   out_8567902040814167170[41] = 0;
   out_8567902040814167170[42] = 0;
   out_8567902040814167170[43] = 0;
   out_8567902040814167170[44] = 1;
   out_8567902040814167170[45] = 0;
   out_8567902040814167170[46] = 0;
   out_8567902040814167170[47] = 0;
   out_8567902040814167170[48] = 0;
   out_8567902040814167170[49] = 0;
   out_8567902040814167170[50] = dt;
   out_8567902040814167170[51] = 0;
   out_8567902040814167170[52] = 0;
   out_8567902040814167170[53] = 0;
   out_8567902040814167170[54] = 0;
   out_8567902040814167170[55] = 0;
   out_8567902040814167170[56] = 0;
   out_8567902040814167170[57] = 0;
   out_8567902040814167170[58] = 0;
   out_8567902040814167170[59] = 0;
   out_8567902040814167170[60] = 0;
   out_8567902040814167170[61] = 0;
   out_8567902040814167170[62] = 0;
   out_8567902040814167170[63] = 0;
   out_8567902040814167170[64] = 0;
   out_8567902040814167170[65] = 0;
   out_8567902040814167170[66] = 1;
   out_8567902040814167170[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8567902040814167170[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8567902040814167170[69] = 0;
   out_8567902040814167170[70] = 0;
   out_8567902040814167170[71] = 0;
   out_8567902040814167170[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8567902040814167170[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8567902040814167170[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8567902040814167170[75] = 0;
   out_8567902040814167170[76] = 0;
   out_8567902040814167170[77] = 0;
   out_8567902040814167170[78] = 0;
   out_8567902040814167170[79] = 0;
   out_8567902040814167170[80] = 0;
   out_8567902040814167170[81] = 0;
   out_8567902040814167170[82] = 0;
   out_8567902040814167170[83] = 0;
   out_8567902040814167170[84] = 0;
   out_8567902040814167170[85] = 0;
   out_8567902040814167170[86] = 0;
   out_8567902040814167170[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8567902040814167170[88] = 1;
   out_8567902040814167170[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8567902040814167170[90] = 0;
   out_8567902040814167170[91] = 0;
   out_8567902040814167170[92] = 0;
   out_8567902040814167170[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8567902040814167170[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8567902040814167170[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8567902040814167170[96] = 0;
   out_8567902040814167170[97] = 0;
   out_8567902040814167170[98] = 0;
   out_8567902040814167170[99] = 0;
   out_8567902040814167170[100] = 0;
   out_8567902040814167170[101] = 0;
   out_8567902040814167170[102] = 0;
   out_8567902040814167170[103] = 0;
   out_8567902040814167170[104] = 0;
   out_8567902040814167170[105] = 0;
   out_8567902040814167170[106] = 0;
   out_8567902040814167170[107] = 0;
   out_8567902040814167170[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8567902040814167170[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8567902040814167170[110] = 1;
   out_8567902040814167170[111] = 0;
   out_8567902040814167170[112] = 0;
   out_8567902040814167170[113] = 0;
   out_8567902040814167170[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8567902040814167170[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8567902040814167170[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8567902040814167170[117] = 0;
   out_8567902040814167170[118] = 0;
   out_8567902040814167170[119] = 0;
   out_8567902040814167170[120] = 0;
   out_8567902040814167170[121] = 0;
   out_8567902040814167170[122] = 0;
   out_8567902040814167170[123] = 0;
   out_8567902040814167170[124] = 0;
   out_8567902040814167170[125] = 0;
   out_8567902040814167170[126] = 0;
   out_8567902040814167170[127] = 0;
   out_8567902040814167170[128] = 0;
   out_8567902040814167170[129] = 0;
   out_8567902040814167170[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8567902040814167170[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8567902040814167170[132] = 1;
   out_8567902040814167170[133] = 0;
   out_8567902040814167170[134] = 0;
   out_8567902040814167170[135] = 0;
   out_8567902040814167170[136] = 0;
   out_8567902040814167170[137] = 0;
   out_8567902040814167170[138] = 0;
   out_8567902040814167170[139] = 0;
   out_8567902040814167170[140] = 0;
   out_8567902040814167170[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8567902040814167170[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8567902040814167170[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8567902040814167170[144] = 0;
   out_8567902040814167170[145] = 0;
   out_8567902040814167170[146] = 0;
   out_8567902040814167170[147] = 0;
   out_8567902040814167170[148] = 0;
   out_8567902040814167170[149] = 0;
   out_8567902040814167170[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8567902040814167170[151] = 0;
   out_8567902040814167170[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8567902040814167170[153] = 0;
   out_8567902040814167170[154] = 1;
   out_8567902040814167170[155] = 0;
   out_8567902040814167170[156] = 0;
   out_8567902040814167170[157] = 0;
   out_8567902040814167170[158] = 0;
   out_8567902040814167170[159] = 0;
   out_8567902040814167170[160] = 0;
   out_8567902040814167170[161] = 0;
   out_8567902040814167170[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8567902040814167170[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8567902040814167170[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8567902040814167170[165] = 0;
   out_8567902040814167170[166] = 0;
   out_8567902040814167170[167] = 0;
   out_8567902040814167170[168] = 0;
   out_8567902040814167170[169] = 0;
   out_8567902040814167170[170] = 0;
   out_8567902040814167170[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8567902040814167170[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8567902040814167170[173] = 0;
   out_8567902040814167170[174] = 0;
   out_8567902040814167170[175] = 0;
   out_8567902040814167170[176] = 1;
   out_8567902040814167170[177] = 0;
   out_8567902040814167170[178] = 0;
   out_8567902040814167170[179] = 0;
   out_8567902040814167170[180] = 0;
   out_8567902040814167170[181] = 0;
   out_8567902040814167170[182] = 0;
   out_8567902040814167170[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8567902040814167170[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8567902040814167170[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8567902040814167170[186] = 0;
   out_8567902040814167170[187] = 0;
   out_8567902040814167170[188] = 0;
   out_8567902040814167170[189] = 0;
   out_8567902040814167170[190] = 0;
   out_8567902040814167170[191] = 0;
   out_8567902040814167170[192] = 0;
   out_8567902040814167170[193] = 0;
   out_8567902040814167170[194] = 0;
   out_8567902040814167170[195] = 0;
   out_8567902040814167170[196] = 0;
   out_8567902040814167170[197] = 0;
   out_8567902040814167170[198] = 1;
   out_8567902040814167170[199] = 0;
   out_8567902040814167170[200] = 0;
   out_8567902040814167170[201] = 0;
   out_8567902040814167170[202] = 0;
   out_8567902040814167170[203] = 0;
   out_8567902040814167170[204] = 0;
   out_8567902040814167170[205] = 0;
   out_8567902040814167170[206] = 0;
   out_8567902040814167170[207] = 0;
   out_8567902040814167170[208] = 0;
   out_8567902040814167170[209] = 0;
   out_8567902040814167170[210] = 0;
   out_8567902040814167170[211] = 0;
   out_8567902040814167170[212] = 0;
   out_8567902040814167170[213] = 0;
   out_8567902040814167170[214] = 0;
   out_8567902040814167170[215] = 0;
   out_8567902040814167170[216] = 0;
   out_8567902040814167170[217] = 0;
   out_8567902040814167170[218] = 0;
   out_8567902040814167170[219] = 0;
   out_8567902040814167170[220] = 1;
   out_8567902040814167170[221] = 0;
   out_8567902040814167170[222] = 0;
   out_8567902040814167170[223] = 0;
   out_8567902040814167170[224] = 0;
   out_8567902040814167170[225] = 0;
   out_8567902040814167170[226] = 0;
   out_8567902040814167170[227] = 0;
   out_8567902040814167170[228] = 0;
   out_8567902040814167170[229] = 0;
   out_8567902040814167170[230] = 0;
   out_8567902040814167170[231] = 0;
   out_8567902040814167170[232] = 0;
   out_8567902040814167170[233] = 0;
   out_8567902040814167170[234] = 0;
   out_8567902040814167170[235] = 0;
   out_8567902040814167170[236] = 0;
   out_8567902040814167170[237] = 0;
   out_8567902040814167170[238] = 0;
   out_8567902040814167170[239] = 0;
   out_8567902040814167170[240] = 0;
   out_8567902040814167170[241] = 0;
   out_8567902040814167170[242] = 1;
   out_8567902040814167170[243] = 0;
   out_8567902040814167170[244] = 0;
   out_8567902040814167170[245] = 0;
   out_8567902040814167170[246] = 0;
   out_8567902040814167170[247] = 0;
   out_8567902040814167170[248] = 0;
   out_8567902040814167170[249] = 0;
   out_8567902040814167170[250] = 0;
   out_8567902040814167170[251] = 0;
   out_8567902040814167170[252] = 0;
   out_8567902040814167170[253] = 0;
   out_8567902040814167170[254] = 0;
   out_8567902040814167170[255] = 0;
   out_8567902040814167170[256] = 0;
   out_8567902040814167170[257] = 0;
   out_8567902040814167170[258] = 0;
   out_8567902040814167170[259] = 0;
   out_8567902040814167170[260] = 0;
   out_8567902040814167170[261] = 0;
   out_8567902040814167170[262] = 0;
   out_8567902040814167170[263] = 0;
   out_8567902040814167170[264] = 1;
   out_8567902040814167170[265] = 0;
   out_8567902040814167170[266] = 0;
   out_8567902040814167170[267] = 0;
   out_8567902040814167170[268] = 0;
   out_8567902040814167170[269] = 0;
   out_8567902040814167170[270] = 0;
   out_8567902040814167170[271] = 0;
   out_8567902040814167170[272] = 0;
   out_8567902040814167170[273] = 0;
   out_8567902040814167170[274] = 0;
   out_8567902040814167170[275] = 0;
   out_8567902040814167170[276] = 0;
   out_8567902040814167170[277] = 0;
   out_8567902040814167170[278] = 0;
   out_8567902040814167170[279] = 0;
   out_8567902040814167170[280] = 0;
   out_8567902040814167170[281] = 0;
   out_8567902040814167170[282] = 0;
   out_8567902040814167170[283] = 0;
   out_8567902040814167170[284] = 0;
   out_8567902040814167170[285] = 0;
   out_8567902040814167170[286] = 1;
   out_8567902040814167170[287] = 0;
   out_8567902040814167170[288] = 0;
   out_8567902040814167170[289] = 0;
   out_8567902040814167170[290] = 0;
   out_8567902040814167170[291] = 0;
   out_8567902040814167170[292] = 0;
   out_8567902040814167170[293] = 0;
   out_8567902040814167170[294] = 0;
   out_8567902040814167170[295] = 0;
   out_8567902040814167170[296] = 0;
   out_8567902040814167170[297] = 0;
   out_8567902040814167170[298] = 0;
   out_8567902040814167170[299] = 0;
   out_8567902040814167170[300] = 0;
   out_8567902040814167170[301] = 0;
   out_8567902040814167170[302] = 0;
   out_8567902040814167170[303] = 0;
   out_8567902040814167170[304] = 0;
   out_8567902040814167170[305] = 0;
   out_8567902040814167170[306] = 0;
   out_8567902040814167170[307] = 0;
   out_8567902040814167170[308] = 1;
   out_8567902040814167170[309] = 0;
   out_8567902040814167170[310] = 0;
   out_8567902040814167170[311] = 0;
   out_8567902040814167170[312] = 0;
   out_8567902040814167170[313] = 0;
   out_8567902040814167170[314] = 0;
   out_8567902040814167170[315] = 0;
   out_8567902040814167170[316] = 0;
   out_8567902040814167170[317] = 0;
   out_8567902040814167170[318] = 0;
   out_8567902040814167170[319] = 0;
   out_8567902040814167170[320] = 0;
   out_8567902040814167170[321] = 0;
   out_8567902040814167170[322] = 0;
   out_8567902040814167170[323] = 0;
   out_8567902040814167170[324] = 0;
   out_8567902040814167170[325] = 0;
   out_8567902040814167170[326] = 0;
   out_8567902040814167170[327] = 0;
   out_8567902040814167170[328] = 0;
   out_8567902040814167170[329] = 0;
   out_8567902040814167170[330] = 1;
   out_8567902040814167170[331] = 0;
   out_8567902040814167170[332] = 0;
   out_8567902040814167170[333] = 0;
   out_8567902040814167170[334] = 0;
   out_8567902040814167170[335] = 0;
   out_8567902040814167170[336] = 0;
   out_8567902040814167170[337] = 0;
   out_8567902040814167170[338] = 0;
   out_8567902040814167170[339] = 0;
   out_8567902040814167170[340] = 0;
   out_8567902040814167170[341] = 0;
   out_8567902040814167170[342] = 0;
   out_8567902040814167170[343] = 0;
   out_8567902040814167170[344] = 0;
   out_8567902040814167170[345] = 0;
   out_8567902040814167170[346] = 0;
   out_8567902040814167170[347] = 0;
   out_8567902040814167170[348] = 0;
   out_8567902040814167170[349] = 0;
   out_8567902040814167170[350] = 0;
   out_8567902040814167170[351] = 0;
   out_8567902040814167170[352] = 1;
   out_8567902040814167170[353] = 0;
   out_8567902040814167170[354] = 0;
   out_8567902040814167170[355] = 0;
   out_8567902040814167170[356] = 0;
   out_8567902040814167170[357] = 0;
   out_8567902040814167170[358] = 0;
   out_8567902040814167170[359] = 0;
   out_8567902040814167170[360] = 0;
   out_8567902040814167170[361] = 0;
   out_8567902040814167170[362] = 0;
   out_8567902040814167170[363] = 0;
   out_8567902040814167170[364] = 0;
   out_8567902040814167170[365] = 0;
   out_8567902040814167170[366] = 0;
   out_8567902040814167170[367] = 0;
   out_8567902040814167170[368] = 0;
   out_8567902040814167170[369] = 0;
   out_8567902040814167170[370] = 0;
   out_8567902040814167170[371] = 0;
   out_8567902040814167170[372] = 0;
   out_8567902040814167170[373] = 0;
   out_8567902040814167170[374] = 1;
   out_8567902040814167170[375] = 0;
   out_8567902040814167170[376] = 0;
   out_8567902040814167170[377] = 0;
   out_8567902040814167170[378] = 0;
   out_8567902040814167170[379] = 0;
   out_8567902040814167170[380] = 0;
   out_8567902040814167170[381] = 0;
   out_8567902040814167170[382] = 0;
   out_8567902040814167170[383] = 0;
   out_8567902040814167170[384] = 0;
   out_8567902040814167170[385] = 0;
   out_8567902040814167170[386] = 0;
   out_8567902040814167170[387] = 0;
   out_8567902040814167170[388] = 0;
   out_8567902040814167170[389] = 0;
   out_8567902040814167170[390] = 0;
   out_8567902040814167170[391] = 0;
   out_8567902040814167170[392] = 0;
   out_8567902040814167170[393] = 0;
   out_8567902040814167170[394] = 0;
   out_8567902040814167170[395] = 0;
   out_8567902040814167170[396] = 1;
   out_8567902040814167170[397] = 0;
   out_8567902040814167170[398] = 0;
   out_8567902040814167170[399] = 0;
   out_8567902040814167170[400] = 0;
   out_8567902040814167170[401] = 0;
   out_8567902040814167170[402] = 0;
   out_8567902040814167170[403] = 0;
   out_8567902040814167170[404] = 0;
   out_8567902040814167170[405] = 0;
   out_8567902040814167170[406] = 0;
   out_8567902040814167170[407] = 0;
   out_8567902040814167170[408] = 0;
   out_8567902040814167170[409] = 0;
   out_8567902040814167170[410] = 0;
   out_8567902040814167170[411] = 0;
   out_8567902040814167170[412] = 0;
   out_8567902040814167170[413] = 0;
   out_8567902040814167170[414] = 0;
   out_8567902040814167170[415] = 0;
   out_8567902040814167170[416] = 0;
   out_8567902040814167170[417] = 0;
   out_8567902040814167170[418] = 1;
   out_8567902040814167170[419] = 0;
   out_8567902040814167170[420] = 0;
   out_8567902040814167170[421] = 0;
   out_8567902040814167170[422] = 0;
   out_8567902040814167170[423] = 0;
   out_8567902040814167170[424] = 0;
   out_8567902040814167170[425] = 0;
   out_8567902040814167170[426] = 0;
   out_8567902040814167170[427] = 0;
   out_8567902040814167170[428] = 0;
   out_8567902040814167170[429] = 0;
   out_8567902040814167170[430] = 0;
   out_8567902040814167170[431] = 0;
   out_8567902040814167170[432] = 0;
   out_8567902040814167170[433] = 0;
   out_8567902040814167170[434] = 0;
   out_8567902040814167170[435] = 0;
   out_8567902040814167170[436] = 0;
   out_8567902040814167170[437] = 0;
   out_8567902040814167170[438] = 0;
   out_8567902040814167170[439] = 0;
   out_8567902040814167170[440] = 1;
}
void h_4(double *state, double *unused, double *out_906302487838240379) {
   out_906302487838240379[0] = state[10] + state[13];
   out_906302487838240379[1] = state[11] + state[14];
   out_906302487838240379[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2596917562682606019) {
   out_2596917562682606019[0] = 0;
   out_2596917562682606019[1] = 0;
   out_2596917562682606019[2] = 0;
   out_2596917562682606019[3] = 0;
   out_2596917562682606019[4] = 0;
   out_2596917562682606019[5] = 0;
   out_2596917562682606019[6] = 0;
   out_2596917562682606019[7] = 0;
   out_2596917562682606019[8] = 0;
   out_2596917562682606019[9] = 0;
   out_2596917562682606019[10] = 1;
   out_2596917562682606019[11] = 0;
   out_2596917562682606019[12] = 0;
   out_2596917562682606019[13] = 1;
   out_2596917562682606019[14] = 0;
   out_2596917562682606019[15] = 0;
   out_2596917562682606019[16] = 0;
   out_2596917562682606019[17] = 0;
   out_2596917562682606019[18] = 0;
   out_2596917562682606019[19] = 0;
   out_2596917562682606019[20] = 0;
   out_2596917562682606019[21] = 0;
   out_2596917562682606019[22] = 0;
   out_2596917562682606019[23] = 0;
   out_2596917562682606019[24] = 0;
   out_2596917562682606019[25] = 0;
   out_2596917562682606019[26] = 0;
   out_2596917562682606019[27] = 0;
   out_2596917562682606019[28] = 0;
   out_2596917562682606019[29] = 0;
   out_2596917562682606019[30] = 0;
   out_2596917562682606019[31] = 0;
   out_2596917562682606019[32] = 0;
   out_2596917562682606019[33] = 1;
   out_2596917562682606019[34] = 0;
   out_2596917562682606019[35] = 0;
   out_2596917562682606019[36] = 1;
   out_2596917562682606019[37] = 0;
   out_2596917562682606019[38] = 0;
   out_2596917562682606019[39] = 0;
   out_2596917562682606019[40] = 0;
   out_2596917562682606019[41] = 0;
   out_2596917562682606019[42] = 0;
   out_2596917562682606019[43] = 0;
   out_2596917562682606019[44] = 0;
   out_2596917562682606019[45] = 0;
   out_2596917562682606019[46] = 0;
   out_2596917562682606019[47] = 0;
   out_2596917562682606019[48] = 0;
   out_2596917562682606019[49] = 0;
   out_2596917562682606019[50] = 0;
   out_2596917562682606019[51] = 0;
   out_2596917562682606019[52] = 0;
   out_2596917562682606019[53] = 0;
   out_2596917562682606019[54] = 0;
   out_2596917562682606019[55] = 0;
   out_2596917562682606019[56] = 1;
   out_2596917562682606019[57] = 0;
   out_2596917562682606019[58] = 0;
   out_2596917562682606019[59] = 1;
   out_2596917562682606019[60] = 0;
   out_2596917562682606019[61] = 0;
   out_2596917562682606019[62] = 0;
   out_2596917562682606019[63] = 0;
   out_2596917562682606019[64] = 0;
   out_2596917562682606019[65] = 0;
}
void h_9(double *state, double *unused, double *out_9009102261343482123) {
   out_9009102261343482123[0] = state[10];
   out_9009102261343482123[1] = state[11];
   out_9009102261343482123[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2838107209312196664) {
   out_2838107209312196664[0] = 0;
   out_2838107209312196664[1] = 0;
   out_2838107209312196664[2] = 0;
   out_2838107209312196664[3] = 0;
   out_2838107209312196664[4] = 0;
   out_2838107209312196664[5] = 0;
   out_2838107209312196664[6] = 0;
   out_2838107209312196664[7] = 0;
   out_2838107209312196664[8] = 0;
   out_2838107209312196664[9] = 0;
   out_2838107209312196664[10] = 1;
   out_2838107209312196664[11] = 0;
   out_2838107209312196664[12] = 0;
   out_2838107209312196664[13] = 0;
   out_2838107209312196664[14] = 0;
   out_2838107209312196664[15] = 0;
   out_2838107209312196664[16] = 0;
   out_2838107209312196664[17] = 0;
   out_2838107209312196664[18] = 0;
   out_2838107209312196664[19] = 0;
   out_2838107209312196664[20] = 0;
   out_2838107209312196664[21] = 0;
   out_2838107209312196664[22] = 0;
   out_2838107209312196664[23] = 0;
   out_2838107209312196664[24] = 0;
   out_2838107209312196664[25] = 0;
   out_2838107209312196664[26] = 0;
   out_2838107209312196664[27] = 0;
   out_2838107209312196664[28] = 0;
   out_2838107209312196664[29] = 0;
   out_2838107209312196664[30] = 0;
   out_2838107209312196664[31] = 0;
   out_2838107209312196664[32] = 0;
   out_2838107209312196664[33] = 1;
   out_2838107209312196664[34] = 0;
   out_2838107209312196664[35] = 0;
   out_2838107209312196664[36] = 0;
   out_2838107209312196664[37] = 0;
   out_2838107209312196664[38] = 0;
   out_2838107209312196664[39] = 0;
   out_2838107209312196664[40] = 0;
   out_2838107209312196664[41] = 0;
   out_2838107209312196664[42] = 0;
   out_2838107209312196664[43] = 0;
   out_2838107209312196664[44] = 0;
   out_2838107209312196664[45] = 0;
   out_2838107209312196664[46] = 0;
   out_2838107209312196664[47] = 0;
   out_2838107209312196664[48] = 0;
   out_2838107209312196664[49] = 0;
   out_2838107209312196664[50] = 0;
   out_2838107209312196664[51] = 0;
   out_2838107209312196664[52] = 0;
   out_2838107209312196664[53] = 0;
   out_2838107209312196664[54] = 0;
   out_2838107209312196664[55] = 0;
   out_2838107209312196664[56] = 1;
   out_2838107209312196664[57] = 0;
   out_2838107209312196664[58] = 0;
   out_2838107209312196664[59] = 0;
   out_2838107209312196664[60] = 0;
   out_2838107209312196664[61] = 0;
   out_2838107209312196664[62] = 0;
   out_2838107209312196664[63] = 0;
   out_2838107209312196664[64] = 0;
   out_2838107209312196664[65] = 0;
}
void h_10(double *state, double *unused, double *out_4955300569969297432) {
   out_4955300569969297432[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4955300569969297432[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4955300569969297432[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5242975150653558988) {
   out_5242975150653558988[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5242975150653558988[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5242975150653558988[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5242975150653558988[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5242975150653558988[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5242975150653558988[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5242975150653558988[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5242975150653558988[7] = 0;
   out_5242975150653558988[8] = 0;
   out_5242975150653558988[9] = 0;
   out_5242975150653558988[10] = 0;
   out_5242975150653558988[11] = 0;
   out_5242975150653558988[12] = 0;
   out_5242975150653558988[13] = 0;
   out_5242975150653558988[14] = 0;
   out_5242975150653558988[15] = 0;
   out_5242975150653558988[16] = 1;
   out_5242975150653558988[17] = 0;
   out_5242975150653558988[18] = 0;
   out_5242975150653558988[19] = 1;
   out_5242975150653558988[20] = 0;
   out_5242975150653558988[21] = 0;
   out_5242975150653558988[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5242975150653558988[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5242975150653558988[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5242975150653558988[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5242975150653558988[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5242975150653558988[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5242975150653558988[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5242975150653558988[29] = 0;
   out_5242975150653558988[30] = 0;
   out_5242975150653558988[31] = 0;
   out_5242975150653558988[32] = 0;
   out_5242975150653558988[33] = 0;
   out_5242975150653558988[34] = 0;
   out_5242975150653558988[35] = 0;
   out_5242975150653558988[36] = 0;
   out_5242975150653558988[37] = 0;
   out_5242975150653558988[38] = 0;
   out_5242975150653558988[39] = 1;
   out_5242975150653558988[40] = 0;
   out_5242975150653558988[41] = 0;
   out_5242975150653558988[42] = 1;
   out_5242975150653558988[43] = 0;
   out_5242975150653558988[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5242975150653558988[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5242975150653558988[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5242975150653558988[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5242975150653558988[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5242975150653558988[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5242975150653558988[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5242975150653558988[51] = 0;
   out_5242975150653558988[52] = 0;
   out_5242975150653558988[53] = 0;
   out_5242975150653558988[54] = 0;
   out_5242975150653558988[55] = 0;
   out_5242975150653558988[56] = 0;
   out_5242975150653558988[57] = 0;
   out_5242975150653558988[58] = 0;
   out_5242975150653558988[59] = 0;
   out_5242975150653558988[60] = 0;
   out_5242975150653558988[61] = 0;
   out_5242975150653558988[62] = 1;
   out_5242975150653558988[63] = 0;
   out_5242975150653558988[64] = 0;
   out_5242975150653558988[65] = 1;
}
void h_12(double *state, double *unused, double *out_5387068740478992380) {
   out_5387068740478992380[0] = state[0];
   out_5387068740478992380[1] = state[1];
   out_5387068740478992380[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7616373970714567814) {
   out_7616373970714567814[0] = 1;
   out_7616373970714567814[1] = 0;
   out_7616373970714567814[2] = 0;
   out_7616373970714567814[3] = 0;
   out_7616373970714567814[4] = 0;
   out_7616373970714567814[5] = 0;
   out_7616373970714567814[6] = 0;
   out_7616373970714567814[7] = 0;
   out_7616373970714567814[8] = 0;
   out_7616373970714567814[9] = 0;
   out_7616373970714567814[10] = 0;
   out_7616373970714567814[11] = 0;
   out_7616373970714567814[12] = 0;
   out_7616373970714567814[13] = 0;
   out_7616373970714567814[14] = 0;
   out_7616373970714567814[15] = 0;
   out_7616373970714567814[16] = 0;
   out_7616373970714567814[17] = 0;
   out_7616373970714567814[18] = 0;
   out_7616373970714567814[19] = 0;
   out_7616373970714567814[20] = 0;
   out_7616373970714567814[21] = 0;
   out_7616373970714567814[22] = 0;
   out_7616373970714567814[23] = 1;
   out_7616373970714567814[24] = 0;
   out_7616373970714567814[25] = 0;
   out_7616373970714567814[26] = 0;
   out_7616373970714567814[27] = 0;
   out_7616373970714567814[28] = 0;
   out_7616373970714567814[29] = 0;
   out_7616373970714567814[30] = 0;
   out_7616373970714567814[31] = 0;
   out_7616373970714567814[32] = 0;
   out_7616373970714567814[33] = 0;
   out_7616373970714567814[34] = 0;
   out_7616373970714567814[35] = 0;
   out_7616373970714567814[36] = 0;
   out_7616373970714567814[37] = 0;
   out_7616373970714567814[38] = 0;
   out_7616373970714567814[39] = 0;
   out_7616373970714567814[40] = 0;
   out_7616373970714567814[41] = 0;
   out_7616373970714567814[42] = 0;
   out_7616373970714567814[43] = 0;
   out_7616373970714567814[44] = 0;
   out_7616373970714567814[45] = 0;
   out_7616373970714567814[46] = 1;
   out_7616373970714567814[47] = 0;
   out_7616373970714567814[48] = 0;
   out_7616373970714567814[49] = 0;
   out_7616373970714567814[50] = 0;
   out_7616373970714567814[51] = 0;
   out_7616373970714567814[52] = 0;
   out_7616373970714567814[53] = 0;
   out_7616373970714567814[54] = 0;
   out_7616373970714567814[55] = 0;
   out_7616373970714567814[56] = 0;
   out_7616373970714567814[57] = 0;
   out_7616373970714567814[58] = 0;
   out_7616373970714567814[59] = 0;
   out_7616373970714567814[60] = 0;
   out_7616373970714567814[61] = 0;
   out_7616373970714567814[62] = 0;
   out_7616373970714567814[63] = 0;
   out_7616373970714567814[64] = 0;
   out_7616373970714567814[65] = 0;
}
void h_35(double *state, double *unused, double *out_8231047437164215001) {
   out_8231047437164215001[0] = state[7];
   out_8231047437164215001[1] = state[8];
   out_8231047437164215001[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8084807070669970093) {
   out_8084807070669970093[0] = 0;
   out_8084807070669970093[1] = 0;
   out_8084807070669970093[2] = 0;
   out_8084807070669970093[3] = 0;
   out_8084807070669970093[4] = 0;
   out_8084807070669970093[5] = 0;
   out_8084807070669970093[6] = 0;
   out_8084807070669970093[7] = 1;
   out_8084807070669970093[8] = 0;
   out_8084807070669970093[9] = 0;
   out_8084807070669970093[10] = 0;
   out_8084807070669970093[11] = 0;
   out_8084807070669970093[12] = 0;
   out_8084807070669970093[13] = 0;
   out_8084807070669970093[14] = 0;
   out_8084807070669970093[15] = 0;
   out_8084807070669970093[16] = 0;
   out_8084807070669970093[17] = 0;
   out_8084807070669970093[18] = 0;
   out_8084807070669970093[19] = 0;
   out_8084807070669970093[20] = 0;
   out_8084807070669970093[21] = 0;
   out_8084807070669970093[22] = 0;
   out_8084807070669970093[23] = 0;
   out_8084807070669970093[24] = 0;
   out_8084807070669970093[25] = 0;
   out_8084807070669970093[26] = 0;
   out_8084807070669970093[27] = 0;
   out_8084807070669970093[28] = 0;
   out_8084807070669970093[29] = 0;
   out_8084807070669970093[30] = 1;
   out_8084807070669970093[31] = 0;
   out_8084807070669970093[32] = 0;
   out_8084807070669970093[33] = 0;
   out_8084807070669970093[34] = 0;
   out_8084807070669970093[35] = 0;
   out_8084807070669970093[36] = 0;
   out_8084807070669970093[37] = 0;
   out_8084807070669970093[38] = 0;
   out_8084807070669970093[39] = 0;
   out_8084807070669970093[40] = 0;
   out_8084807070669970093[41] = 0;
   out_8084807070669970093[42] = 0;
   out_8084807070669970093[43] = 0;
   out_8084807070669970093[44] = 0;
   out_8084807070669970093[45] = 0;
   out_8084807070669970093[46] = 0;
   out_8084807070669970093[47] = 0;
   out_8084807070669970093[48] = 0;
   out_8084807070669970093[49] = 0;
   out_8084807070669970093[50] = 0;
   out_8084807070669970093[51] = 0;
   out_8084807070669970093[52] = 0;
   out_8084807070669970093[53] = 1;
   out_8084807070669970093[54] = 0;
   out_8084807070669970093[55] = 0;
   out_8084807070669970093[56] = 0;
   out_8084807070669970093[57] = 0;
   out_8084807070669970093[58] = 0;
   out_8084807070669970093[59] = 0;
   out_8084807070669970093[60] = 0;
   out_8084807070669970093[61] = 0;
   out_8084807070669970093[62] = 0;
   out_8084807070669970093[63] = 0;
   out_8084807070669970093[64] = 0;
   out_8084807070669970093[65] = 0;
}
void h_32(double *state, double *unused, double *out_104442129232571274) {
   out_104442129232571274[0] = state[3];
   out_104442129232571274[1] = state[4];
   out_104442129232571274[2] = state[5];
   out_104442129232571274[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5301148906251552500) {
   out_5301148906251552500[0] = 0;
   out_5301148906251552500[1] = 0;
   out_5301148906251552500[2] = 0;
   out_5301148906251552500[3] = 1;
   out_5301148906251552500[4] = 0;
   out_5301148906251552500[5] = 0;
   out_5301148906251552500[6] = 0;
   out_5301148906251552500[7] = 0;
   out_5301148906251552500[8] = 0;
   out_5301148906251552500[9] = 0;
   out_5301148906251552500[10] = 0;
   out_5301148906251552500[11] = 0;
   out_5301148906251552500[12] = 0;
   out_5301148906251552500[13] = 0;
   out_5301148906251552500[14] = 0;
   out_5301148906251552500[15] = 0;
   out_5301148906251552500[16] = 0;
   out_5301148906251552500[17] = 0;
   out_5301148906251552500[18] = 0;
   out_5301148906251552500[19] = 0;
   out_5301148906251552500[20] = 0;
   out_5301148906251552500[21] = 0;
   out_5301148906251552500[22] = 0;
   out_5301148906251552500[23] = 0;
   out_5301148906251552500[24] = 0;
   out_5301148906251552500[25] = 0;
   out_5301148906251552500[26] = 1;
   out_5301148906251552500[27] = 0;
   out_5301148906251552500[28] = 0;
   out_5301148906251552500[29] = 0;
   out_5301148906251552500[30] = 0;
   out_5301148906251552500[31] = 0;
   out_5301148906251552500[32] = 0;
   out_5301148906251552500[33] = 0;
   out_5301148906251552500[34] = 0;
   out_5301148906251552500[35] = 0;
   out_5301148906251552500[36] = 0;
   out_5301148906251552500[37] = 0;
   out_5301148906251552500[38] = 0;
   out_5301148906251552500[39] = 0;
   out_5301148906251552500[40] = 0;
   out_5301148906251552500[41] = 0;
   out_5301148906251552500[42] = 0;
   out_5301148906251552500[43] = 0;
   out_5301148906251552500[44] = 0;
   out_5301148906251552500[45] = 0;
   out_5301148906251552500[46] = 0;
   out_5301148906251552500[47] = 0;
   out_5301148906251552500[48] = 0;
   out_5301148906251552500[49] = 1;
   out_5301148906251552500[50] = 0;
   out_5301148906251552500[51] = 0;
   out_5301148906251552500[52] = 0;
   out_5301148906251552500[53] = 0;
   out_5301148906251552500[54] = 0;
   out_5301148906251552500[55] = 0;
   out_5301148906251552500[56] = 0;
   out_5301148906251552500[57] = 0;
   out_5301148906251552500[58] = 0;
   out_5301148906251552500[59] = 0;
   out_5301148906251552500[60] = 0;
   out_5301148906251552500[61] = 0;
   out_5301148906251552500[62] = 0;
   out_5301148906251552500[63] = 0;
   out_5301148906251552500[64] = 0;
   out_5301148906251552500[65] = 0;
   out_5301148906251552500[66] = 0;
   out_5301148906251552500[67] = 0;
   out_5301148906251552500[68] = 0;
   out_5301148906251552500[69] = 0;
   out_5301148906251552500[70] = 0;
   out_5301148906251552500[71] = 0;
   out_5301148906251552500[72] = 1;
   out_5301148906251552500[73] = 0;
   out_5301148906251552500[74] = 0;
   out_5301148906251552500[75] = 0;
   out_5301148906251552500[76] = 0;
   out_5301148906251552500[77] = 0;
   out_5301148906251552500[78] = 0;
   out_5301148906251552500[79] = 0;
   out_5301148906251552500[80] = 0;
   out_5301148906251552500[81] = 0;
   out_5301148906251552500[82] = 0;
   out_5301148906251552500[83] = 0;
   out_5301148906251552500[84] = 0;
   out_5301148906251552500[85] = 0;
   out_5301148906251552500[86] = 0;
   out_5301148906251552500[87] = 0;
}
void h_13(double *state, double *unused, double *out_6414480357703011048) {
   out_6414480357703011048[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6414480357703011048[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6414480357703011048[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7791348496031812102) {
   out_7791348496031812102[0] = 0;
   out_7791348496031812102[1] = 0;
   out_7791348496031812102[2] = 0;
   out_7791348496031812102[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7791348496031812102[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7791348496031812102[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7791348496031812102[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7791348496031812102[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7791348496031812102[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7791348496031812102[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7791348496031812102[10] = 0;
   out_7791348496031812102[11] = 0;
   out_7791348496031812102[12] = 0;
   out_7791348496031812102[13] = 0;
   out_7791348496031812102[14] = 0;
   out_7791348496031812102[15] = 0;
   out_7791348496031812102[16] = 0;
   out_7791348496031812102[17] = 0;
   out_7791348496031812102[18] = 0;
   out_7791348496031812102[19] = 0;
   out_7791348496031812102[20] = 0;
   out_7791348496031812102[21] = 0;
   out_7791348496031812102[22] = 0;
   out_7791348496031812102[23] = 0;
   out_7791348496031812102[24] = 0;
   out_7791348496031812102[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7791348496031812102[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7791348496031812102[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7791348496031812102[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7791348496031812102[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7791348496031812102[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7791348496031812102[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7791348496031812102[32] = 0;
   out_7791348496031812102[33] = 0;
   out_7791348496031812102[34] = 0;
   out_7791348496031812102[35] = 0;
   out_7791348496031812102[36] = 0;
   out_7791348496031812102[37] = 0;
   out_7791348496031812102[38] = 0;
   out_7791348496031812102[39] = 0;
   out_7791348496031812102[40] = 0;
   out_7791348496031812102[41] = 0;
   out_7791348496031812102[42] = 0;
   out_7791348496031812102[43] = 0;
   out_7791348496031812102[44] = 0;
   out_7791348496031812102[45] = 0;
   out_7791348496031812102[46] = 0;
   out_7791348496031812102[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7791348496031812102[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7791348496031812102[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7791348496031812102[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7791348496031812102[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7791348496031812102[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7791348496031812102[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7791348496031812102[54] = 0;
   out_7791348496031812102[55] = 0;
   out_7791348496031812102[56] = 0;
   out_7791348496031812102[57] = 0;
   out_7791348496031812102[58] = 0;
   out_7791348496031812102[59] = 0;
   out_7791348496031812102[60] = 0;
   out_7791348496031812102[61] = 0;
   out_7791348496031812102[62] = 0;
   out_7791348496031812102[63] = 0;
   out_7791348496031812102[64] = 0;
   out_7791348496031812102[65] = 0;
}
void h_14(double *state, double *unused, double *out_9009102261343482123) {
   out_9009102261343482123[0] = state[10];
   out_9009102261343482123[1] = state[11];
   out_9009102261343482123[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2838107209312196664) {
   out_2838107209312196664[0] = 0;
   out_2838107209312196664[1] = 0;
   out_2838107209312196664[2] = 0;
   out_2838107209312196664[3] = 0;
   out_2838107209312196664[4] = 0;
   out_2838107209312196664[5] = 0;
   out_2838107209312196664[6] = 0;
   out_2838107209312196664[7] = 0;
   out_2838107209312196664[8] = 0;
   out_2838107209312196664[9] = 0;
   out_2838107209312196664[10] = 1;
   out_2838107209312196664[11] = 0;
   out_2838107209312196664[12] = 0;
   out_2838107209312196664[13] = 0;
   out_2838107209312196664[14] = 0;
   out_2838107209312196664[15] = 0;
   out_2838107209312196664[16] = 0;
   out_2838107209312196664[17] = 0;
   out_2838107209312196664[18] = 0;
   out_2838107209312196664[19] = 0;
   out_2838107209312196664[20] = 0;
   out_2838107209312196664[21] = 0;
   out_2838107209312196664[22] = 0;
   out_2838107209312196664[23] = 0;
   out_2838107209312196664[24] = 0;
   out_2838107209312196664[25] = 0;
   out_2838107209312196664[26] = 0;
   out_2838107209312196664[27] = 0;
   out_2838107209312196664[28] = 0;
   out_2838107209312196664[29] = 0;
   out_2838107209312196664[30] = 0;
   out_2838107209312196664[31] = 0;
   out_2838107209312196664[32] = 0;
   out_2838107209312196664[33] = 1;
   out_2838107209312196664[34] = 0;
   out_2838107209312196664[35] = 0;
   out_2838107209312196664[36] = 0;
   out_2838107209312196664[37] = 0;
   out_2838107209312196664[38] = 0;
   out_2838107209312196664[39] = 0;
   out_2838107209312196664[40] = 0;
   out_2838107209312196664[41] = 0;
   out_2838107209312196664[42] = 0;
   out_2838107209312196664[43] = 0;
   out_2838107209312196664[44] = 0;
   out_2838107209312196664[45] = 0;
   out_2838107209312196664[46] = 0;
   out_2838107209312196664[47] = 0;
   out_2838107209312196664[48] = 0;
   out_2838107209312196664[49] = 0;
   out_2838107209312196664[50] = 0;
   out_2838107209312196664[51] = 0;
   out_2838107209312196664[52] = 0;
   out_2838107209312196664[53] = 0;
   out_2838107209312196664[54] = 0;
   out_2838107209312196664[55] = 0;
   out_2838107209312196664[56] = 1;
   out_2838107209312196664[57] = 0;
   out_2838107209312196664[58] = 0;
   out_2838107209312196664[59] = 0;
   out_2838107209312196664[60] = 0;
   out_2838107209312196664[61] = 0;
   out_2838107209312196664[62] = 0;
   out_2838107209312196664[63] = 0;
   out_2838107209312196664[64] = 0;
   out_2838107209312196664[65] = 0;
}
void h_33(double *state, double *unused, double *out_1439639673297395824) {
   out_1439639673297395824[0] = state[16];
   out_1439639673297395824[1] = state[17];
   out_1439639673297395824[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9114136624694070999) {
   out_9114136624694070999[0] = 0;
   out_9114136624694070999[1] = 0;
   out_9114136624694070999[2] = 0;
   out_9114136624694070999[3] = 0;
   out_9114136624694070999[4] = 0;
   out_9114136624694070999[5] = 0;
   out_9114136624694070999[6] = 0;
   out_9114136624694070999[7] = 0;
   out_9114136624694070999[8] = 0;
   out_9114136624694070999[9] = 0;
   out_9114136624694070999[10] = 0;
   out_9114136624694070999[11] = 0;
   out_9114136624694070999[12] = 0;
   out_9114136624694070999[13] = 0;
   out_9114136624694070999[14] = 0;
   out_9114136624694070999[15] = 0;
   out_9114136624694070999[16] = 1;
   out_9114136624694070999[17] = 0;
   out_9114136624694070999[18] = 0;
   out_9114136624694070999[19] = 0;
   out_9114136624694070999[20] = 0;
   out_9114136624694070999[21] = 0;
   out_9114136624694070999[22] = 0;
   out_9114136624694070999[23] = 0;
   out_9114136624694070999[24] = 0;
   out_9114136624694070999[25] = 0;
   out_9114136624694070999[26] = 0;
   out_9114136624694070999[27] = 0;
   out_9114136624694070999[28] = 0;
   out_9114136624694070999[29] = 0;
   out_9114136624694070999[30] = 0;
   out_9114136624694070999[31] = 0;
   out_9114136624694070999[32] = 0;
   out_9114136624694070999[33] = 0;
   out_9114136624694070999[34] = 0;
   out_9114136624694070999[35] = 0;
   out_9114136624694070999[36] = 0;
   out_9114136624694070999[37] = 0;
   out_9114136624694070999[38] = 0;
   out_9114136624694070999[39] = 1;
   out_9114136624694070999[40] = 0;
   out_9114136624694070999[41] = 0;
   out_9114136624694070999[42] = 0;
   out_9114136624694070999[43] = 0;
   out_9114136624694070999[44] = 0;
   out_9114136624694070999[45] = 0;
   out_9114136624694070999[46] = 0;
   out_9114136624694070999[47] = 0;
   out_9114136624694070999[48] = 0;
   out_9114136624694070999[49] = 0;
   out_9114136624694070999[50] = 0;
   out_9114136624694070999[51] = 0;
   out_9114136624694070999[52] = 0;
   out_9114136624694070999[53] = 0;
   out_9114136624694070999[54] = 0;
   out_9114136624694070999[55] = 0;
   out_9114136624694070999[56] = 0;
   out_9114136624694070999[57] = 0;
   out_9114136624694070999[58] = 0;
   out_9114136624694070999[59] = 0;
   out_9114136624694070999[60] = 0;
   out_9114136624694070999[61] = 0;
   out_9114136624694070999[62] = 1;
   out_9114136624694070999[63] = 0;
   out_9114136624694070999[64] = 0;
   out_9114136624694070999[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8256577121296403758) {
  H(in_vec, out_8256577121296403758);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7356205350758974129) {
  err_fun(nom_x, delta_x, out_7356205350758974129);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2101148154720658072) {
  inv_err_fun(nom_x, true_x, out_2101148154720658072);
}
void live_H_mod_fun(double *state, double *out_1559586737427390206) {
  H_mod_fun(state, out_1559586737427390206);
}
void live_f_fun(double *state, double dt, double *out_7251794637018685419) {
  f_fun(state,  dt, out_7251794637018685419);
}
void live_F_fun(double *state, double dt, double *out_8567902040814167170) {
  F_fun(state,  dt, out_8567902040814167170);
}
void live_h_4(double *state, double *unused, double *out_906302487838240379) {
  h_4(state, unused, out_906302487838240379);
}
void live_H_4(double *state, double *unused, double *out_2596917562682606019) {
  H_4(state, unused, out_2596917562682606019);
}
void live_h_9(double *state, double *unused, double *out_9009102261343482123) {
  h_9(state, unused, out_9009102261343482123);
}
void live_H_9(double *state, double *unused, double *out_2838107209312196664) {
  H_9(state, unused, out_2838107209312196664);
}
void live_h_10(double *state, double *unused, double *out_4955300569969297432) {
  h_10(state, unused, out_4955300569969297432);
}
void live_H_10(double *state, double *unused, double *out_5242975150653558988) {
  H_10(state, unused, out_5242975150653558988);
}
void live_h_12(double *state, double *unused, double *out_5387068740478992380) {
  h_12(state, unused, out_5387068740478992380);
}
void live_H_12(double *state, double *unused, double *out_7616373970714567814) {
  H_12(state, unused, out_7616373970714567814);
}
void live_h_35(double *state, double *unused, double *out_8231047437164215001) {
  h_35(state, unused, out_8231047437164215001);
}
void live_H_35(double *state, double *unused, double *out_8084807070669970093) {
  H_35(state, unused, out_8084807070669970093);
}
void live_h_32(double *state, double *unused, double *out_104442129232571274) {
  h_32(state, unused, out_104442129232571274);
}
void live_H_32(double *state, double *unused, double *out_5301148906251552500) {
  H_32(state, unused, out_5301148906251552500);
}
void live_h_13(double *state, double *unused, double *out_6414480357703011048) {
  h_13(state, unused, out_6414480357703011048);
}
void live_H_13(double *state, double *unused, double *out_7791348496031812102) {
  H_13(state, unused, out_7791348496031812102);
}
void live_h_14(double *state, double *unused, double *out_9009102261343482123) {
  h_14(state, unused, out_9009102261343482123);
}
void live_H_14(double *state, double *unused, double *out_2838107209312196664) {
  H_14(state, unused, out_2838107209312196664);
}
void live_h_33(double *state, double *unused, double *out_1439639673297395824) {
  h_33(state, unused, out_1439639673297395824);
}
void live_H_33(double *state, double *unused, double *out_9114136624694070999) {
  H_33(state, unused, out_9114136624694070999);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
