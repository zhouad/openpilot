#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.14.0                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6330864412356249095) {
   out_6330864412356249095[0] = 0;
   out_6330864412356249095[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6330864412356249095[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6330864412356249095[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6330864412356249095[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6330864412356249095[5] = -sin(in_vec[1]);
   out_6330864412356249095[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6330864412356249095[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6330864412356249095[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6330864412356249095[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6330864412356249095[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6330864412356249095[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6330864412356249095[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6330864412356249095[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6330864412356249095[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6330864412356249095[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6330864412356249095[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6330864412356249095[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2184138268403689368) {
   out_2184138268403689368[0] = delta_x[0] + nom_x[0];
   out_2184138268403689368[1] = delta_x[1] + nom_x[1];
   out_2184138268403689368[2] = delta_x[2] + nom_x[2];
   out_2184138268403689368[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2184138268403689368[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2184138268403689368[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2184138268403689368[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2184138268403689368[7] = delta_x[6] + nom_x[7];
   out_2184138268403689368[8] = delta_x[7] + nom_x[8];
   out_2184138268403689368[9] = delta_x[8] + nom_x[9];
   out_2184138268403689368[10] = delta_x[9] + nom_x[10];
   out_2184138268403689368[11] = delta_x[10] + nom_x[11];
   out_2184138268403689368[12] = delta_x[11] + nom_x[12];
   out_2184138268403689368[13] = delta_x[12] + nom_x[13];
   out_2184138268403689368[14] = delta_x[13] + nom_x[14];
   out_2184138268403689368[15] = delta_x[14] + nom_x[15];
   out_2184138268403689368[16] = delta_x[15] + nom_x[16];
   out_2184138268403689368[17] = delta_x[16] + nom_x[17];
   out_2184138268403689368[18] = delta_x[17] + nom_x[18];
   out_2184138268403689368[19] = delta_x[18] + nom_x[19];
   out_2184138268403689368[20] = delta_x[19] + nom_x[20];
   out_2184138268403689368[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6227291690067643035) {
   out_6227291690067643035[0] = -nom_x[0] + true_x[0];
   out_6227291690067643035[1] = -nom_x[1] + true_x[1];
   out_6227291690067643035[2] = -nom_x[2] + true_x[2];
   out_6227291690067643035[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6227291690067643035[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6227291690067643035[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6227291690067643035[6] = -nom_x[7] + true_x[7];
   out_6227291690067643035[7] = -nom_x[8] + true_x[8];
   out_6227291690067643035[8] = -nom_x[9] + true_x[9];
   out_6227291690067643035[9] = -nom_x[10] + true_x[10];
   out_6227291690067643035[10] = -nom_x[11] + true_x[11];
   out_6227291690067643035[11] = -nom_x[12] + true_x[12];
   out_6227291690067643035[12] = -nom_x[13] + true_x[13];
   out_6227291690067643035[13] = -nom_x[14] + true_x[14];
   out_6227291690067643035[14] = -nom_x[15] + true_x[15];
   out_6227291690067643035[15] = -nom_x[16] + true_x[16];
   out_6227291690067643035[16] = -nom_x[17] + true_x[17];
   out_6227291690067643035[17] = -nom_x[18] + true_x[18];
   out_6227291690067643035[18] = -nom_x[19] + true_x[19];
   out_6227291690067643035[19] = -nom_x[20] + true_x[20];
   out_6227291690067643035[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2920090350307623128) {
   out_2920090350307623128[0] = 1.0;
   out_2920090350307623128[1] = 0;
   out_2920090350307623128[2] = 0;
   out_2920090350307623128[3] = 0.0;
   out_2920090350307623128[4] = 0.0;
   out_2920090350307623128[5] = 0.0;
   out_2920090350307623128[6] = 0.0;
   out_2920090350307623128[7] = 0.0;
   out_2920090350307623128[8] = 0.0;
   out_2920090350307623128[9] = 0.0;
   out_2920090350307623128[10] = 0.0;
   out_2920090350307623128[11] = 0.0;
   out_2920090350307623128[12] = 0.0;
   out_2920090350307623128[13] = 0.0;
   out_2920090350307623128[14] = 0.0;
   out_2920090350307623128[15] = 0.0;
   out_2920090350307623128[16] = 0.0;
   out_2920090350307623128[17] = 0.0;
   out_2920090350307623128[18] = 0.0;
   out_2920090350307623128[19] = 0.0;
   out_2920090350307623128[20] = 0.0;
   out_2920090350307623128[21] = 0;
   out_2920090350307623128[22] = 1.0;
   out_2920090350307623128[23] = 0;
   out_2920090350307623128[24] = 0.0;
   out_2920090350307623128[25] = 0.0;
   out_2920090350307623128[26] = 0.0;
   out_2920090350307623128[27] = 0.0;
   out_2920090350307623128[28] = 0.0;
   out_2920090350307623128[29] = 0.0;
   out_2920090350307623128[30] = 0.0;
   out_2920090350307623128[31] = 0.0;
   out_2920090350307623128[32] = 0.0;
   out_2920090350307623128[33] = 0.0;
   out_2920090350307623128[34] = 0.0;
   out_2920090350307623128[35] = 0.0;
   out_2920090350307623128[36] = 0.0;
   out_2920090350307623128[37] = 0.0;
   out_2920090350307623128[38] = 0.0;
   out_2920090350307623128[39] = 0.0;
   out_2920090350307623128[40] = 0.0;
   out_2920090350307623128[41] = 0.0;
   out_2920090350307623128[42] = 0;
   out_2920090350307623128[43] = 0;
   out_2920090350307623128[44] = 1.0;
   out_2920090350307623128[45] = 0.0;
   out_2920090350307623128[46] = 0.0;
   out_2920090350307623128[47] = 0.0;
   out_2920090350307623128[48] = 0.0;
   out_2920090350307623128[49] = 0.0;
   out_2920090350307623128[50] = 0.0;
   out_2920090350307623128[51] = 0.0;
   out_2920090350307623128[52] = 0.0;
   out_2920090350307623128[53] = 0.0;
   out_2920090350307623128[54] = 0.0;
   out_2920090350307623128[55] = 0.0;
   out_2920090350307623128[56] = 0.0;
   out_2920090350307623128[57] = 0.0;
   out_2920090350307623128[58] = 0.0;
   out_2920090350307623128[59] = 0.0;
   out_2920090350307623128[60] = 0.0;
   out_2920090350307623128[61] = 0.0;
   out_2920090350307623128[62] = 0.0;
   out_2920090350307623128[63] = 0.0;
   out_2920090350307623128[64] = 0.0;
   out_2920090350307623128[65] = 0.0;
   out_2920090350307623128[66] = -0.5*state[4];
   out_2920090350307623128[67] = -0.5*state[5];
   out_2920090350307623128[68] = -0.5*state[6];
   out_2920090350307623128[69] = 0.0;
   out_2920090350307623128[70] = 0.0;
   out_2920090350307623128[71] = 0.0;
   out_2920090350307623128[72] = 0.0;
   out_2920090350307623128[73] = 0.0;
   out_2920090350307623128[74] = 0.0;
   out_2920090350307623128[75] = 0.0;
   out_2920090350307623128[76] = 0.0;
   out_2920090350307623128[77] = 0.0;
   out_2920090350307623128[78] = 0.0;
   out_2920090350307623128[79] = 0.0;
   out_2920090350307623128[80] = 0.0;
   out_2920090350307623128[81] = 0.0;
   out_2920090350307623128[82] = 0.0;
   out_2920090350307623128[83] = 0.0;
   out_2920090350307623128[84] = 0.0;
   out_2920090350307623128[85] = 0.0;
   out_2920090350307623128[86] = 0.0;
   out_2920090350307623128[87] = 0.5*state[3];
   out_2920090350307623128[88] = 0.5*state[6];
   out_2920090350307623128[89] = -0.5*state[5];
   out_2920090350307623128[90] = 0.0;
   out_2920090350307623128[91] = 0.0;
   out_2920090350307623128[92] = 0.0;
   out_2920090350307623128[93] = 0.0;
   out_2920090350307623128[94] = 0.0;
   out_2920090350307623128[95] = 0.0;
   out_2920090350307623128[96] = 0.0;
   out_2920090350307623128[97] = 0.0;
   out_2920090350307623128[98] = 0.0;
   out_2920090350307623128[99] = 0.0;
   out_2920090350307623128[100] = 0.0;
   out_2920090350307623128[101] = 0.0;
   out_2920090350307623128[102] = 0.0;
   out_2920090350307623128[103] = 0.0;
   out_2920090350307623128[104] = 0.0;
   out_2920090350307623128[105] = 0.0;
   out_2920090350307623128[106] = 0.0;
   out_2920090350307623128[107] = 0.0;
   out_2920090350307623128[108] = -0.5*state[6];
   out_2920090350307623128[109] = 0.5*state[3];
   out_2920090350307623128[110] = 0.5*state[4];
   out_2920090350307623128[111] = 0.0;
   out_2920090350307623128[112] = 0.0;
   out_2920090350307623128[113] = 0.0;
   out_2920090350307623128[114] = 0.0;
   out_2920090350307623128[115] = 0.0;
   out_2920090350307623128[116] = 0.0;
   out_2920090350307623128[117] = 0.0;
   out_2920090350307623128[118] = 0.0;
   out_2920090350307623128[119] = 0.0;
   out_2920090350307623128[120] = 0.0;
   out_2920090350307623128[121] = 0.0;
   out_2920090350307623128[122] = 0.0;
   out_2920090350307623128[123] = 0.0;
   out_2920090350307623128[124] = 0.0;
   out_2920090350307623128[125] = 0.0;
   out_2920090350307623128[126] = 0.0;
   out_2920090350307623128[127] = 0.0;
   out_2920090350307623128[128] = 0.0;
   out_2920090350307623128[129] = 0.5*state[5];
   out_2920090350307623128[130] = -0.5*state[4];
   out_2920090350307623128[131] = 0.5*state[3];
   out_2920090350307623128[132] = 0.0;
   out_2920090350307623128[133] = 0.0;
   out_2920090350307623128[134] = 0.0;
   out_2920090350307623128[135] = 0.0;
   out_2920090350307623128[136] = 0.0;
   out_2920090350307623128[137] = 0.0;
   out_2920090350307623128[138] = 0.0;
   out_2920090350307623128[139] = 0.0;
   out_2920090350307623128[140] = 0.0;
   out_2920090350307623128[141] = 0.0;
   out_2920090350307623128[142] = 0.0;
   out_2920090350307623128[143] = 0.0;
   out_2920090350307623128[144] = 0.0;
   out_2920090350307623128[145] = 0.0;
   out_2920090350307623128[146] = 0.0;
   out_2920090350307623128[147] = 0.0;
   out_2920090350307623128[148] = 0.0;
   out_2920090350307623128[149] = 0.0;
   out_2920090350307623128[150] = 0.0;
   out_2920090350307623128[151] = 0.0;
   out_2920090350307623128[152] = 0.0;
   out_2920090350307623128[153] = 1.0;
   out_2920090350307623128[154] = 0;
   out_2920090350307623128[155] = 0;
   out_2920090350307623128[156] = 0;
   out_2920090350307623128[157] = 0;
   out_2920090350307623128[158] = 0;
   out_2920090350307623128[159] = 0;
   out_2920090350307623128[160] = 0;
   out_2920090350307623128[161] = 0;
   out_2920090350307623128[162] = 0;
   out_2920090350307623128[163] = 0;
   out_2920090350307623128[164] = 0;
   out_2920090350307623128[165] = 0;
   out_2920090350307623128[166] = 0;
   out_2920090350307623128[167] = 0;
   out_2920090350307623128[168] = 0.0;
   out_2920090350307623128[169] = 0.0;
   out_2920090350307623128[170] = 0.0;
   out_2920090350307623128[171] = 0.0;
   out_2920090350307623128[172] = 0.0;
   out_2920090350307623128[173] = 0.0;
   out_2920090350307623128[174] = 0;
   out_2920090350307623128[175] = 1.0;
   out_2920090350307623128[176] = 0;
   out_2920090350307623128[177] = 0;
   out_2920090350307623128[178] = 0;
   out_2920090350307623128[179] = 0;
   out_2920090350307623128[180] = 0;
   out_2920090350307623128[181] = 0;
   out_2920090350307623128[182] = 0;
   out_2920090350307623128[183] = 0;
   out_2920090350307623128[184] = 0;
   out_2920090350307623128[185] = 0;
   out_2920090350307623128[186] = 0;
   out_2920090350307623128[187] = 0;
   out_2920090350307623128[188] = 0;
   out_2920090350307623128[189] = 0.0;
   out_2920090350307623128[190] = 0.0;
   out_2920090350307623128[191] = 0.0;
   out_2920090350307623128[192] = 0.0;
   out_2920090350307623128[193] = 0.0;
   out_2920090350307623128[194] = 0.0;
   out_2920090350307623128[195] = 0;
   out_2920090350307623128[196] = 0;
   out_2920090350307623128[197] = 1.0;
   out_2920090350307623128[198] = 0;
   out_2920090350307623128[199] = 0;
   out_2920090350307623128[200] = 0;
   out_2920090350307623128[201] = 0;
   out_2920090350307623128[202] = 0;
   out_2920090350307623128[203] = 0;
   out_2920090350307623128[204] = 0;
   out_2920090350307623128[205] = 0;
   out_2920090350307623128[206] = 0;
   out_2920090350307623128[207] = 0;
   out_2920090350307623128[208] = 0;
   out_2920090350307623128[209] = 0;
   out_2920090350307623128[210] = 0.0;
   out_2920090350307623128[211] = 0.0;
   out_2920090350307623128[212] = 0.0;
   out_2920090350307623128[213] = 0.0;
   out_2920090350307623128[214] = 0.0;
   out_2920090350307623128[215] = 0.0;
   out_2920090350307623128[216] = 0;
   out_2920090350307623128[217] = 0;
   out_2920090350307623128[218] = 0;
   out_2920090350307623128[219] = 1.0;
   out_2920090350307623128[220] = 0;
   out_2920090350307623128[221] = 0;
   out_2920090350307623128[222] = 0;
   out_2920090350307623128[223] = 0;
   out_2920090350307623128[224] = 0;
   out_2920090350307623128[225] = 0;
   out_2920090350307623128[226] = 0;
   out_2920090350307623128[227] = 0;
   out_2920090350307623128[228] = 0;
   out_2920090350307623128[229] = 0;
   out_2920090350307623128[230] = 0;
   out_2920090350307623128[231] = 0.0;
   out_2920090350307623128[232] = 0.0;
   out_2920090350307623128[233] = 0.0;
   out_2920090350307623128[234] = 0.0;
   out_2920090350307623128[235] = 0.0;
   out_2920090350307623128[236] = 0.0;
   out_2920090350307623128[237] = 0;
   out_2920090350307623128[238] = 0;
   out_2920090350307623128[239] = 0;
   out_2920090350307623128[240] = 0;
   out_2920090350307623128[241] = 1.0;
   out_2920090350307623128[242] = 0;
   out_2920090350307623128[243] = 0;
   out_2920090350307623128[244] = 0;
   out_2920090350307623128[245] = 0;
   out_2920090350307623128[246] = 0;
   out_2920090350307623128[247] = 0;
   out_2920090350307623128[248] = 0;
   out_2920090350307623128[249] = 0;
   out_2920090350307623128[250] = 0;
   out_2920090350307623128[251] = 0;
   out_2920090350307623128[252] = 0.0;
   out_2920090350307623128[253] = 0.0;
   out_2920090350307623128[254] = 0.0;
   out_2920090350307623128[255] = 0.0;
   out_2920090350307623128[256] = 0.0;
   out_2920090350307623128[257] = 0.0;
   out_2920090350307623128[258] = 0;
   out_2920090350307623128[259] = 0;
   out_2920090350307623128[260] = 0;
   out_2920090350307623128[261] = 0;
   out_2920090350307623128[262] = 0;
   out_2920090350307623128[263] = 1.0;
   out_2920090350307623128[264] = 0;
   out_2920090350307623128[265] = 0;
   out_2920090350307623128[266] = 0;
   out_2920090350307623128[267] = 0;
   out_2920090350307623128[268] = 0;
   out_2920090350307623128[269] = 0;
   out_2920090350307623128[270] = 0;
   out_2920090350307623128[271] = 0;
   out_2920090350307623128[272] = 0;
   out_2920090350307623128[273] = 0.0;
   out_2920090350307623128[274] = 0.0;
   out_2920090350307623128[275] = 0.0;
   out_2920090350307623128[276] = 0.0;
   out_2920090350307623128[277] = 0.0;
   out_2920090350307623128[278] = 0.0;
   out_2920090350307623128[279] = 0;
   out_2920090350307623128[280] = 0;
   out_2920090350307623128[281] = 0;
   out_2920090350307623128[282] = 0;
   out_2920090350307623128[283] = 0;
   out_2920090350307623128[284] = 0;
   out_2920090350307623128[285] = 1.0;
   out_2920090350307623128[286] = 0;
   out_2920090350307623128[287] = 0;
   out_2920090350307623128[288] = 0;
   out_2920090350307623128[289] = 0;
   out_2920090350307623128[290] = 0;
   out_2920090350307623128[291] = 0;
   out_2920090350307623128[292] = 0;
   out_2920090350307623128[293] = 0;
   out_2920090350307623128[294] = 0.0;
   out_2920090350307623128[295] = 0.0;
   out_2920090350307623128[296] = 0.0;
   out_2920090350307623128[297] = 0.0;
   out_2920090350307623128[298] = 0.0;
   out_2920090350307623128[299] = 0.0;
   out_2920090350307623128[300] = 0;
   out_2920090350307623128[301] = 0;
   out_2920090350307623128[302] = 0;
   out_2920090350307623128[303] = 0;
   out_2920090350307623128[304] = 0;
   out_2920090350307623128[305] = 0;
   out_2920090350307623128[306] = 0;
   out_2920090350307623128[307] = 1.0;
   out_2920090350307623128[308] = 0;
   out_2920090350307623128[309] = 0;
   out_2920090350307623128[310] = 0;
   out_2920090350307623128[311] = 0;
   out_2920090350307623128[312] = 0;
   out_2920090350307623128[313] = 0;
   out_2920090350307623128[314] = 0;
   out_2920090350307623128[315] = 0.0;
   out_2920090350307623128[316] = 0.0;
   out_2920090350307623128[317] = 0.0;
   out_2920090350307623128[318] = 0.0;
   out_2920090350307623128[319] = 0.0;
   out_2920090350307623128[320] = 0.0;
   out_2920090350307623128[321] = 0;
   out_2920090350307623128[322] = 0;
   out_2920090350307623128[323] = 0;
   out_2920090350307623128[324] = 0;
   out_2920090350307623128[325] = 0;
   out_2920090350307623128[326] = 0;
   out_2920090350307623128[327] = 0;
   out_2920090350307623128[328] = 0;
   out_2920090350307623128[329] = 1.0;
   out_2920090350307623128[330] = 0;
   out_2920090350307623128[331] = 0;
   out_2920090350307623128[332] = 0;
   out_2920090350307623128[333] = 0;
   out_2920090350307623128[334] = 0;
   out_2920090350307623128[335] = 0;
   out_2920090350307623128[336] = 0.0;
   out_2920090350307623128[337] = 0.0;
   out_2920090350307623128[338] = 0.0;
   out_2920090350307623128[339] = 0.0;
   out_2920090350307623128[340] = 0.0;
   out_2920090350307623128[341] = 0.0;
   out_2920090350307623128[342] = 0;
   out_2920090350307623128[343] = 0;
   out_2920090350307623128[344] = 0;
   out_2920090350307623128[345] = 0;
   out_2920090350307623128[346] = 0;
   out_2920090350307623128[347] = 0;
   out_2920090350307623128[348] = 0;
   out_2920090350307623128[349] = 0;
   out_2920090350307623128[350] = 0;
   out_2920090350307623128[351] = 1.0;
   out_2920090350307623128[352] = 0;
   out_2920090350307623128[353] = 0;
   out_2920090350307623128[354] = 0;
   out_2920090350307623128[355] = 0;
   out_2920090350307623128[356] = 0;
   out_2920090350307623128[357] = 0.0;
   out_2920090350307623128[358] = 0.0;
   out_2920090350307623128[359] = 0.0;
   out_2920090350307623128[360] = 0.0;
   out_2920090350307623128[361] = 0.0;
   out_2920090350307623128[362] = 0.0;
   out_2920090350307623128[363] = 0;
   out_2920090350307623128[364] = 0;
   out_2920090350307623128[365] = 0;
   out_2920090350307623128[366] = 0;
   out_2920090350307623128[367] = 0;
   out_2920090350307623128[368] = 0;
   out_2920090350307623128[369] = 0;
   out_2920090350307623128[370] = 0;
   out_2920090350307623128[371] = 0;
   out_2920090350307623128[372] = 0;
   out_2920090350307623128[373] = 1.0;
   out_2920090350307623128[374] = 0;
   out_2920090350307623128[375] = 0;
   out_2920090350307623128[376] = 0;
   out_2920090350307623128[377] = 0;
   out_2920090350307623128[378] = 0.0;
   out_2920090350307623128[379] = 0.0;
   out_2920090350307623128[380] = 0.0;
   out_2920090350307623128[381] = 0.0;
   out_2920090350307623128[382] = 0.0;
   out_2920090350307623128[383] = 0.0;
   out_2920090350307623128[384] = 0;
   out_2920090350307623128[385] = 0;
   out_2920090350307623128[386] = 0;
   out_2920090350307623128[387] = 0;
   out_2920090350307623128[388] = 0;
   out_2920090350307623128[389] = 0;
   out_2920090350307623128[390] = 0;
   out_2920090350307623128[391] = 0;
   out_2920090350307623128[392] = 0;
   out_2920090350307623128[393] = 0;
   out_2920090350307623128[394] = 0;
   out_2920090350307623128[395] = 1.0;
   out_2920090350307623128[396] = 0;
   out_2920090350307623128[397] = 0;
   out_2920090350307623128[398] = 0;
   out_2920090350307623128[399] = 0.0;
   out_2920090350307623128[400] = 0.0;
   out_2920090350307623128[401] = 0.0;
   out_2920090350307623128[402] = 0.0;
   out_2920090350307623128[403] = 0.0;
   out_2920090350307623128[404] = 0.0;
   out_2920090350307623128[405] = 0;
   out_2920090350307623128[406] = 0;
   out_2920090350307623128[407] = 0;
   out_2920090350307623128[408] = 0;
   out_2920090350307623128[409] = 0;
   out_2920090350307623128[410] = 0;
   out_2920090350307623128[411] = 0;
   out_2920090350307623128[412] = 0;
   out_2920090350307623128[413] = 0;
   out_2920090350307623128[414] = 0;
   out_2920090350307623128[415] = 0;
   out_2920090350307623128[416] = 0;
   out_2920090350307623128[417] = 1.0;
   out_2920090350307623128[418] = 0;
   out_2920090350307623128[419] = 0;
   out_2920090350307623128[420] = 0.0;
   out_2920090350307623128[421] = 0.0;
   out_2920090350307623128[422] = 0.0;
   out_2920090350307623128[423] = 0.0;
   out_2920090350307623128[424] = 0.0;
   out_2920090350307623128[425] = 0.0;
   out_2920090350307623128[426] = 0;
   out_2920090350307623128[427] = 0;
   out_2920090350307623128[428] = 0;
   out_2920090350307623128[429] = 0;
   out_2920090350307623128[430] = 0;
   out_2920090350307623128[431] = 0;
   out_2920090350307623128[432] = 0;
   out_2920090350307623128[433] = 0;
   out_2920090350307623128[434] = 0;
   out_2920090350307623128[435] = 0;
   out_2920090350307623128[436] = 0;
   out_2920090350307623128[437] = 0;
   out_2920090350307623128[438] = 0;
   out_2920090350307623128[439] = 1.0;
   out_2920090350307623128[440] = 0;
   out_2920090350307623128[441] = 0.0;
   out_2920090350307623128[442] = 0.0;
   out_2920090350307623128[443] = 0.0;
   out_2920090350307623128[444] = 0.0;
   out_2920090350307623128[445] = 0.0;
   out_2920090350307623128[446] = 0.0;
   out_2920090350307623128[447] = 0;
   out_2920090350307623128[448] = 0;
   out_2920090350307623128[449] = 0;
   out_2920090350307623128[450] = 0;
   out_2920090350307623128[451] = 0;
   out_2920090350307623128[452] = 0;
   out_2920090350307623128[453] = 0;
   out_2920090350307623128[454] = 0;
   out_2920090350307623128[455] = 0;
   out_2920090350307623128[456] = 0;
   out_2920090350307623128[457] = 0;
   out_2920090350307623128[458] = 0;
   out_2920090350307623128[459] = 0;
   out_2920090350307623128[460] = 0;
   out_2920090350307623128[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6894308160155303963) {
   out_6894308160155303963[0] = dt*state[7] + state[0];
   out_6894308160155303963[1] = dt*state[8] + state[1];
   out_6894308160155303963[2] = dt*state[9] + state[2];
   out_6894308160155303963[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6894308160155303963[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6894308160155303963[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6894308160155303963[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6894308160155303963[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6894308160155303963[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6894308160155303963[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6894308160155303963[10] = state[10];
   out_6894308160155303963[11] = state[11];
   out_6894308160155303963[12] = state[12];
   out_6894308160155303963[13] = state[13];
   out_6894308160155303963[14] = state[14];
   out_6894308160155303963[15] = state[15];
   out_6894308160155303963[16] = state[16];
   out_6894308160155303963[17] = state[17];
   out_6894308160155303963[18] = state[18];
   out_6894308160155303963[19] = state[19];
   out_6894308160155303963[20] = state[20];
   out_6894308160155303963[21] = state[21];
}
void F_fun(double *state, double dt, double *out_9123483619647982274) {
   out_9123483619647982274[0] = 1;
   out_9123483619647982274[1] = 0;
   out_9123483619647982274[2] = 0;
   out_9123483619647982274[3] = 0;
   out_9123483619647982274[4] = 0;
   out_9123483619647982274[5] = 0;
   out_9123483619647982274[6] = dt;
   out_9123483619647982274[7] = 0;
   out_9123483619647982274[8] = 0;
   out_9123483619647982274[9] = 0;
   out_9123483619647982274[10] = 0;
   out_9123483619647982274[11] = 0;
   out_9123483619647982274[12] = 0;
   out_9123483619647982274[13] = 0;
   out_9123483619647982274[14] = 0;
   out_9123483619647982274[15] = 0;
   out_9123483619647982274[16] = 0;
   out_9123483619647982274[17] = 0;
   out_9123483619647982274[18] = 0;
   out_9123483619647982274[19] = 0;
   out_9123483619647982274[20] = 0;
   out_9123483619647982274[21] = 0;
   out_9123483619647982274[22] = 1;
   out_9123483619647982274[23] = 0;
   out_9123483619647982274[24] = 0;
   out_9123483619647982274[25] = 0;
   out_9123483619647982274[26] = 0;
   out_9123483619647982274[27] = 0;
   out_9123483619647982274[28] = dt;
   out_9123483619647982274[29] = 0;
   out_9123483619647982274[30] = 0;
   out_9123483619647982274[31] = 0;
   out_9123483619647982274[32] = 0;
   out_9123483619647982274[33] = 0;
   out_9123483619647982274[34] = 0;
   out_9123483619647982274[35] = 0;
   out_9123483619647982274[36] = 0;
   out_9123483619647982274[37] = 0;
   out_9123483619647982274[38] = 0;
   out_9123483619647982274[39] = 0;
   out_9123483619647982274[40] = 0;
   out_9123483619647982274[41] = 0;
   out_9123483619647982274[42] = 0;
   out_9123483619647982274[43] = 0;
   out_9123483619647982274[44] = 1;
   out_9123483619647982274[45] = 0;
   out_9123483619647982274[46] = 0;
   out_9123483619647982274[47] = 0;
   out_9123483619647982274[48] = 0;
   out_9123483619647982274[49] = 0;
   out_9123483619647982274[50] = dt;
   out_9123483619647982274[51] = 0;
   out_9123483619647982274[52] = 0;
   out_9123483619647982274[53] = 0;
   out_9123483619647982274[54] = 0;
   out_9123483619647982274[55] = 0;
   out_9123483619647982274[56] = 0;
   out_9123483619647982274[57] = 0;
   out_9123483619647982274[58] = 0;
   out_9123483619647982274[59] = 0;
   out_9123483619647982274[60] = 0;
   out_9123483619647982274[61] = 0;
   out_9123483619647982274[62] = 0;
   out_9123483619647982274[63] = 0;
   out_9123483619647982274[64] = 0;
   out_9123483619647982274[65] = 0;
   out_9123483619647982274[66] = 1;
   out_9123483619647982274[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9123483619647982274[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_9123483619647982274[69] = 0;
   out_9123483619647982274[70] = 0;
   out_9123483619647982274[71] = 0;
   out_9123483619647982274[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9123483619647982274[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9123483619647982274[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9123483619647982274[75] = 0;
   out_9123483619647982274[76] = 0;
   out_9123483619647982274[77] = 0;
   out_9123483619647982274[78] = 0;
   out_9123483619647982274[79] = 0;
   out_9123483619647982274[80] = 0;
   out_9123483619647982274[81] = 0;
   out_9123483619647982274[82] = 0;
   out_9123483619647982274[83] = 0;
   out_9123483619647982274[84] = 0;
   out_9123483619647982274[85] = 0;
   out_9123483619647982274[86] = 0;
   out_9123483619647982274[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9123483619647982274[88] = 1;
   out_9123483619647982274[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_9123483619647982274[90] = 0;
   out_9123483619647982274[91] = 0;
   out_9123483619647982274[92] = 0;
   out_9123483619647982274[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9123483619647982274[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9123483619647982274[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9123483619647982274[96] = 0;
   out_9123483619647982274[97] = 0;
   out_9123483619647982274[98] = 0;
   out_9123483619647982274[99] = 0;
   out_9123483619647982274[100] = 0;
   out_9123483619647982274[101] = 0;
   out_9123483619647982274[102] = 0;
   out_9123483619647982274[103] = 0;
   out_9123483619647982274[104] = 0;
   out_9123483619647982274[105] = 0;
   out_9123483619647982274[106] = 0;
   out_9123483619647982274[107] = 0;
   out_9123483619647982274[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_9123483619647982274[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_9123483619647982274[110] = 1;
   out_9123483619647982274[111] = 0;
   out_9123483619647982274[112] = 0;
   out_9123483619647982274[113] = 0;
   out_9123483619647982274[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9123483619647982274[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9123483619647982274[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9123483619647982274[117] = 0;
   out_9123483619647982274[118] = 0;
   out_9123483619647982274[119] = 0;
   out_9123483619647982274[120] = 0;
   out_9123483619647982274[121] = 0;
   out_9123483619647982274[122] = 0;
   out_9123483619647982274[123] = 0;
   out_9123483619647982274[124] = 0;
   out_9123483619647982274[125] = 0;
   out_9123483619647982274[126] = 0;
   out_9123483619647982274[127] = 0;
   out_9123483619647982274[128] = 0;
   out_9123483619647982274[129] = 0;
   out_9123483619647982274[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9123483619647982274[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_9123483619647982274[132] = 1;
   out_9123483619647982274[133] = 0;
   out_9123483619647982274[134] = 0;
   out_9123483619647982274[135] = 0;
   out_9123483619647982274[136] = 0;
   out_9123483619647982274[137] = 0;
   out_9123483619647982274[138] = 0;
   out_9123483619647982274[139] = 0;
   out_9123483619647982274[140] = 0;
   out_9123483619647982274[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9123483619647982274[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9123483619647982274[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9123483619647982274[144] = 0;
   out_9123483619647982274[145] = 0;
   out_9123483619647982274[146] = 0;
   out_9123483619647982274[147] = 0;
   out_9123483619647982274[148] = 0;
   out_9123483619647982274[149] = 0;
   out_9123483619647982274[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9123483619647982274[151] = 0;
   out_9123483619647982274[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_9123483619647982274[153] = 0;
   out_9123483619647982274[154] = 1;
   out_9123483619647982274[155] = 0;
   out_9123483619647982274[156] = 0;
   out_9123483619647982274[157] = 0;
   out_9123483619647982274[158] = 0;
   out_9123483619647982274[159] = 0;
   out_9123483619647982274[160] = 0;
   out_9123483619647982274[161] = 0;
   out_9123483619647982274[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9123483619647982274[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9123483619647982274[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9123483619647982274[165] = 0;
   out_9123483619647982274[166] = 0;
   out_9123483619647982274[167] = 0;
   out_9123483619647982274[168] = 0;
   out_9123483619647982274[169] = 0;
   out_9123483619647982274[170] = 0;
   out_9123483619647982274[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_9123483619647982274[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_9123483619647982274[173] = 0;
   out_9123483619647982274[174] = 0;
   out_9123483619647982274[175] = 0;
   out_9123483619647982274[176] = 1;
   out_9123483619647982274[177] = 0;
   out_9123483619647982274[178] = 0;
   out_9123483619647982274[179] = 0;
   out_9123483619647982274[180] = 0;
   out_9123483619647982274[181] = 0;
   out_9123483619647982274[182] = 0;
   out_9123483619647982274[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9123483619647982274[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9123483619647982274[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9123483619647982274[186] = 0;
   out_9123483619647982274[187] = 0;
   out_9123483619647982274[188] = 0;
   out_9123483619647982274[189] = 0;
   out_9123483619647982274[190] = 0;
   out_9123483619647982274[191] = 0;
   out_9123483619647982274[192] = 0;
   out_9123483619647982274[193] = 0;
   out_9123483619647982274[194] = 0;
   out_9123483619647982274[195] = 0;
   out_9123483619647982274[196] = 0;
   out_9123483619647982274[197] = 0;
   out_9123483619647982274[198] = 1;
   out_9123483619647982274[199] = 0;
   out_9123483619647982274[200] = 0;
   out_9123483619647982274[201] = 0;
   out_9123483619647982274[202] = 0;
   out_9123483619647982274[203] = 0;
   out_9123483619647982274[204] = 0;
   out_9123483619647982274[205] = 0;
   out_9123483619647982274[206] = 0;
   out_9123483619647982274[207] = 0;
   out_9123483619647982274[208] = 0;
   out_9123483619647982274[209] = 0;
   out_9123483619647982274[210] = 0;
   out_9123483619647982274[211] = 0;
   out_9123483619647982274[212] = 0;
   out_9123483619647982274[213] = 0;
   out_9123483619647982274[214] = 0;
   out_9123483619647982274[215] = 0;
   out_9123483619647982274[216] = 0;
   out_9123483619647982274[217] = 0;
   out_9123483619647982274[218] = 0;
   out_9123483619647982274[219] = 0;
   out_9123483619647982274[220] = 1;
   out_9123483619647982274[221] = 0;
   out_9123483619647982274[222] = 0;
   out_9123483619647982274[223] = 0;
   out_9123483619647982274[224] = 0;
   out_9123483619647982274[225] = 0;
   out_9123483619647982274[226] = 0;
   out_9123483619647982274[227] = 0;
   out_9123483619647982274[228] = 0;
   out_9123483619647982274[229] = 0;
   out_9123483619647982274[230] = 0;
   out_9123483619647982274[231] = 0;
   out_9123483619647982274[232] = 0;
   out_9123483619647982274[233] = 0;
   out_9123483619647982274[234] = 0;
   out_9123483619647982274[235] = 0;
   out_9123483619647982274[236] = 0;
   out_9123483619647982274[237] = 0;
   out_9123483619647982274[238] = 0;
   out_9123483619647982274[239] = 0;
   out_9123483619647982274[240] = 0;
   out_9123483619647982274[241] = 0;
   out_9123483619647982274[242] = 1;
   out_9123483619647982274[243] = 0;
   out_9123483619647982274[244] = 0;
   out_9123483619647982274[245] = 0;
   out_9123483619647982274[246] = 0;
   out_9123483619647982274[247] = 0;
   out_9123483619647982274[248] = 0;
   out_9123483619647982274[249] = 0;
   out_9123483619647982274[250] = 0;
   out_9123483619647982274[251] = 0;
   out_9123483619647982274[252] = 0;
   out_9123483619647982274[253] = 0;
   out_9123483619647982274[254] = 0;
   out_9123483619647982274[255] = 0;
   out_9123483619647982274[256] = 0;
   out_9123483619647982274[257] = 0;
   out_9123483619647982274[258] = 0;
   out_9123483619647982274[259] = 0;
   out_9123483619647982274[260] = 0;
   out_9123483619647982274[261] = 0;
   out_9123483619647982274[262] = 0;
   out_9123483619647982274[263] = 0;
   out_9123483619647982274[264] = 1;
   out_9123483619647982274[265] = 0;
   out_9123483619647982274[266] = 0;
   out_9123483619647982274[267] = 0;
   out_9123483619647982274[268] = 0;
   out_9123483619647982274[269] = 0;
   out_9123483619647982274[270] = 0;
   out_9123483619647982274[271] = 0;
   out_9123483619647982274[272] = 0;
   out_9123483619647982274[273] = 0;
   out_9123483619647982274[274] = 0;
   out_9123483619647982274[275] = 0;
   out_9123483619647982274[276] = 0;
   out_9123483619647982274[277] = 0;
   out_9123483619647982274[278] = 0;
   out_9123483619647982274[279] = 0;
   out_9123483619647982274[280] = 0;
   out_9123483619647982274[281] = 0;
   out_9123483619647982274[282] = 0;
   out_9123483619647982274[283] = 0;
   out_9123483619647982274[284] = 0;
   out_9123483619647982274[285] = 0;
   out_9123483619647982274[286] = 1;
   out_9123483619647982274[287] = 0;
   out_9123483619647982274[288] = 0;
   out_9123483619647982274[289] = 0;
   out_9123483619647982274[290] = 0;
   out_9123483619647982274[291] = 0;
   out_9123483619647982274[292] = 0;
   out_9123483619647982274[293] = 0;
   out_9123483619647982274[294] = 0;
   out_9123483619647982274[295] = 0;
   out_9123483619647982274[296] = 0;
   out_9123483619647982274[297] = 0;
   out_9123483619647982274[298] = 0;
   out_9123483619647982274[299] = 0;
   out_9123483619647982274[300] = 0;
   out_9123483619647982274[301] = 0;
   out_9123483619647982274[302] = 0;
   out_9123483619647982274[303] = 0;
   out_9123483619647982274[304] = 0;
   out_9123483619647982274[305] = 0;
   out_9123483619647982274[306] = 0;
   out_9123483619647982274[307] = 0;
   out_9123483619647982274[308] = 1;
   out_9123483619647982274[309] = 0;
   out_9123483619647982274[310] = 0;
   out_9123483619647982274[311] = 0;
   out_9123483619647982274[312] = 0;
   out_9123483619647982274[313] = 0;
   out_9123483619647982274[314] = 0;
   out_9123483619647982274[315] = 0;
   out_9123483619647982274[316] = 0;
   out_9123483619647982274[317] = 0;
   out_9123483619647982274[318] = 0;
   out_9123483619647982274[319] = 0;
   out_9123483619647982274[320] = 0;
   out_9123483619647982274[321] = 0;
   out_9123483619647982274[322] = 0;
   out_9123483619647982274[323] = 0;
   out_9123483619647982274[324] = 0;
   out_9123483619647982274[325] = 0;
   out_9123483619647982274[326] = 0;
   out_9123483619647982274[327] = 0;
   out_9123483619647982274[328] = 0;
   out_9123483619647982274[329] = 0;
   out_9123483619647982274[330] = 1;
   out_9123483619647982274[331] = 0;
   out_9123483619647982274[332] = 0;
   out_9123483619647982274[333] = 0;
   out_9123483619647982274[334] = 0;
   out_9123483619647982274[335] = 0;
   out_9123483619647982274[336] = 0;
   out_9123483619647982274[337] = 0;
   out_9123483619647982274[338] = 0;
   out_9123483619647982274[339] = 0;
   out_9123483619647982274[340] = 0;
   out_9123483619647982274[341] = 0;
   out_9123483619647982274[342] = 0;
   out_9123483619647982274[343] = 0;
   out_9123483619647982274[344] = 0;
   out_9123483619647982274[345] = 0;
   out_9123483619647982274[346] = 0;
   out_9123483619647982274[347] = 0;
   out_9123483619647982274[348] = 0;
   out_9123483619647982274[349] = 0;
   out_9123483619647982274[350] = 0;
   out_9123483619647982274[351] = 0;
   out_9123483619647982274[352] = 1;
   out_9123483619647982274[353] = 0;
   out_9123483619647982274[354] = 0;
   out_9123483619647982274[355] = 0;
   out_9123483619647982274[356] = 0;
   out_9123483619647982274[357] = 0;
   out_9123483619647982274[358] = 0;
   out_9123483619647982274[359] = 0;
   out_9123483619647982274[360] = 0;
   out_9123483619647982274[361] = 0;
   out_9123483619647982274[362] = 0;
   out_9123483619647982274[363] = 0;
   out_9123483619647982274[364] = 0;
   out_9123483619647982274[365] = 0;
   out_9123483619647982274[366] = 0;
   out_9123483619647982274[367] = 0;
   out_9123483619647982274[368] = 0;
   out_9123483619647982274[369] = 0;
   out_9123483619647982274[370] = 0;
   out_9123483619647982274[371] = 0;
   out_9123483619647982274[372] = 0;
   out_9123483619647982274[373] = 0;
   out_9123483619647982274[374] = 1;
   out_9123483619647982274[375] = 0;
   out_9123483619647982274[376] = 0;
   out_9123483619647982274[377] = 0;
   out_9123483619647982274[378] = 0;
   out_9123483619647982274[379] = 0;
   out_9123483619647982274[380] = 0;
   out_9123483619647982274[381] = 0;
   out_9123483619647982274[382] = 0;
   out_9123483619647982274[383] = 0;
   out_9123483619647982274[384] = 0;
   out_9123483619647982274[385] = 0;
   out_9123483619647982274[386] = 0;
   out_9123483619647982274[387] = 0;
   out_9123483619647982274[388] = 0;
   out_9123483619647982274[389] = 0;
   out_9123483619647982274[390] = 0;
   out_9123483619647982274[391] = 0;
   out_9123483619647982274[392] = 0;
   out_9123483619647982274[393] = 0;
   out_9123483619647982274[394] = 0;
   out_9123483619647982274[395] = 0;
   out_9123483619647982274[396] = 1;
   out_9123483619647982274[397] = 0;
   out_9123483619647982274[398] = 0;
   out_9123483619647982274[399] = 0;
   out_9123483619647982274[400] = 0;
   out_9123483619647982274[401] = 0;
   out_9123483619647982274[402] = 0;
   out_9123483619647982274[403] = 0;
   out_9123483619647982274[404] = 0;
   out_9123483619647982274[405] = 0;
   out_9123483619647982274[406] = 0;
   out_9123483619647982274[407] = 0;
   out_9123483619647982274[408] = 0;
   out_9123483619647982274[409] = 0;
   out_9123483619647982274[410] = 0;
   out_9123483619647982274[411] = 0;
   out_9123483619647982274[412] = 0;
   out_9123483619647982274[413] = 0;
   out_9123483619647982274[414] = 0;
   out_9123483619647982274[415] = 0;
   out_9123483619647982274[416] = 0;
   out_9123483619647982274[417] = 0;
   out_9123483619647982274[418] = 1;
   out_9123483619647982274[419] = 0;
   out_9123483619647982274[420] = 0;
   out_9123483619647982274[421] = 0;
   out_9123483619647982274[422] = 0;
   out_9123483619647982274[423] = 0;
   out_9123483619647982274[424] = 0;
   out_9123483619647982274[425] = 0;
   out_9123483619647982274[426] = 0;
   out_9123483619647982274[427] = 0;
   out_9123483619647982274[428] = 0;
   out_9123483619647982274[429] = 0;
   out_9123483619647982274[430] = 0;
   out_9123483619647982274[431] = 0;
   out_9123483619647982274[432] = 0;
   out_9123483619647982274[433] = 0;
   out_9123483619647982274[434] = 0;
   out_9123483619647982274[435] = 0;
   out_9123483619647982274[436] = 0;
   out_9123483619647982274[437] = 0;
   out_9123483619647982274[438] = 0;
   out_9123483619647982274[439] = 0;
   out_9123483619647982274[440] = 1;
}
void h_4(double *state, double *unused, double *out_1894937552768048796) {
   out_1894937552768048796[0] = state[10] + state[13];
   out_1894937552768048796[1] = state[11] + state[14];
   out_1894937552768048796[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5989735521063437686) {
   out_5989735521063437686[0] = 0;
   out_5989735521063437686[1] = 0;
   out_5989735521063437686[2] = 0;
   out_5989735521063437686[3] = 0;
   out_5989735521063437686[4] = 0;
   out_5989735521063437686[5] = 0;
   out_5989735521063437686[6] = 0;
   out_5989735521063437686[7] = 0;
   out_5989735521063437686[8] = 0;
   out_5989735521063437686[9] = 0;
   out_5989735521063437686[10] = 1;
   out_5989735521063437686[11] = 0;
   out_5989735521063437686[12] = 0;
   out_5989735521063437686[13] = 1;
   out_5989735521063437686[14] = 0;
   out_5989735521063437686[15] = 0;
   out_5989735521063437686[16] = 0;
   out_5989735521063437686[17] = 0;
   out_5989735521063437686[18] = 0;
   out_5989735521063437686[19] = 0;
   out_5989735521063437686[20] = 0;
   out_5989735521063437686[21] = 0;
   out_5989735521063437686[22] = 0;
   out_5989735521063437686[23] = 0;
   out_5989735521063437686[24] = 0;
   out_5989735521063437686[25] = 0;
   out_5989735521063437686[26] = 0;
   out_5989735521063437686[27] = 0;
   out_5989735521063437686[28] = 0;
   out_5989735521063437686[29] = 0;
   out_5989735521063437686[30] = 0;
   out_5989735521063437686[31] = 0;
   out_5989735521063437686[32] = 0;
   out_5989735521063437686[33] = 1;
   out_5989735521063437686[34] = 0;
   out_5989735521063437686[35] = 0;
   out_5989735521063437686[36] = 1;
   out_5989735521063437686[37] = 0;
   out_5989735521063437686[38] = 0;
   out_5989735521063437686[39] = 0;
   out_5989735521063437686[40] = 0;
   out_5989735521063437686[41] = 0;
   out_5989735521063437686[42] = 0;
   out_5989735521063437686[43] = 0;
   out_5989735521063437686[44] = 0;
   out_5989735521063437686[45] = 0;
   out_5989735521063437686[46] = 0;
   out_5989735521063437686[47] = 0;
   out_5989735521063437686[48] = 0;
   out_5989735521063437686[49] = 0;
   out_5989735521063437686[50] = 0;
   out_5989735521063437686[51] = 0;
   out_5989735521063437686[52] = 0;
   out_5989735521063437686[53] = 0;
   out_5989735521063437686[54] = 0;
   out_5989735521063437686[55] = 0;
   out_5989735521063437686[56] = 1;
   out_5989735521063437686[57] = 0;
   out_5989735521063437686[58] = 0;
   out_5989735521063437686[59] = 1;
   out_5989735521063437686[60] = 0;
   out_5989735521063437686[61] = 0;
   out_5989735521063437686[62] = 0;
   out_5989735521063437686[63] = 0;
   out_5989735521063437686[64] = 0;
   out_5989735521063437686[65] = 0;
}
void h_9(double *state, double *unused, double *out_4294315309452820316) {
   out_4294315309452820316[0] = state[10];
   out_4294315309452820316[1] = state[11];
   out_4294315309452820316[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3100873968783358344) {
   out_3100873968783358344[0] = 0;
   out_3100873968783358344[1] = 0;
   out_3100873968783358344[2] = 0;
   out_3100873968783358344[3] = 0;
   out_3100873968783358344[4] = 0;
   out_3100873968783358344[5] = 0;
   out_3100873968783358344[6] = 0;
   out_3100873968783358344[7] = 0;
   out_3100873968783358344[8] = 0;
   out_3100873968783358344[9] = 0;
   out_3100873968783358344[10] = 1;
   out_3100873968783358344[11] = 0;
   out_3100873968783358344[12] = 0;
   out_3100873968783358344[13] = 0;
   out_3100873968783358344[14] = 0;
   out_3100873968783358344[15] = 0;
   out_3100873968783358344[16] = 0;
   out_3100873968783358344[17] = 0;
   out_3100873968783358344[18] = 0;
   out_3100873968783358344[19] = 0;
   out_3100873968783358344[20] = 0;
   out_3100873968783358344[21] = 0;
   out_3100873968783358344[22] = 0;
   out_3100873968783358344[23] = 0;
   out_3100873968783358344[24] = 0;
   out_3100873968783358344[25] = 0;
   out_3100873968783358344[26] = 0;
   out_3100873968783358344[27] = 0;
   out_3100873968783358344[28] = 0;
   out_3100873968783358344[29] = 0;
   out_3100873968783358344[30] = 0;
   out_3100873968783358344[31] = 0;
   out_3100873968783358344[32] = 0;
   out_3100873968783358344[33] = 1;
   out_3100873968783358344[34] = 0;
   out_3100873968783358344[35] = 0;
   out_3100873968783358344[36] = 0;
   out_3100873968783358344[37] = 0;
   out_3100873968783358344[38] = 0;
   out_3100873968783358344[39] = 0;
   out_3100873968783358344[40] = 0;
   out_3100873968783358344[41] = 0;
   out_3100873968783358344[42] = 0;
   out_3100873968783358344[43] = 0;
   out_3100873968783358344[44] = 0;
   out_3100873968783358344[45] = 0;
   out_3100873968783358344[46] = 0;
   out_3100873968783358344[47] = 0;
   out_3100873968783358344[48] = 0;
   out_3100873968783358344[49] = 0;
   out_3100873968783358344[50] = 0;
   out_3100873968783358344[51] = 0;
   out_3100873968783358344[52] = 0;
   out_3100873968783358344[53] = 0;
   out_3100873968783358344[54] = 0;
   out_3100873968783358344[55] = 0;
   out_3100873968783358344[56] = 1;
   out_3100873968783358344[57] = 0;
   out_3100873968783358344[58] = 0;
   out_3100873968783358344[59] = 0;
   out_3100873968783358344[60] = 0;
   out_3100873968783358344[61] = 0;
   out_3100873968783358344[62] = 0;
   out_3100873968783358344[63] = 0;
   out_3100873968783358344[64] = 0;
   out_3100873968783358344[65] = 0;
}
void h_10(double *state, double *unused, double *out_1396005915906487718) {
   out_1396005915906487718[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1396005915906487718[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1396005915906487718[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_168727971127988768) {
   out_168727971127988768[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_168727971127988768[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_168727971127988768[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_168727971127988768[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_168727971127988768[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_168727971127988768[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_168727971127988768[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_168727971127988768[7] = 0;
   out_168727971127988768[8] = 0;
   out_168727971127988768[9] = 0;
   out_168727971127988768[10] = 0;
   out_168727971127988768[11] = 0;
   out_168727971127988768[12] = 0;
   out_168727971127988768[13] = 0;
   out_168727971127988768[14] = 0;
   out_168727971127988768[15] = 0;
   out_168727971127988768[16] = 1;
   out_168727971127988768[17] = 0;
   out_168727971127988768[18] = 0;
   out_168727971127988768[19] = 1;
   out_168727971127988768[20] = 0;
   out_168727971127988768[21] = 0;
   out_168727971127988768[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_168727971127988768[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_168727971127988768[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_168727971127988768[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_168727971127988768[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_168727971127988768[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_168727971127988768[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_168727971127988768[29] = 0;
   out_168727971127988768[30] = 0;
   out_168727971127988768[31] = 0;
   out_168727971127988768[32] = 0;
   out_168727971127988768[33] = 0;
   out_168727971127988768[34] = 0;
   out_168727971127988768[35] = 0;
   out_168727971127988768[36] = 0;
   out_168727971127988768[37] = 0;
   out_168727971127988768[38] = 0;
   out_168727971127988768[39] = 1;
   out_168727971127988768[40] = 0;
   out_168727971127988768[41] = 0;
   out_168727971127988768[42] = 1;
   out_168727971127988768[43] = 0;
   out_168727971127988768[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_168727971127988768[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_168727971127988768[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_168727971127988768[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_168727971127988768[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_168727971127988768[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_168727971127988768[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_168727971127988768[51] = 0;
   out_168727971127988768[52] = 0;
   out_168727971127988768[53] = 0;
   out_168727971127988768[54] = 0;
   out_168727971127988768[55] = 0;
   out_168727971127988768[56] = 0;
   out_168727971127988768[57] = 0;
   out_168727971127988768[58] = 0;
   out_168727971127988768[59] = 0;
   out_168727971127988768[60] = 0;
   out_168727971127988768[61] = 0;
   out_168727971127988768[62] = 1;
   out_168727971127988768[63] = 0;
   out_168727971127988768[64] = 0;
   out_168727971127988768[65] = 1;
}
void h_12(double *state, double *unused, double *out_1321807637606364574) {
   out_1321807637606364574[0] = state[0];
   out_1321807637606364574[1] = state[1];
   out_1321807637606364574[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5368636496015844019) {
   out_5368636496015844019[0] = 1;
   out_5368636496015844019[1] = 0;
   out_5368636496015844019[2] = 0;
   out_5368636496015844019[3] = 0;
   out_5368636496015844019[4] = 0;
   out_5368636496015844019[5] = 0;
   out_5368636496015844019[6] = 0;
   out_5368636496015844019[7] = 0;
   out_5368636496015844019[8] = 0;
   out_5368636496015844019[9] = 0;
   out_5368636496015844019[10] = 0;
   out_5368636496015844019[11] = 0;
   out_5368636496015844019[12] = 0;
   out_5368636496015844019[13] = 0;
   out_5368636496015844019[14] = 0;
   out_5368636496015844019[15] = 0;
   out_5368636496015844019[16] = 0;
   out_5368636496015844019[17] = 0;
   out_5368636496015844019[18] = 0;
   out_5368636496015844019[19] = 0;
   out_5368636496015844019[20] = 0;
   out_5368636496015844019[21] = 0;
   out_5368636496015844019[22] = 0;
   out_5368636496015844019[23] = 1;
   out_5368636496015844019[24] = 0;
   out_5368636496015844019[25] = 0;
   out_5368636496015844019[26] = 0;
   out_5368636496015844019[27] = 0;
   out_5368636496015844019[28] = 0;
   out_5368636496015844019[29] = 0;
   out_5368636496015844019[30] = 0;
   out_5368636496015844019[31] = 0;
   out_5368636496015844019[32] = 0;
   out_5368636496015844019[33] = 0;
   out_5368636496015844019[34] = 0;
   out_5368636496015844019[35] = 0;
   out_5368636496015844019[36] = 0;
   out_5368636496015844019[37] = 0;
   out_5368636496015844019[38] = 0;
   out_5368636496015844019[39] = 0;
   out_5368636496015844019[40] = 0;
   out_5368636496015844019[41] = 0;
   out_5368636496015844019[42] = 0;
   out_5368636496015844019[43] = 0;
   out_5368636496015844019[44] = 0;
   out_5368636496015844019[45] = 0;
   out_5368636496015844019[46] = 1;
   out_5368636496015844019[47] = 0;
   out_5368636496015844019[48] = 0;
   out_5368636496015844019[49] = 0;
   out_5368636496015844019[50] = 0;
   out_5368636496015844019[51] = 0;
   out_5368636496015844019[52] = 0;
   out_5368636496015844019[53] = 0;
   out_5368636496015844019[54] = 0;
   out_5368636496015844019[55] = 0;
   out_5368636496015844019[56] = 0;
   out_5368636496015844019[57] = 0;
   out_5368636496015844019[58] = 0;
   out_5368636496015844019[59] = 0;
   out_5368636496015844019[60] = 0;
   out_5368636496015844019[61] = 0;
   out_5368636496015844019[62] = 0;
   out_5368636496015844019[63] = 0;
   out_5368636496015844019[64] = 0;
   out_5368636496015844019[65] = 0;
}
void h_35(double *state, double *unused, double *out_5458938299250784412) {
   out_5458938299250784412[0] = state[7];
   out_5458938299250784412[1] = state[8];
   out_5458938299250784412[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2623073463690830310) {
   out_2623073463690830310[0] = 0;
   out_2623073463690830310[1] = 0;
   out_2623073463690830310[2] = 0;
   out_2623073463690830310[3] = 0;
   out_2623073463690830310[4] = 0;
   out_2623073463690830310[5] = 0;
   out_2623073463690830310[6] = 0;
   out_2623073463690830310[7] = 1;
   out_2623073463690830310[8] = 0;
   out_2623073463690830310[9] = 0;
   out_2623073463690830310[10] = 0;
   out_2623073463690830310[11] = 0;
   out_2623073463690830310[12] = 0;
   out_2623073463690830310[13] = 0;
   out_2623073463690830310[14] = 0;
   out_2623073463690830310[15] = 0;
   out_2623073463690830310[16] = 0;
   out_2623073463690830310[17] = 0;
   out_2623073463690830310[18] = 0;
   out_2623073463690830310[19] = 0;
   out_2623073463690830310[20] = 0;
   out_2623073463690830310[21] = 0;
   out_2623073463690830310[22] = 0;
   out_2623073463690830310[23] = 0;
   out_2623073463690830310[24] = 0;
   out_2623073463690830310[25] = 0;
   out_2623073463690830310[26] = 0;
   out_2623073463690830310[27] = 0;
   out_2623073463690830310[28] = 0;
   out_2623073463690830310[29] = 0;
   out_2623073463690830310[30] = 1;
   out_2623073463690830310[31] = 0;
   out_2623073463690830310[32] = 0;
   out_2623073463690830310[33] = 0;
   out_2623073463690830310[34] = 0;
   out_2623073463690830310[35] = 0;
   out_2623073463690830310[36] = 0;
   out_2623073463690830310[37] = 0;
   out_2623073463690830310[38] = 0;
   out_2623073463690830310[39] = 0;
   out_2623073463690830310[40] = 0;
   out_2623073463690830310[41] = 0;
   out_2623073463690830310[42] = 0;
   out_2623073463690830310[43] = 0;
   out_2623073463690830310[44] = 0;
   out_2623073463690830310[45] = 0;
   out_2623073463690830310[46] = 0;
   out_2623073463690830310[47] = 0;
   out_2623073463690830310[48] = 0;
   out_2623073463690830310[49] = 0;
   out_2623073463690830310[50] = 0;
   out_2623073463690830310[51] = 0;
   out_2623073463690830310[52] = 0;
   out_2623073463690830310[53] = 1;
   out_2623073463690830310[54] = 0;
   out_2623073463690830310[55] = 0;
   out_2623073463690830310[56] = 0;
   out_2623073463690830310[57] = 0;
   out_2623073463690830310[58] = 0;
   out_2623073463690830310[59] = 0;
   out_2623073463690830310[60] = 0;
   out_2623073463690830310[61] = 0;
   out_2623073463690830310[62] = 0;
   out_2623073463690830310[63] = 0;
   out_2623073463690830310[64] = 0;
   out_2623073463690830310[65] = 0;
}
void h_32(double *state, double *unused, double *out_1023469487165117247) {
   out_1023469487165117247[0] = state[3];
   out_1023469487165117247[1] = state[4];
   out_1023469487165117247[2] = state[5];
   out_1023469487165117247[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4267912973401729912) {
   out_4267912973401729912[0] = 0;
   out_4267912973401729912[1] = 0;
   out_4267912973401729912[2] = 0;
   out_4267912973401729912[3] = 1;
   out_4267912973401729912[4] = 0;
   out_4267912973401729912[5] = 0;
   out_4267912973401729912[6] = 0;
   out_4267912973401729912[7] = 0;
   out_4267912973401729912[8] = 0;
   out_4267912973401729912[9] = 0;
   out_4267912973401729912[10] = 0;
   out_4267912973401729912[11] = 0;
   out_4267912973401729912[12] = 0;
   out_4267912973401729912[13] = 0;
   out_4267912973401729912[14] = 0;
   out_4267912973401729912[15] = 0;
   out_4267912973401729912[16] = 0;
   out_4267912973401729912[17] = 0;
   out_4267912973401729912[18] = 0;
   out_4267912973401729912[19] = 0;
   out_4267912973401729912[20] = 0;
   out_4267912973401729912[21] = 0;
   out_4267912973401729912[22] = 0;
   out_4267912973401729912[23] = 0;
   out_4267912973401729912[24] = 0;
   out_4267912973401729912[25] = 0;
   out_4267912973401729912[26] = 1;
   out_4267912973401729912[27] = 0;
   out_4267912973401729912[28] = 0;
   out_4267912973401729912[29] = 0;
   out_4267912973401729912[30] = 0;
   out_4267912973401729912[31] = 0;
   out_4267912973401729912[32] = 0;
   out_4267912973401729912[33] = 0;
   out_4267912973401729912[34] = 0;
   out_4267912973401729912[35] = 0;
   out_4267912973401729912[36] = 0;
   out_4267912973401729912[37] = 0;
   out_4267912973401729912[38] = 0;
   out_4267912973401729912[39] = 0;
   out_4267912973401729912[40] = 0;
   out_4267912973401729912[41] = 0;
   out_4267912973401729912[42] = 0;
   out_4267912973401729912[43] = 0;
   out_4267912973401729912[44] = 0;
   out_4267912973401729912[45] = 0;
   out_4267912973401729912[46] = 0;
   out_4267912973401729912[47] = 0;
   out_4267912973401729912[48] = 0;
   out_4267912973401729912[49] = 1;
   out_4267912973401729912[50] = 0;
   out_4267912973401729912[51] = 0;
   out_4267912973401729912[52] = 0;
   out_4267912973401729912[53] = 0;
   out_4267912973401729912[54] = 0;
   out_4267912973401729912[55] = 0;
   out_4267912973401729912[56] = 0;
   out_4267912973401729912[57] = 0;
   out_4267912973401729912[58] = 0;
   out_4267912973401729912[59] = 0;
   out_4267912973401729912[60] = 0;
   out_4267912973401729912[61] = 0;
   out_4267912973401729912[62] = 0;
   out_4267912973401729912[63] = 0;
   out_4267912973401729912[64] = 0;
   out_4267912973401729912[65] = 0;
   out_4267912973401729912[66] = 0;
   out_4267912973401729912[67] = 0;
   out_4267912973401729912[68] = 0;
   out_4267912973401729912[69] = 0;
   out_4267912973401729912[70] = 0;
   out_4267912973401729912[71] = 0;
   out_4267912973401729912[72] = 1;
   out_4267912973401729912[73] = 0;
   out_4267912973401729912[74] = 0;
   out_4267912973401729912[75] = 0;
   out_4267912973401729912[76] = 0;
   out_4267912973401729912[77] = 0;
   out_4267912973401729912[78] = 0;
   out_4267912973401729912[79] = 0;
   out_4267912973401729912[80] = 0;
   out_4267912973401729912[81] = 0;
   out_4267912973401729912[82] = 0;
   out_4267912973401729912[83] = 0;
   out_4267912973401729912[84] = 0;
   out_4267912973401729912[85] = 0;
   out_4267912973401729912[86] = 0;
   out_4267912973401729912[87] = 0;
}
void h_13(double *state, double *unused, double *out_4833626518094377599) {
   out_4833626518094377599[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4833626518094377599[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4833626518094377599[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1185785277283463649) {
   out_1185785277283463649[0] = 0;
   out_1185785277283463649[1] = 0;
   out_1185785277283463649[2] = 0;
   out_1185785277283463649[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1185785277283463649[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1185785277283463649[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1185785277283463649[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1185785277283463649[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1185785277283463649[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1185785277283463649[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1185785277283463649[10] = 0;
   out_1185785277283463649[11] = 0;
   out_1185785277283463649[12] = 0;
   out_1185785277283463649[13] = 0;
   out_1185785277283463649[14] = 0;
   out_1185785277283463649[15] = 0;
   out_1185785277283463649[16] = 0;
   out_1185785277283463649[17] = 0;
   out_1185785277283463649[18] = 0;
   out_1185785277283463649[19] = 0;
   out_1185785277283463649[20] = 0;
   out_1185785277283463649[21] = 0;
   out_1185785277283463649[22] = 0;
   out_1185785277283463649[23] = 0;
   out_1185785277283463649[24] = 0;
   out_1185785277283463649[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1185785277283463649[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1185785277283463649[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1185785277283463649[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1185785277283463649[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1185785277283463649[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1185785277283463649[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1185785277283463649[32] = 0;
   out_1185785277283463649[33] = 0;
   out_1185785277283463649[34] = 0;
   out_1185785277283463649[35] = 0;
   out_1185785277283463649[36] = 0;
   out_1185785277283463649[37] = 0;
   out_1185785277283463649[38] = 0;
   out_1185785277283463649[39] = 0;
   out_1185785277283463649[40] = 0;
   out_1185785277283463649[41] = 0;
   out_1185785277283463649[42] = 0;
   out_1185785277283463649[43] = 0;
   out_1185785277283463649[44] = 0;
   out_1185785277283463649[45] = 0;
   out_1185785277283463649[46] = 0;
   out_1185785277283463649[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1185785277283463649[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1185785277283463649[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1185785277283463649[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1185785277283463649[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1185785277283463649[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1185785277283463649[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1185785277283463649[54] = 0;
   out_1185785277283463649[55] = 0;
   out_1185785277283463649[56] = 0;
   out_1185785277283463649[57] = 0;
   out_1185785277283463649[58] = 0;
   out_1185785277283463649[59] = 0;
   out_1185785277283463649[60] = 0;
   out_1185785277283463649[61] = 0;
   out_1185785277283463649[62] = 0;
   out_1185785277283463649[63] = 0;
   out_1185785277283463649[64] = 0;
   out_1185785277283463649[65] = 0;
}
void h_14(double *state, double *unused, double *out_4294315309452820316) {
   out_4294315309452820316[0] = state[10];
   out_4294315309452820316[1] = state[11];
   out_4294315309452820316[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3100873968783358344) {
   out_3100873968783358344[0] = 0;
   out_3100873968783358344[1] = 0;
   out_3100873968783358344[2] = 0;
   out_3100873968783358344[3] = 0;
   out_3100873968783358344[4] = 0;
   out_3100873968783358344[5] = 0;
   out_3100873968783358344[6] = 0;
   out_3100873968783358344[7] = 0;
   out_3100873968783358344[8] = 0;
   out_3100873968783358344[9] = 0;
   out_3100873968783358344[10] = 1;
   out_3100873968783358344[11] = 0;
   out_3100873968783358344[12] = 0;
   out_3100873968783358344[13] = 0;
   out_3100873968783358344[14] = 0;
   out_3100873968783358344[15] = 0;
   out_3100873968783358344[16] = 0;
   out_3100873968783358344[17] = 0;
   out_3100873968783358344[18] = 0;
   out_3100873968783358344[19] = 0;
   out_3100873968783358344[20] = 0;
   out_3100873968783358344[21] = 0;
   out_3100873968783358344[22] = 0;
   out_3100873968783358344[23] = 0;
   out_3100873968783358344[24] = 0;
   out_3100873968783358344[25] = 0;
   out_3100873968783358344[26] = 0;
   out_3100873968783358344[27] = 0;
   out_3100873968783358344[28] = 0;
   out_3100873968783358344[29] = 0;
   out_3100873968783358344[30] = 0;
   out_3100873968783358344[31] = 0;
   out_3100873968783358344[32] = 0;
   out_3100873968783358344[33] = 1;
   out_3100873968783358344[34] = 0;
   out_3100873968783358344[35] = 0;
   out_3100873968783358344[36] = 0;
   out_3100873968783358344[37] = 0;
   out_3100873968783358344[38] = 0;
   out_3100873968783358344[39] = 0;
   out_3100873968783358344[40] = 0;
   out_3100873968783358344[41] = 0;
   out_3100873968783358344[42] = 0;
   out_3100873968783358344[43] = 0;
   out_3100873968783358344[44] = 0;
   out_3100873968783358344[45] = 0;
   out_3100873968783358344[46] = 0;
   out_3100873968783358344[47] = 0;
   out_3100873968783358344[48] = 0;
   out_3100873968783358344[49] = 0;
   out_3100873968783358344[50] = 0;
   out_3100873968783358344[51] = 0;
   out_3100873968783358344[52] = 0;
   out_3100873968783358344[53] = 0;
   out_3100873968783358344[54] = 0;
   out_3100873968783358344[55] = 0;
   out_3100873968783358344[56] = 1;
   out_3100873968783358344[57] = 0;
   out_3100873968783358344[58] = 0;
   out_3100873968783358344[59] = 0;
   out_3100873968783358344[60] = 0;
   out_3100873968783358344[61] = 0;
   out_3100873968783358344[62] = 0;
   out_3100873968783358344[63] = 0;
   out_3100873968783358344[64] = 0;
   out_3100873968783358344[65] = 0;
}
void h_33(double *state, double *unused, double *out_7622321916297613419) {
   out_7622321916297613419[0] = state[16];
   out_7622321916297613419[1] = state[17];
   out_7622321916297613419[2] = state[18];
}
void H_33(double *state, double *unused, double *out_527483540948027294) {
   out_527483540948027294[0] = 0;
   out_527483540948027294[1] = 0;
   out_527483540948027294[2] = 0;
   out_527483540948027294[3] = 0;
   out_527483540948027294[4] = 0;
   out_527483540948027294[5] = 0;
   out_527483540948027294[6] = 0;
   out_527483540948027294[7] = 0;
   out_527483540948027294[8] = 0;
   out_527483540948027294[9] = 0;
   out_527483540948027294[10] = 0;
   out_527483540948027294[11] = 0;
   out_527483540948027294[12] = 0;
   out_527483540948027294[13] = 0;
   out_527483540948027294[14] = 0;
   out_527483540948027294[15] = 0;
   out_527483540948027294[16] = 1;
   out_527483540948027294[17] = 0;
   out_527483540948027294[18] = 0;
   out_527483540948027294[19] = 0;
   out_527483540948027294[20] = 0;
   out_527483540948027294[21] = 0;
   out_527483540948027294[22] = 0;
   out_527483540948027294[23] = 0;
   out_527483540948027294[24] = 0;
   out_527483540948027294[25] = 0;
   out_527483540948027294[26] = 0;
   out_527483540948027294[27] = 0;
   out_527483540948027294[28] = 0;
   out_527483540948027294[29] = 0;
   out_527483540948027294[30] = 0;
   out_527483540948027294[31] = 0;
   out_527483540948027294[32] = 0;
   out_527483540948027294[33] = 0;
   out_527483540948027294[34] = 0;
   out_527483540948027294[35] = 0;
   out_527483540948027294[36] = 0;
   out_527483540948027294[37] = 0;
   out_527483540948027294[38] = 0;
   out_527483540948027294[39] = 1;
   out_527483540948027294[40] = 0;
   out_527483540948027294[41] = 0;
   out_527483540948027294[42] = 0;
   out_527483540948027294[43] = 0;
   out_527483540948027294[44] = 0;
   out_527483540948027294[45] = 0;
   out_527483540948027294[46] = 0;
   out_527483540948027294[47] = 0;
   out_527483540948027294[48] = 0;
   out_527483540948027294[49] = 0;
   out_527483540948027294[50] = 0;
   out_527483540948027294[51] = 0;
   out_527483540948027294[52] = 0;
   out_527483540948027294[53] = 0;
   out_527483540948027294[54] = 0;
   out_527483540948027294[55] = 0;
   out_527483540948027294[56] = 0;
   out_527483540948027294[57] = 0;
   out_527483540948027294[58] = 0;
   out_527483540948027294[59] = 0;
   out_527483540948027294[60] = 0;
   out_527483540948027294[61] = 0;
   out_527483540948027294[62] = 1;
   out_527483540948027294[63] = 0;
   out_527483540948027294[64] = 0;
   out_527483540948027294[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6330864412356249095) {
  H(in_vec, out_6330864412356249095);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2184138268403689368) {
  err_fun(nom_x, delta_x, out_2184138268403689368);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6227291690067643035) {
  inv_err_fun(nom_x, true_x, out_6227291690067643035);
}
void live_H_mod_fun(double *state, double *out_2920090350307623128) {
  H_mod_fun(state, out_2920090350307623128);
}
void live_f_fun(double *state, double dt, double *out_6894308160155303963) {
  f_fun(state,  dt, out_6894308160155303963);
}
void live_F_fun(double *state, double dt, double *out_9123483619647982274) {
  F_fun(state,  dt, out_9123483619647982274);
}
void live_h_4(double *state, double *unused, double *out_1894937552768048796) {
  h_4(state, unused, out_1894937552768048796);
}
void live_H_4(double *state, double *unused, double *out_5989735521063437686) {
  H_4(state, unused, out_5989735521063437686);
}
void live_h_9(double *state, double *unused, double *out_4294315309452820316) {
  h_9(state, unused, out_4294315309452820316);
}
void live_H_9(double *state, double *unused, double *out_3100873968783358344) {
  H_9(state, unused, out_3100873968783358344);
}
void live_h_10(double *state, double *unused, double *out_1396005915906487718) {
  h_10(state, unused, out_1396005915906487718);
}
void live_H_10(double *state, double *unused, double *out_168727971127988768) {
  H_10(state, unused, out_168727971127988768);
}
void live_h_12(double *state, double *unused, double *out_1321807637606364574) {
  h_12(state, unused, out_1321807637606364574);
}
void live_H_12(double *state, double *unused, double *out_5368636496015844019) {
  H_12(state, unused, out_5368636496015844019);
}
void live_h_35(double *state, double *unused, double *out_5458938299250784412) {
  h_35(state, unused, out_5458938299250784412);
}
void live_H_35(double *state, double *unused, double *out_2623073463690830310) {
  H_35(state, unused, out_2623073463690830310);
}
void live_h_32(double *state, double *unused, double *out_1023469487165117247) {
  h_32(state, unused, out_1023469487165117247);
}
void live_H_32(double *state, double *unused, double *out_4267912973401729912) {
  H_32(state, unused, out_4267912973401729912);
}
void live_h_13(double *state, double *unused, double *out_4833626518094377599) {
  h_13(state, unused, out_4833626518094377599);
}
void live_H_13(double *state, double *unused, double *out_1185785277283463649) {
  H_13(state, unused, out_1185785277283463649);
}
void live_h_14(double *state, double *unused, double *out_4294315309452820316) {
  h_14(state, unused, out_4294315309452820316);
}
void live_H_14(double *state, double *unused, double *out_3100873968783358344) {
  H_14(state, unused, out_3100873968783358344);
}
void live_h_33(double *state, double *unused, double *out_7622321916297613419) {
  h_33(state, unused, out_7622321916297613419);
}
void live_H_33(double *state, double *unused, double *out_527483540948027294) {
  H_33(state, unused, out_527483540948027294);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
