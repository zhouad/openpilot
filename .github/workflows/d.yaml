name: AAA Sync sunnypilot tn to my tm
on:
  schedule:
    - cron: '0 10 * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      lfs: write  # 新增LFS写入权限
    steps:

      - name: Checkout script from target repository (NO LFS download)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          repository: ${{ github.repository }}
          ref: main
          lfs: false
          persist-credentials: false 
          
      - name: Prepare modification script
        run: |
          echo "Copying modification script to temporary location..."
          mkdir -p /tmp/workflow_scripts
          cp .github/scripts/apply_modifications.py /tmp/workflow_scripts/apply_modifications.py
          echo "Script copied."

      - name: Install Git LFS client and initialize
        run: |
          sudo apt-get update -q && sudo apt-get install -y git-lfs
          git lfs install --skip-smudge # Initialize LFS, set up hooks
          echo "Git LFS client installed."

      - name: Add sunnypilot remote and fetch its tn branch
        run: |
          git remote add sunnypilot_source https://github.com/sunnypilot/sunnypilot.git
          git fetch sunnypilot_source tn --depth=1 --no-tags --no-recurse-submodules
          echo "Fetched sunnypilot_source/tn."

      - name: Checkout sunnypilot/tn content into temp-sync-branch
        run: |
          git checkout -B temp-sync-branch refs/remotes/sunnypilot_source/tn
          echo "Checked out sunnypilot/tn content to temp-sync-branch."
          echo "Checking for .lfsconfig from sunnypilot_source:"
          ls -l .lfsconfig || echo ".lfsconfig not found from sunnypilot_source (this is good if it's not intended)."

      - name: Download LFS objects for temp-sync-branch from sunnypilot_source
        env:
          GIT_LFS_TRACE_HTTP: "1"
        run: |
          echo "Fetching LFS objects for temp-sync-branch from sunnypilot_source..."
          SUNNYPILOT_LFS_URL="https://github.com/sunnypilot/sunnypilot.git/info/lfs"
          echo "Temporarily setting LFS URL for sunnypilot_source to $SUNNYPILOT_LFS_URL for fetch"
          git config remote.sunnypilot_source.lfsurl "$SUNNYPILOT_LFS_URL"
          
          if [ -f .lfsconfig ]; then
            echo "Found .lfsconfig from sunnypilot/tn. Backing it up and removing for fetch."
            mv .lfsconfig .lfsconfig.sunnypilot_backup
          fi

          CURRENT_COMMIT_SHA=$(git rev-parse HEAD)
          git lfs fetch sunnypilot_source $CURRENT_COMMIT_SHA
          echo "Checking out (smudging) LFS objects for temp-sync-branch..."
          git lfs checkout

          if [ -f .lfsconfig.sunnypilot_backup ]; then
            echo "Restoring sunnypilot's .lfsconfig for script execution (if needed)."
            mv .lfsconfig.sunnypilot_backup .lfsconfig
          fi
          echo "LFS objects downloaded from sunnypilot_source."

      - name: Apply custom modifications using script from temp location
        run: |
          echo "Running Python script..."
          python /tmp/workflow_scripts/apply_modifications.py
          echo "Python script finished."

      - name: Remove workflow files from Git index
        run: |
          echo "Explicitly removing workflow files to avoid permission errors..."
          git rm --cached -r .github/workflows || true
          git restore --source=HEAD --staged .github/workflows || true
          echo "Workflow files removed from staging area."
          
      - name: Prepare for push to origin (handle .lfsconfig)
        run: |
          echo "Preparing .lfsconfig for push to origin (your repository)..."
          if [ -f .lfsconfig ]; then
            echo "Removing .lfsconfig brought from sunnypilot/tn to ensure push to *your* GitHub LFS."
            rm -f .lfsconfig
          fi
          # 明确设置LFS配置指向你的仓库
          YOUR_GITHUB_LFS_URL="https://github.com/${{ github.repository }}.git/info/lfs"
          echo "[lfs]" > .lfsconfig
          echo "  url = $YOUR_GITHUB_LFS_URL" >> .lfsconfig
          echo "Updated/Created .lfsconfig to point to your GitHub LFS."
          cat .lfsconfig

      - name: Commit the changes to temp-sync-branch
        id: commit_changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git add --all .
          git reset -- .github/workflows/

          echo "Staged changes:"
          git status --short

          if git diff --staged --quiet; then
             echo "No effective changes."
             echo "changes_made=false" >> $GITHUB_OUTPUT
          else
             git commit -m "Apply custom modifications after syncing from sunnypilot/tn"
             echo "Changes committed."
             echo "changes_made=true" >> $GITHUB_OUTPUT
          fi

      # 新增：仓库完整性校验步骤
      - name: Verify repository integrity
        if: steps.commit_changes.outputs.changes_made == 'true'
        run: |
          echo "Checking Git repository integrity..."
          git fsck --full || echo "Git fsck found issues, attempting to repair..."
          git gc --prune=now
          echo "Checking LFS objects integrity..."
          git lfs fsck
          git lfs pull origin temp-sync-branch || true

      - name: Push modified temp-sync-branch to your repository's tm branch
        if: steps.commit_changes.outputs.changes_made == 'true'
        env:
          GIT_LFS_TRACE_HTTP: "1"
          GIT_TERMINAL_PROMPT: "0"
        run: |
          echo "--- Running 'git lfs env' before push (after .lfsconfig manipulation) ---"
          git lfs env

          ORIGIN_REPO_URL_WITH_TOKEN="https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git"
          
          echo "Setting remote.origin.url (Git push): $ORIGIN_REPO_URL_WITH_TOKEN"
          git config remote.origin.url "$ORIGIN_REPO_URL_WITH_TOKEN"
          
          echo "Setting remote.origin.lfsurl (LFS push): ${ORIGIN_REPO_URL_WITH_TOKEN}/info/lfs"
          git config remote.origin.lfsurl "${ORIGIN_REPO_URL_WITH_TOKEN}/info/lfs"

          echo "--- .git/config AFTER final LFS URL modification ---"
          cat .git/config

          # 推送前先拉取目标分支最新状态
          git fetch origin tm:tm-temp || true
          
          echo "Pushing to origin/tm (Git commit and LFS objects)..."
          # 增加超时设置和详细输出
          git -c http.postBuffer=524288000 push origin temp-sync-branch:tm --force -v
          echo "Push completed."
      
      - name: No changes to push
        if: steps.commit_changes.outputs.changes_made == 'false'
        run: echo "No changes. Nothing to push."
