#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.14.0                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7192626465969426310) {
   out_7192626465969426310[0] = 0;
   out_7192626465969426310[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7192626465969426310[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7192626465969426310[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7192626465969426310[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7192626465969426310[5] = -sin(in_vec[1]);
   out_7192626465969426310[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7192626465969426310[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7192626465969426310[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7192626465969426310[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7192626465969426310[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7192626465969426310[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7192626465969426310[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7192626465969426310[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7192626465969426310[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7192626465969426310[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7192626465969426310[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7192626465969426310[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8267414924958799098) {
   out_8267414924958799098[0] = delta_x[0] + nom_x[0];
   out_8267414924958799098[1] = delta_x[1] + nom_x[1];
   out_8267414924958799098[2] = delta_x[2] + nom_x[2];
   out_8267414924958799098[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8267414924958799098[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8267414924958799098[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8267414924958799098[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8267414924958799098[7] = delta_x[6] + nom_x[7];
   out_8267414924958799098[8] = delta_x[7] + nom_x[8];
   out_8267414924958799098[9] = delta_x[8] + nom_x[9];
   out_8267414924958799098[10] = delta_x[9] + nom_x[10];
   out_8267414924958799098[11] = delta_x[10] + nom_x[11];
   out_8267414924958799098[12] = delta_x[11] + nom_x[12];
   out_8267414924958799098[13] = delta_x[12] + nom_x[13];
   out_8267414924958799098[14] = delta_x[13] + nom_x[14];
   out_8267414924958799098[15] = delta_x[14] + nom_x[15];
   out_8267414924958799098[16] = delta_x[15] + nom_x[16];
   out_8267414924958799098[17] = delta_x[16] + nom_x[17];
   out_8267414924958799098[18] = delta_x[17] + nom_x[18];
   out_8267414924958799098[19] = delta_x[18] + nom_x[19];
   out_8267414924958799098[20] = delta_x[19] + nom_x[20];
   out_8267414924958799098[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6790801154123303470) {
   out_6790801154123303470[0] = -nom_x[0] + true_x[0];
   out_6790801154123303470[1] = -nom_x[1] + true_x[1];
   out_6790801154123303470[2] = -nom_x[2] + true_x[2];
   out_6790801154123303470[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6790801154123303470[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6790801154123303470[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6790801154123303470[6] = -nom_x[7] + true_x[7];
   out_6790801154123303470[7] = -nom_x[8] + true_x[8];
   out_6790801154123303470[8] = -nom_x[9] + true_x[9];
   out_6790801154123303470[9] = -nom_x[10] + true_x[10];
   out_6790801154123303470[10] = -nom_x[11] + true_x[11];
   out_6790801154123303470[11] = -nom_x[12] + true_x[12];
   out_6790801154123303470[12] = -nom_x[13] + true_x[13];
   out_6790801154123303470[13] = -nom_x[14] + true_x[14];
   out_6790801154123303470[14] = -nom_x[15] + true_x[15];
   out_6790801154123303470[15] = -nom_x[16] + true_x[16];
   out_6790801154123303470[16] = -nom_x[17] + true_x[17];
   out_6790801154123303470[17] = -nom_x[18] + true_x[18];
   out_6790801154123303470[18] = -nom_x[19] + true_x[19];
   out_6790801154123303470[19] = -nom_x[20] + true_x[20];
   out_6790801154123303470[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7578437124212003399) {
   out_7578437124212003399[0] = 1.0;
   out_7578437124212003399[1] = 0;
   out_7578437124212003399[2] = 0;
   out_7578437124212003399[3] = 0.0;
   out_7578437124212003399[4] = 0.0;
   out_7578437124212003399[5] = 0.0;
   out_7578437124212003399[6] = 0.0;
   out_7578437124212003399[7] = 0.0;
   out_7578437124212003399[8] = 0.0;
   out_7578437124212003399[9] = 0.0;
   out_7578437124212003399[10] = 0.0;
   out_7578437124212003399[11] = 0.0;
   out_7578437124212003399[12] = 0.0;
   out_7578437124212003399[13] = 0.0;
   out_7578437124212003399[14] = 0.0;
   out_7578437124212003399[15] = 0.0;
   out_7578437124212003399[16] = 0.0;
   out_7578437124212003399[17] = 0.0;
   out_7578437124212003399[18] = 0.0;
   out_7578437124212003399[19] = 0.0;
   out_7578437124212003399[20] = 0.0;
   out_7578437124212003399[21] = 0;
   out_7578437124212003399[22] = 1.0;
   out_7578437124212003399[23] = 0;
   out_7578437124212003399[24] = 0.0;
   out_7578437124212003399[25] = 0.0;
   out_7578437124212003399[26] = 0.0;
   out_7578437124212003399[27] = 0.0;
   out_7578437124212003399[28] = 0.0;
   out_7578437124212003399[29] = 0.0;
   out_7578437124212003399[30] = 0.0;
   out_7578437124212003399[31] = 0.0;
   out_7578437124212003399[32] = 0.0;
   out_7578437124212003399[33] = 0.0;
   out_7578437124212003399[34] = 0.0;
   out_7578437124212003399[35] = 0.0;
   out_7578437124212003399[36] = 0.0;
   out_7578437124212003399[37] = 0.0;
   out_7578437124212003399[38] = 0.0;
   out_7578437124212003399[39] = 0.0;
   out_7578437124212003399[40] = 0.0;
   out_7578437124212003399[41] = 0.0;
   out_7578437124212003399[42] = 0;
   out_7578437124212003399[43] = 0;
   out_7578437124212003399[44] = 1.0;
   out_7578437124212003399[45] = 0.0;
   out_7578437124212003399[46] = 0.0;
   out_7578437124212003399[47] = 0.0;
   out_7578437124212003399[48] = 0.0;
   out_7578437124212003399[49] = 0.0;
   out_7578437124212003399[50] = 0.0;
   out_7578437124212003399[51] = 0.0;
   out_7578437124212003399[52] = 0.0;
   out_7578437124212003399[53] = 0.0;
   out_7578437124212003399[54] = 0.0;
   out_7578437124212003399[55] = 0.0;
   out_7578437124212003399[56] = 0.0;
   out_7578437124212003399[57] = 0.0;
   out_7578437124212003399[58] = 0.0;
   out_7578437124212003399[59] = 0.0;
   out_7578437124212003399[60] = 0.0;
   out_7578437124212003399[61] = 0.0;
   out_7578437124212003399[62] = 0.0;
   out_7578437124212003399[63] = 0.0;
   out_7578437124212003399[64] = 0.0;
   out_7578437124212003399[65] = 0.0;
   out_7578437124212003399[66] = -0.5*state[4];
   out_7578437124212003399[67] = -0.5*state[5];
   out_7578437124212003399[68] = -0.5*state[6];
   out_7578437124212003399[69] = 0.0;
   out_7578437124212003399[70] = 0.0;
   out_7578437124212003399[71] = 0.0;
   out_7578437124212003399[72] = 0.0;
   out_7578437124212003399[73] = 0.0;
   out_7578437124212003399[74] = 0.0;
   out_7578437124212003399[75] = 0.0;
   out_7578437124212003399[76] = 0.0;
   out_7578437124212003399[77] = 0.0;
   out_7578437124212003399[78] = 0.0;
   out_7578437124212003399[79] = 0.0;
   out_7578437124212003399[80] = 0.0;
   out_7578437124212003399[81] = 0.0;
   out_7578437124212003399[82] = 0.0;
   out_7578437124212003399[83] = 0.0;
   out_7578437124212003399[84] = 0.0;
   out_7578437124212003399[85] = 0.0;
   out_7578437124212003399[86] = 0.0;
   out_7578437124212003399[87] = 0.5*state[3];
   out_7578437124212003399[88] = 0.5*state[6];
   out_7578437124212003399[89] = -0.5*state[5];
   out_7578437124212003399[90] = 0.0;
   out_7578437124212003399[91] = 0.0;
   out_7578437124212003399[92] = 0.0;
   out_7578437124212003399[93] = 0.0;
   out_7578437124212003399[94] = 0.0;
   out_7578437124212003399[95] = 0.0;
   out_7578437124212003399[96] = 0.0;
   out_7578437124212003399[97] = 0.0;
   out_7578437124212003399[98] = 0.0;
   out_7578437124212003399[99] = 0.0;
   out_7578437124212003399[100] = 0.0;
   out_7578437124212003399[101] = 0.0;
   out_7578437124212003399[102] = 0.0;
   out_7578437124212003399[103] = 0.0;
   out_7578437124212003399[104] = 0.0;
   out_7578437124212003399[105] = 0.0;
   out_7578437124212003399[106] = 0.0;
   out_7578437124212003399[107] = 0.0;
   out_7578437124212003399[108] = -0.5*state[6];
   out_7578437124212003399[109] = 0.5*state[3];
   out_7578437124212003399[110] = 0.5*state[4];
   out_7578437124212003399[111] = 0.0;
   out_7578437124212003399[112] = 0.0;
   out_7578437124212003399[113] = 0.0;
   out_7578437124212003399[114] = 0.0;
   out_7578437124212003399[115] = 0.0;
   out_7578437124212003399[116] = 0.0;
   out_7578437124212003399[117] = 0.0;
   out_7578437124212003399[118] = 0.0;
   out_7578437124212003399[119] = 0.0;
   out_7578437124212003399[120] = 0.0;
   out_7578437124212003399[121] = 0.0;
   out_7578437124212003399[122] = 0.0;
   out_7578437124212003399[123] = 0.0;
   out_7578437124212003399[124] = 0.0;
   out_7578437124212003399[125] = 0.0;
   out_7578437124212003399[126] = 0.0;
   out_7578437124212003399[127] = 0.0;
   out_7578437124212003399[128] = 0.0;
   out_7578437124212003399[129] = 0.5*state[5];
   out_7578437124212003399[130] = -0.5*state[4];
   out_7578437124212003399[131] = 0.5*state[3];
   out_7578437124212003399[132] = 0.0;
   out_7578437124212003399[133] = 0.0;
   out_7578437124212003399[134] = 0.0;
   out_7578437124212003399[135] = 0.0;
   out_7578437124212003399[136] = 0.0;
   out_7578437124212003399[137] = 0.0;
   out_7578437124212003399[138] = 0.0;
   out_7578437124212003399[139] = 0.0;
   out_7578437124212003399[140] = 0.0;
   out_7578437124212003399[141] = 0.0;
   out_7578437124212003399[142] = 0.0;
   out_7578437124212003399[143] = 0.0;
   out_7578437124212003399[144] = 0.0;
   out_7578437124212003399[145] = 0.0;
   out_7578437124212003399[146] = 0.0;
   out_7578437124212003399[147] = 0.0;
   out_7578437124212003399[148] = 0.0;
   out_7578437124212003399[149] = 0.0;
   out_7578437124212003399[150] = 0.0;
   out_7578437124212003399[151] = 0.0;
   out_7578437124212003399[152] = 0.0;
   out_7578437124212003399[153] = 1.0;
   out_7578437124212003399[154] = 0;
   out_7578437124212003399[155] = 0;
   out_7578437124212003399[156] = 0;
   out_7578437124212003399[157] = 0;
   out_7578437124212003399[158] = 0;
   out_7578437124212003399[159] = 0;
   out_7578437124212003399[160] = 0;
   out_7578437124212003399[161] = 0;
   out_7578437124212003399[162] = 0;
   out_7578437124212003399[163] = 0;
   out_7578437124212003399[164] = 0;
   out_7578437124212003399[165] = 0;
   out_7578437124212003399[166] = 0;
   out_7578437124212003399[167] = 0;
   out_7578437124212003399[168] = 0.0;
   out_7578437124212003399[169] = 0.0;
   out_7578437124212003399[170] = 0.0;
   out_7578437124212003399[171] = 0.0;
   out_7578437124212003399[172] = 0.0;
   out_7578437124212003399[173] = 0.0;
   out_7578437124212003399[174] = 0;
   out_7578437124212003399[175] = 1.0;
   out_7578437124212003399[176] = 0;
   out_7578437124212003399[177] = 0;
   out_7578437124212003399[178] = 0;
   out_7578437124212003399[179] = 0;
   out_7578437124212003399[180] = 0;
   out_7578437124212003399[181] = 0;
   out_7578437124212003399[182] = 0;
   out_7578437124212003399[183] = 0;
   out_7578437124212003399[184] = 0;
   out_7578437124212003399[185] = 0;
   out_7578437124212003399[186] = 0;
   out_7578437124212003399[187] = 0;
   out_7578437124212003399[188] = 0;
   out_7578437124212003399[189] = 0.0;
   out_7578437124212003399[190] = 0.0;
   out_7578437124212003399[191] = 0.0;
   out_7578437124212003399[192] = 0.0;
   out_7578437124212003399[193] = 0.0;
   out_7578437124212003399[194] = 0.0;
   out_7578437124212003399[195] = 0;
   out_7578437124212003399[196] = 0;
   out_7578437124212003399[197] = 1.0;
   out_7578437124212003399[198] = 0;
   out_7578437124212003399[199] = 0;
   out_7578437124212003399[200] = 0;
   out_7578437124212003399[201] = 0;
   out_7578437124212003399[202] = 0;
   out_7578437124212003399[203] = 0;
   out_7578437124212003399[204] = 0;
   out_7578437124212003399[205] = 0;
   out_7578437124212003399[206] = 0;
   out_7578437124212003399[207] = 0;
   out_7578437124212003399[208] = 0;
   out_7578437124212003399[209] = 0;
   out_7578437124212003399[210] = 0.0;
   out_7578437124212003399[211] = 0.0;
   out_7578437124212003399[212] = 0.0;
   out_7578437124212003399[213] = 0.0;
   out_7578437124212003399[214] = 0.0;
   out_7578437124212003399[215] = 0.0;
   out_7578437124212003399[216] = 0;
   out_7578437124212003399[217] = 0;
   out_7578437124212003399[218] = 0;
   out_7578437124212003399[219] = 1.0;
   out_7578437124212003399[220] = 0;
   out_7578437124212003399[221] = 0;
   out_7578437124212003399[222] = 0;
   out_7578437124212003399[223] = 0;
   out_7578437124212003399[224] = 0;
   out_7578437124212003399[225] = 0;
   out_7578437124212003399[226] = 0;
   out_7578437124212003399[227] = 0;
   out_7578437124212003399[228] = 0;
   out_7578437124212003399[229] = 0;
   out_7578437124212003399[230] = 0;
   out_7578437124212003399[231] = 0.0;
   out_7578437124212003399[232] = 0.0;
   out_7578437124212003399[233] = 0.0;
   out_7578437124212003399[234] = 0.0;
   out_7578437124212003399[235] = 0.0;
   out_7578437124212003399[236] = 0.0;
   out_7578437124212003399[237] = 0;
   out_7578437124212003399[238] = 0;
   out_7578437124212003399[239] = 0;
   out_7578437124212003399[240] = 0;
   out_7578437124212003399[241] = 1.0;
   out_7578437124212003399[242] = 0;
   out_7578437124212003399[243] = 0;
   out_7578437124212003399[244] = 0;
   out_7578437124212003399[245] = 0;
   out_7578437124212003399[246] = 0;
   out_7578437124212003399[247] = 0;
   out_7578437124212003399[248] = 0;
   out_7578437124212003399[249] = 0;
   out_7578437124212003399[250] = 0;
   out_7578437124212003399[251] = 0;
   out_7578437124212003399[252] = 0.0;
   out_7578437124212003399[253] = 0.0;
   out_7578437124212003399[254] = 0.0;
   out_7578437124212003399[255] = 0.0;
   out_7578437124212003399[256] = 0.0;
   out_7578437124212003399[257] = 0.0;
   out_7578437124212003399[258] = 0;
   out_7578437124212003399[259] = 0;
   out_7578437124212003399[260] = 0;
   out_7578437124212003399[261] = 0;
   out_7578437124212003399[262] = 0;
   out_7578437124212003399[263] = 1.0;
   out_7578437124212003399[264] = 0;
   out_7578437124212003399[265] = 0;
   out_7578437124212003399[266] = 0;
   out_7578437124212003399[267] = 0;
   out_7578437124212003399[268] = 0;
   out_7578437124212003399[269] = 0;
   out_7578437124212003399[270] = 0;
   out_7578437124212003399[271] = 0;
   out_7578437124212003399[272] = 0;
   out_7578437124212003399[273] = 0.0;
   out_7578437124212003399[274] = 0.0;
   out_7578437124212003399[275] = 0.0;
   out_7578437124212003399[276] = 0.0;
   out_7578437124212003399[277] = 0.0;
   out_7578437124212003399[278] = 0.0;
   out_7578437124212003399[279] = 0;
   out_7578437124212003399[280] = 0;
   out_7578437124212003399[281] = 0;
   out_7578437124212003399[282] = 0;
   out_7578437124212003399[283] = 0;
   out_7578437124212003399[284] = 0;
   out_7578437124212003399[285] = 1.0;
   out_7578437124212003399[286] = 0;
   out_7578437124212003399[287] = 0;
   out_7578437124212003399[288] = 0;
   out_7578437124212003399[289] = 0;
   out_7578437124212003399[290] = 0;
   out_7578437124212003399[291] = 0;
   out_7578437124212003399[292] = 0;
   out_7578437124212003399[293] = 0;
   out_7578437124212003399[294] = 0.0;
   out_7578437124212003399[295] = 0.0;
   out_7578437124212003399[296] = 0.0;
   out_7578437124212003399[297] = 0.0;
   out_7578437124212003399[298] = 0.0;
   out_7578437124212003399[299] = 0.0;
   out_7578437124212003399[300] = 0;
   out_7578437124212003399[301] = 0;
   out_7578437124212003399[302] = 0;
   out_7578437124212003399[303] = 0;
   out_7578437124212003399[304] = 0;
   out_7578437124212003399[305] = 0;
   out_7578437124212003399[306] = 0;
   out_7578437124212003399[307] = 1.0;
   out_7578437124212003399[308] = 0;
   out_7578437124212003399[309] = 0;
   out_7578437124212003399[310] = 0;
   out_7578437124212003399[311] = 0;
   out_7578437124212003399[312] = 0;
   out_7578437124212003399[313] = 0;
   out_7578437124212003399[314] = 0;
   out_7578437124212003399[315] = 0.0;
   out_7578437124212003399[316] = 0.0;
   out_7578437124212003399[317] = 0.0;
   out_7578437124212003399[318] = 0.0;
   out_7578437124212003399[319] = 0.0;
   out_7578437124212003399[320] = 0.0;
   out_7578437124212003399[321] = 0;
   out_7578437124212003399[322] = 0;
   out_7578437124212003399[323] = 0;
   out_7578437124212003399[324] = 0;
   out_7578437124212003399[325] = 0;
   out_7578437124212003399[326] = 0;
   out_7578437124212003399[327] = 0;
   out_7578437124212003399[328] = 0;
   out_7578437124212003399[329] = 1.0;
   out_7578437124212003399[330] = 0;
   out_7578437124212003399[331] = 0;
   out_7578437124212003399[332] = 0;
   out_7578437124212003399[333] = 0;
   out_7578437124212003399[334] = 0;
   out_7578437124212003399[335] = 0;
   out_7578437124212003399[336] = 0.0;
   out_7578437124212003399[337] = 0.0;
   out_7578437124212003399[338] = 0.0;
   out_7578437124212003399[339] = 0.0;
   out_7578437124212003399[340] = 0.0;
   out_7578437124212003399[341] = 0.0;
   out_7578437124212003399[342] = 0;
   out_7578437124212003399[343] = 0;
   out_7578437124212003399[344] = 0;
   out_7578437124212003399[345] = 0;
   out_7578437124212003399[346] = 0;
   out_7578437124212003399[347] = 0;
   out_7578437124212003399[348] = 0;
   out_7578437124212003399[349] = 0;
   out_7578437124212003399[350] = 0;
   out_7578437124212003399[351] = 1.0;
   out_7578437124212003399[352] = 0;
   out_7578437124212003399[353] = 0;
   out_7578437124212003399[354] = 0;
   out_7578437124212003399[355] = 0;
   out_7578437124212003399[356] = 0;
   out_7578437124212003399[357] = 0.0;
   out_7578437124212003399[358] = 0.0;
   out_7578437124212003399[359] = 0.0;
   out_7578437124212003399[360] = 0.0;
   out_7578437124212003399[361] = 0.0;
   out_7578437124212003399[362] = 0.0;
   out_7578437124212003399[363] = 0;
   out_7578437124212003399[364] = 0;
   out_7578437124212003399[365] = 0;
   out_7578437124212003399[366] = 0;
   out_7578437124212003399[367] = 0;
   out_7578437124212003399[368] = 0;
   out_7578437124212003399[369] = 0;
   out_7578437124212003399[370] = 0;
   out_7578437124212003399[371] = 0;
   out_7578437124212003399[372] = 0;
   out_7578437124212003399[373] = 1.0;
   out_7578437124212003399[374] = 0;
   out_7578437124212003399[375] = 0;
   out_7578437124212003399[376] = 0;
   out_7578437124212003399[377] = 0;
   out_7578437124212003399[378] = 0.0;
   out_7578437124212003399[379] = 0.0;
   out_7578437124212003399[380] = 0.0;
   out_7578437124212003399[381] = 0.0;
   out_7578437124212003399[382] = 0.0;
   out_7578437124212003399[383] = 0.0;
   out_7578437124212003399[384] = 0;
   out_7578437124212003399[385] = 0;
   out_7578437124212003399[386] = 0;
   out_7578437124212003399[387] = 0;
   out_7578437124212003399[388] = 0;
   out_7578437124212003399[389] = 0;
   out_7578437124212003399[390] = 0;
   out_7578437124212003399[391] = 0;
   out_7578437124212003399[392] = 0;
   out_7578437124212003399[393] = 0;
   out_7578437124212003399[394] = 0;
   out_7578437124212003399[395] = 1.0;
   out_7578437124212003399[396] = 0;
   out_7578437124212003399[397] = 0;
   out_7578437124212003399[398] = 0;
   out_7578437124212003399[399] = 0.0;
   out_7578437124212003399[400] = 0.0;
   out_7578437124212003399[401] = 0.0;
   out_7578437124212003399[402] = 0.0;
   out_7578437124212003399[403] = 0.0;
   out_7578437124212003399[404] = 0.0;
   out_7578437124212003399[405] = 0;
   out_7578437124212003399[406] = 0;
   out_7578437124212003399[407] = 0;
   out_7578437124212003399[408] = 0;
   out_7578437124212003399[409] = 0;
   out_7578437124212003399[410] = 0;
   out_7578437124212003399[411] = 0;
   out_7578437124212003399[412] = 0;
   out_7578437124212003399[413] = 0;
   out_7578437124212003399[414] = 0;
   out_7578437124212003399[415] = 0;
   out_7578437124212003399[416] = 0;
   out_7578437124212003399[417] = 1.0;
   out_7578437124212003399[418] = 0;
   out_7578437124212003399[419] = 0;
   out_7578437124212003399[420] = 0.0;
   out_7578437124212003399[421] = 0.0;
   out_7578437124212003399[422] = 0.0;
   out_7578437124212003399[423] = 0.0;
   out_7578437124212003399[424] = 0.0;
   out_7578437124212003399[425] = 0.0;
   out_7578437124212003399[426] = 0;
   out_7578437124212003399[427] = 0;
   out_7578437124212003399[428] = 0;
   out_7578437124212003399[429] = 0;
   out_7578437124212003399[430] = 0;
   out_7578437124212003399[431] = 0;
   out_7578437124212003399[432] = 0;
   out_7578437124212003399[433] = 0;
   out_7578437124212003399[434] = 0;
   out_7578437124212003399[435] = 0;
   out_7578437124212003399[436] = 0;
   out_7578437124212003399[437] = 0;
   out_7578437124212003399[438] = 0;
   out_7578437124212003399[439] = 1.0;
   out_7578437124212003399[440] = 0;
   out_7578437124212003399[441] = 0.0;
   out_7578437124212003399[442] = 0.0;
   out_7578437124212003399[443] = 0.0;
   out_7578437124212003399[444] = 0.0;
   out_7578437124212003399[445] = 0.0;
   out_7578437124212003399[446] = 0.0;
   out_7578437124212003399[447] = 0;
   out_7578437124212003399[448] = 0;
   out_7578437124212003399[449] = 0;
   out_7578437124212003399[450] = 0;
   out_7578437124212003399[451] = 0;
   out_7578437124212003399[452] = 0;
   out_7578437124212003399[453] = 0;
   out_7578437124212003399[454] = 0;
   out_7578437124212003399[455] = 0;
   out_7578437124212003399[456] = 0;
   out_7578437124212003399[457] = 0;
   out_7578437124212003399[458] = 0;
   out_7578437124212003399[459] = 0;
   out_7578437124212003399[460] = 0;
   out_7578437124212003399[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7029063535498789077) {
   out_7029063535498789077[0] = dt*state[7] + state[0];
   out_7029063535498789077[1] = dt*state[8] + state[1];
   out_7029063535498789077[2] = dt*state[9] + state[2];
   out_7029063535498789077[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7029063535498789077[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7029063535498789077[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7029063535498789077[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7029063535498789077[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7029063535498789077[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7029063535498789077[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7029063535498789077[10] = state[10];
   out_7029063535498789077[11] = state[11];
   out_7029063535498789077[12] = state[12];
   out_7029063535498789077[13] = state[13];
   out_7029063535498789077[14] = state[14];
   out_7029063535498789077[15] = state[15];
   out_7029063535498789077[16] = state[16];
   out_7029063535498789077[17] = state[17];
   out_7029063535498789077[18] = state[18];
   out_7029063535498789077[19] = state[19];
   out_7029063535498789077[20] = state[20];
   out_7029063535498789077[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2753188682549842837) {
   out_2753188682549842837[0] = 1;
   out_2753188682549842837[1] = 0;
   out_2753188682549842837[2] = 0;
   out_2753188682549842837[3] = 0;
   out_2753188682549842837[4] = 0;
   out_2753188682549842837[5] = 0;
   out_2753188682549842837[6] = dt;
   out_2753188682549842837[7] = 0;
   out_2753188682549842837[8] = 0;
   out_2753188682549842837[9] = 0;
   out_2753188682549842837[10] = 0;
   out_2753188682549842837[11] = 0;
   out_2753188682549842837[12] = 0;
   out_2753188682549842837[13] = 0;
   out_2753188682549842837[14] = 0;
   out_2753188682549842837[15] = 0;
   out_2753188682549842837[16] = 0;
   out_2753188682549842837[17] = 0;
   out_2753188682549842837[18] = 0;
   out_2753188682549842837[19] = 0;
   out_2753188682549842837[20] = 0;
   out_2753188682549842837[21] = 0;
   out_2753188682549842837[22] = 1;
   out_2753188682549842837[23] = 0;
   out_2753188682549842837[24] = 0;
   out_2753188682549842837[25] = 0;
   out_2753188682549842837[26] = 0;
   out_2753188682549842837[27] = 0;
   out_2753188682549842837[28] = dt;
   out_2753188682549842837[29] = 0;
   out_2753188682549842837[30] = 0;
   out_2753188682549842837[31] = 0;
   out_2753188682549842837[32] = 0;
   out_2753188682549842837[33] = 0;
   out_2753188682549842837[34] = 0;
   out_2753188682549842837[35] = 0;
   out_2753188682549842837[36] = 0;
   out_2753188682549842837[37] = 0;
   out_2753188682549842837[38] = 0;
   out_2753188682549842837[39] = 0;
   out_2753188682549842837[40] = 0;
   out_2753188682549842837[41] = 0;
   out_2753188682549842837[42] = 0;
   out_2753188682549842837[43] = 0;
   out_2753188682549842837[44] = 1;
   out_2753188682549842837[45] = 0;
   out_2753188682549842837[46] = 0;
   out_2753188682549842837[47] = 0;
   out_2753188682549842837[48] = 0;
   out_2753188682549842837[49] = 0;
   out_2753188682549842837[50] = dt;
   out_2753188682549842837[51] = 0;
   out_2753188682549842837[52] = 0;
   out_2753188682549842837[53] = 0;
   out_2753188682549842837[54] = 0;
   out_2753188682549842837[55] = 0;
   out_2753188682549842837[56] = 0;
   out_2753188682549842837[57] = 0;
   out_2753188682549842837[58] = 0;
   out_2753188682549842837[59] = 0;
   out_2753188682549842837[60] = 0;
   out_2753188682549842837[61] = 0;
   out_2753188682549842837[62] = 0;
   out_2753188682549842837[63] = 0;
   out_2753188682549842837[64] = 0;
   out_2753188682549842837[65] = 0;
   out_2753188682549842837[66] = 1;
   out_2753188682549842837[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2753188682549842837[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2753188682549842837[69] = 0;
   out_2753188682549842837[70] = 0;
   out_2753188682549842837[71] = 0;
   out_2753188682549842837[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2753188682549842837[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2753188682549842837[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2753188682549842837[75] = 0;
   out_2753188682549842837[76] = 0;
   out_2753188682549842837[77] = 0;
   out_2753188682549842837[78] = 0;
   out_2753188682549842837[79] = 0;
   out_2753188682549842837[80] = 0;
   out_2753188682549842837[81] = 0;
   out_2753188682549842837[82] = 0;
   out_2753188682549842837[83] = 0;
   out_2753188682549842837[84] = 0;
   out_2753188682549842837[85] = 0;
   out_2753188682549842837[86] = 0;
   out_2753188682549842837[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2753188682549842837[88] = 1;
   out_2753188682549842837[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2753188682549842837[90] = 0;
   out_2753188682549842837[91] = 0;
   out_2753188682549842837[92] = 0;
   out_2753188682549842837[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2753188682549842837[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2753188682549842837[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2753188682549842837[96] = 0;
   out_2753188682549842837[97] = 0;
   out_2753188682549842837[98] = 0;
   out_2753188682549842837[99] = 0;
   out_2753188682549842837[100] = 0;
   out_2753188682549842837[101] = 0;
   out_2753188682549842837[102] = 0;
   out_2753188682549842837[103] = 0;
   out_2753188682549842837[104] = 0;
   out_2753188682549842837[105] = 0;
   out_2753188682549842837[106] = 0;
   out_2753188682549842837[107] = 0;
   out_2753188682549842837[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2753188682549842837[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2753188682549842837[110] = 1;
   out_2753188682549842837[111] = 0;
   out_2753188682549842837[112] = 0;
   out_2753188682549842837[113] = 0;
   out_2753188682549842837[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2753188682549842837[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2753188682549842837[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2753188682549842837[117] = 0;
   out_2753188682549842837[118] = 0;
   out_2753188682549842837[119] = 0;
   out_2753188682549842837[120] = 0;
   out_2753188682549842837[121] = 0;
   out_2753188682549842837[122] = 0;
   out_2753188682549842837[123] = 0;
   out_2753188682549842837[124] = 0;
   out_2753188682549842837[125] = 0;
   out_2753188682549842837[126] = 0;
   out_2753188682549842837[127] = 0;
   out_2753188682549842837[128] = 0;
   out_2753188682549842837[129] = 0;
   out_2753188682549842837[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2753188682549842837[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2753188682549842837[132] = 1;
   out_2753188682549842837[133] = 0;
   out_2753188682549842837[134] = 0;
   out_2753188682549842837[135] = 0;
   out_2753188682549842837[136] = 0;
   out_2753188682549842837[137] = 0;
   out_2753188682549842837[138] = 0;
   out_2753188682549842837[139] = 0;
   out_2753188682549842837[140] = 0;
   out_2753188682549842837[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2753188682549842837[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2753188682549842837[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2753188682549842837[144] = 0;
   out_2753188682549842837[145] = 0;
   out_2753188682549842837[146] = 0;
   out_2753188682549842837[147] = 0;
   out_2753188682549842837[148] = 0;
   out_2753188682549842837[149] = 0;
   out_2753188682549842837[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2753188682549842837[151] = 0;
   out_2753188682549842837[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2753188682549842837[153] = 0;
   out_2753188682549842837[154] = 1;
   out_2753188682549842837[155] = 0;
   out_2753188682549842837[156] = 0;
   out_2753188682549842837[157] = 0;
   out_2753188682549842837[158] = 0;
   out_2753188682549842837[159] = 0;
   out_2753188682549842837[160] = 0;
   out_2753188682549842837[161] = 0;
   out_2753188682549842837[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2753188682549842837[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2753188682549842837[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2753188682549842837[165] = 0;
   out_2753188682549842837[166] = 0;
   out_2753188682549842837[167] = 0;
   out_2753188682549842837[168] = 0;
   out_2753188682549842837[169] = 0;
   out_2753188682549842837[170] = 0;
   out_2753188682549842837[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2753188682549842837[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2753188682549842837[173] = 0;
   out_2753188682549842837[174] = 0;
   out_2753188682549842837[175] = 0;
   out_2753188682549842837[176] = 1;
   out_2753188682549842837[177] = 0;
   out_2753188682549842837[178] = 0;
   out_2753188682549842837[179] = 0;
   out_2753188682549842837[180] = 0;
   out_2753188682549842837[181] = 0;
   out_2753188682549842837[182] = 0;
   out_2753188682549842837[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2753188682549842837[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2753188682549842837[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2753188682549842837[186] = 0;
   out_2753188682549842837[187] = 0;
   out_2753188682549842837[188] = 0;
   out_2753188682549842837[189] = 0;
   out_2753188682549842837[190] = 0;
   out_2753188682549842837[191] = 0;
   out_2753188682549842837[192] = 0;
   out_2753188682549842837[193] = 0;
   out_2753188682549842837[194] = 0;
   out_2753188682549842837[195] = 0;
   out_2753188682549842837[196] = 0;
   out_2753188682549842837[197] = 0;
   out_2753188682549842837[198] = 1;
   out_2753188682549842837[199] = 0;
   out_2753188682549842837[200] = 0;
   out_2753188682549842837[201] = 0;
   out_2753188682549842837[202] = 0;
   out_2753188682549842837[203] = 0;
   out_2753188682549842837[204] = 0;
   out_2753188682549842837[205] = 0;
   out_2753188682549842837[206] = 0;
   out_2753188682549842837[207] = 0;
   out_2753188682549842837[208] = 0;
   out_2753188682549842837[209] = 0;
   out_2753188682549842837[210] = 0;
   out_2753188682549842837[211] = 0;
   out_2753188682549842837[212] = 0;
   out_2753188682549842837[213] = 0;
   out_2753188682549842837[214] = 0;
   out_2753188682549842837[215] = 0;
   out_2753188682549842837[216] = 0;
   out_2753188682549842837[217] = 0;
   out_2753188682549842837[218] = 0;
   out_2753188682549842837[219] = 0;
   out_2753188682549842837[220] = 1;
   out_2753188682549842837[221] = 0;
   out_2753188682549842837[222] = 0;
   out_2753188682549842837[223] = 0;
   out_2753188682549842837[224] = 0;
   out_2753188682549842837[225] = 0;
   out_2753188682549842837[226] = 0;
   out_2753188682549842837[227] = 0;
   out_2753188682549842837[228] = 0;
   out_2753188682549842837[229] = 0;
   out_2753188682549842837[230] = 0;
   out_2753188682549842837[231] = 0;
   out_2753188682549842837[232] = 0;
   out_2753188682549842837[233] = 0;
   out_2753188682549842837[234] = 0;
   out_2753188682549842837[235] = 0;
   out_2753188682549842837[236] = 0;
   out_2753188682549842837[237] = 0;
   out_2753188682549842837[238] = 0;
   out_2753188682549842837[239] = 0;
   out_2753188682549842837[240] = 0;
   out_2753188682549842837[241] = 0;
   out_2753188682549842837[242] = 1;
   out_2753188682549842837[243] = 0;
   out_2753188682549842837[244] = 0;
   out_2753188682549842837[245] = 0;
   out_2753188682549842837[246] = 0;
   out_2753188682549842837[247] = 0;
   out_2753188682549842837[248] = 0;
   out_2753188682549842837[249] = 0;
   out_2753188682549842837[250] = 0;
   out_2753188682549842837[251] = 0;
   out_2753188682549842837[252] = 0;
   out_2753188682549842837[253] = 0;
   out_2753188682549842837[254] = 0;
   out_2753188682549842837[255] = 0;
   out_2753188682549842837[256] = 0;
   out_2753188682549842837[257] = 0;
   out_2753188682549842837[258] = 0;
   out_2753188682549842837[259] = 0;
   out_2753188682549842837[260] = 0;
   out_2753188682549842837[261] = 0;
   out_2753188682549842837[262] = 0;
   out_2753188682549842837[263] = 0;
   out_2753188682549842837[264] = 1;
   out_2753188682549842837[265] = 0;
   out_2753188682549842837[266] = 0;
   out_2753188682549842837[267] = 0;
   out_2753188682549842837[268] = 0;
   out_2753188682549842837[269] = 0;
   out_2753188682549842837[270] = 0;
   out_2753188682549842837[271] = 0;
   out_2753188682549842837[272] = 0;
   out_2753188682549842837[273] = 0;
   out_2753188682549842837[274] = 0;
   out_2753188682549842837[275] = 0;
   out_2753188682549842837[276] = 0;
   out_2753188682549842837[277] = 0;
   out_2753188682549842837[278] = 0;
   out_2753188682549842837[279] = 0;
   out_2753188682549842837[280] = 0;
   out_2753188682549842837[281] = 0;
   out_2753188682549842837[282] = 0;
   out_2753188682549842837[283] = 0;
   out_2753188682549842837[284] = 0;
   out_2753188682549842837[285] = 0;
   out_2753188682549842837[286] = 1;
   out_2753188682549842837[287] = 0;
   out_2753188682549842837[288] = 0;
   out_2753188682549842837[289] = 0;
   out_2753188682549842837[290] = 0;
   out_2753188682549842837[291] = 0;
   out_2753188682549842837[292] = 0;
   out_2753188682549842837[293] = 0;
   out_2753188682549842837[294] = 0;
   out_2753188682549842837[295] = 0;
   out_2753188682549842837[296] = 0;
   out_2753188682549842837[297] = 0;
   out_2753188682549842837[298] = 0;
   out_2753188682549842837[299] = 0;
   out_2753188682549842837[300] = 0;
   out_2753188682549842837[301] = 0;
   out_2753188682549842837[302] = 0;
   out_2753188682549842837[303] = 0;
   out_2753188682549842837[304] = 0;
   out_2753188682549842837[305] = 0;
   out_2753188682549842837[306] = 0;
   out_2753188682549842837[307] = 0;
   out_2753188682549842837[308] = 1;
   out_2753188682549842837[309] = 0;
   out_2753188682549842837[310] = 0;
   out_2753188682549842837[311] = 0;
   out_2753188682549842837[312] = 0;
   out_2753188682549842837[313] = 0;
   out_2753188682549842837[314] = 0;
   out_2753188682549842837[315] = 0;
   out_2753188682549842837[316] = 0;
   out_2753188682549842837[317] = 0;
   out_2753188682549842837[318] = 0;
   out_2753188682549842837[319] = 0;
   out_2753188682549842837[320] = 0;
   out_2753188682549842837[321] = 0;
   out_2753188682549842837[322] = 0;
   out_2753188682549842837[323] = 0;
   out_2753188682549842837[324] = 0;
   out_2753188682549842837[325] = 0;
   out_2753188682549842837[326] = 0;
   out_2753188682549842837[327] = 0;
   out_2753188682549842837[328] = 0;
   out_2753188682549842837[329] = 0;
   out_2753188682549842837[330] = 1;
   out_2753188682549842837[331] = 0;
   out_2753188682549842837[332] = 0;
   out_2753188682549842837[333] = 0;
   out_2753188682549842837[334] = 0;
   out_2753188682549842837[335] = 0;
   out_2753188682549842837[336] = 0;
   out_2753188682549842837[337] = 0;
   out_2753188682549842837[338] = 0;
   out_2753188682549842837[339] = 0;
   out_2753188682549842837[340] = 0;
   out_2753188682549842837[341] = 0;
   out_2753188682549842837[342] = 0;
   out_2753188682549842837[343] = 0;
   out_2753188682549842837[344] = 0;
   out_2753188682549842837[345] = 0;
   out_2753188682549842837[346] = 0;
   out_2753188682549842837[347] = 0;
   out_2753188682549842837[348] = 0;
   out_2753188682549842837[349] = 0;
   out_2753188682549842837[350] = 0;
   out_2753188682549842837[351] = 0;
   out_2753188682549842837[352] = 1;
   out_2753188682549842837[353] = 0;
   out_2753188682549842837[354] = 0;
   out_2753188682549842837[355] = 0;
   out_2753188682549842837[356] = 0;
   out_2753188682549842837[357] = 0;
   out_2753188682549842837[358] = 0;
   out_2753188682549842837[359] = 0;
   out_2753188682549842837[360] = 0;
   out_2753188682549842837[361] = 0;
   out_2753188682549842837[362] = 0;
   out_2753188682549842837[363] = 0;
   out_2753188682549842837[364] = 0;
   out_2753188682549842837[365] = 0;
   out_2753188682549842837[366] = 0;
   out_2753188682549842837[367] = 0;
   out_2753188682549842837[368] = 0;
   out_2753188682549842837[369] = 0;
   out_2753188682549842837[370] = 0;
   out_2753188682549842837[371] = 0;
   out_2753188682549842837[372] = 0;
   out_2753188682549842837[373] = 0;
   out_2753188682549842837[374] = 1;
   out_2753188682549842837[375] = 0;
   out_2753188682549842837[376] = 0;
   out_2753188682549842837[377] = 0;
   out_2753188682549842837[378] = 0;
   out_2753188682549842837[379] = 0;
   out_2753188682549842837[380] = 0;
   out_2753188682549842837[381] = 0;
   out_2753188682549842837[382] = 0;
   out_2753188682549842837[383] = 0;
   out_2753188682549842837[384] = 0;
   out_2753188682549842837[385] = 0;
   out_2753188682549842837[386] = 0;
   out_2753188682549842837[387] = 0;
   out_2753188682549842837[388] = 0;
   out_2753188682549842837[389] = 0;
   out_2753188682549842837[390] = 0;
   out_2753188682549842837[391] = 0;
   out_2753188682549842837[392] = 0;
   out_2753188682549842837[393] = 0;
   out_2753188682549842837[394] = 0;
   out_2753188682549842837[395] = 0;
   out_2753188682549842837[396] = 1;
   out_2753188682549842837[397] = 0;
   out_2753188682549842837[398] = 0;
   out_2753188682549842837[399] = 0;
   out_2753188682549842837[400] = 0;
   out_2753188682549842837[401] = 0;
   out_2753188682549842837[402] = 0;
   out_2753188682549842837[403] = 0;
   out_2753188682549842837[404] = 0;
   out_2753188682549842837[405] = 0;
   out_2753188682549842837[406] = 0;
   out_2753188682549842837[407] = 0;
   out_2753188682549842837[408] = 0;
   out_2753188682549842837[409] = 0;
   out_2753188682549842837[410] = 0;
   out_2753188682549842837[411] = 0;
   out_2753188682549842837[412] = 0;
   out_2753188682549842837[413] = 0;
   out_2753188682549842837[414] = 0;
   out_2753188682549842837[415] = 0;
   out_2753188682549842837[416] = 0;
   out_2753188682549842837[417] = 0;
   out_2753188682549842837[418] = 1;
   out_2753188682549842837[419] = 0;
   out_2753188682549842837[420] = 0;
   out_2753188682549842837[421] = 0;
   out_2753188682549842837[422] = 0;
   out_2753188682549842837[423] = 0;
   out_2753188682549842837[424] = 0;
   out_2753188682549842837[425] = 0;
   out_2753188682549842837[426] = 0;
   out_2753188682549842837[427] = 0;
   out_2753188682549842837[428] = 0;
   out_2753188682549842837[429] = 0;
   out_2753188682549842837[430] = 0;
   out_2753188682549842837[431] = 0;
   out_2753188682549842837[432] = 0;
   out_2753188682549842837[433] = 0;
   out_2753188682549842837[434] = 0;
   out_2753188682549842837[435] = 0;
   out_2753188682549842837[436] = 0;
   out_2753188682549842837[437] = 0;
   out_2753188682549842837[438] = 0;
   out_2753188682549842837[439] = 0;
   out_2753188682549842837[440] = 1;
}
void h_4(double *state, double *unused, double *out_7047424262828774852) {
   out_7047424262828774852[0] = state[10] + state[13];
   out_7047424262828774852[1] = state[11] + state[14];
   out_7047424262828774852[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5908841931880971527) {
   out_5908841931880971527[0] = 0;
   out_5908841931880971527[1] = 0;
   out_5908841931880971527[2] = 0;
   out_5908841931880971527[3] = 0;
   out_5908841931880971527[4] = 0;
   out_5908841931880971527[5] = 0;
   out_5908841931880971527[6] = 0;
   out_5908841931880971527[7] = 0;
   out_5908841931880971527[8] = 0;
   out_5908841931880971527[9] = 0;
   out_5908841931880971527[10] = 1;
   out_5908841931880971527[11] = 0;
   out_5908841931880971527[12] = 0;
   out_5908841931880971527[13] = 1;
   out_5908841931880971527[14] = 0;
   out_5908841931880971527[15] = 0;
   out_5908841931880971527[16] = 0;
   out_5908841931880971527[17] = 0;
   out_5908841931880971527[18] = 0;
   out_5908841931880971527[19] = 0;
   out_5908841931880971527[20] = 0;
   out_5908841931880971527[21] = 0;
   out_5908841931880971527[22] = 0;
   out_5908841931880971527[23] = 0;
   out_5908841931880971527[24] = 0;
   out_5908841931880971527[25] = 0;
   out_5908841931880971527[26] = 0;
   out_5908841931880971527[27] = 0;
   out_5908841931880971527[28] = 0;
   out_5908841931880971527[29] = 0;
   out_5908841931880971527[30] = 0;
   out_5908841931880971527[31] = 0;
   out_5908841931880971527[32] = 0;
   out_5908841931880971527[33] = 1;
   out_5908841931880971527[34] = 0;
   out_5908841931880971527[35] = 0;
   out_5908841931880971527[36] = 1;
   out_5908841931880971527[37] = 0;
   out_5908841931880971527[38] = 0;
   out_5908841931880971527[39] = 0;
   out_5908841931880971527[40] = 0;
   out_5908841931880971527[41] = 0;
   out_5908841931880971527[42] = 0;
   out_5908841931880971527[43] = 0;
   out_5908841931880971527[44] = 0;
   out_5908841931880971527[45] = 0;
   out_5908841931880971527[46] = 0;
   out_5908841931880971527[47] = 0;
   out_5908841931880971527[48] = 0;
   out_5908841931880971527[49] = 0;
   out_5908841931880971527[50] = 0;
   out_5908841931880971527[51] = 0;
   out_5908841931880971527[52] = 0;
   out_5908841931880971527[53] = 0;
   out_5908841931880971527[54] = 0;
   out_5908841931880971527[55] = 0;
   out_5908841931880971527[56] = 1;
   out_5908841931880971527[57] = 0;
   out_5908841931880971527[58] = 0;
   out_5908841931880971527[59] = 1;
   out_5908841931880971527[60] = 0;
   out_5908841931880971527[61] = 0;
   out_5908841931880971527[62] = 0;
   out_5908841931880971527[63] = 0;
   out_5908841931880971527[64] = 0;
   out_5908841931880971527[65] = 0;
}
void h_9(double *state, double *unused, double *out_5074359214044393374) {
   out_5074359214044393374[0] = state[10];
   out_5074359214044393374[1] = state[11];
   out_5074359214044393374[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3019980379600892185) {
   out_3019980379600892185[0] = 0;
   out_3019980379600892185[1] = 0;
   out_3019980379600892185[2] = 0;
   out_3019980379600892185[3] = 0;
   out_3019980379600892185[4] = 0;
   out_3019980379600892185[5] = 0;
   out_3019980379600892185[6] = 0;
   out_3019980379600892185[7] = 0;
   out_3019980379600892185[8] = 0;
   out_3019980379600892185[9] = 0;
   out_3019980379600892185[10] = 1;
   out_3019980379600892185[11] = 0;
   out_3019980379600892185[12] = 0;
   out_3019980379600892185[13] = 0;
   out_3019980379600892185[14] = 0;
   out_3019980379600892185[15] = 0;
   out_3019980379600892185[16] = 0;
   out_3019980379600892185[17] = 0;
   out_3019980379600892185[18] = 0;
   out_3019980379600892185[19] = 0;
   out_3019980379600892185[20] = 0;
   out_3019980379600892185[21] = 0;
   out_3019980379600892185[22] = 0;
   out_3019980379600892185[23] = 0;
   out_3019980379600892185[24] = 0;
   out_3019980379600892185[25] = 0;
   out_3019980379600892185[26] = 0;
   out_3019980379600892185[27] = 0;
   out_3019980379600892185[28] = 0;
   out_3019980379600892185[29] = 0;
   out_3019980379600892185[30] = 0;
   out_3019980379600892185[31] = 0;
   out_3019980379600892185[32] = 0;
   out_3019980379600892185[33] = 1;
   out_3019980379600892185[34] = 0;
   out_3019980379600892185[35] = 0;
   out_3019980379600892185[36] = 0;
   out_3019980379600892185[37] = 0;
   out_3019980379600892185[38] = 0;
   out_3019980379600892185[39] = 0;
   out_3019980379600892185[40] = 0;
   out_3019980379600892185[41] = 0;
   out_3019980379600892185[42] = 0;
   out_3019980379600892185[43] = 0;
   out_3019980379600892185[44] = 0;
   out_3019980379600892185[45] = 0;
   out_3019980379600892185[46] = 0;
   out_3019980379600892185[47] = 0;
   out_3019980379600892185[48] = 0;
   out_3019980379600892185[49] = 0;
   out_3019980379600892185[50] = 0;
   out_3019980379600892185[51] = 0;
   out_3019980379600892185[52] = 0;
   out_3019980379600892185[53] = 0;
   out_3019980379600892185[54] = 0;
   out_3019980379600892185[55] = 0;
   out_3019980379600892185[56] = 1;
   out_3019980379600892185[57] = 0;
   out_3019980379600892185[58] = 0;
   out_3019980379600892185[59] = 0;
   out_3019980379600892185[60] = 0;
   out_3019980379600892185[61] = 0;
   out_3019980379600892185[62] = 0;
   out_3019980379600892185[63] = 0;
   out_3019980379600892185[64] = 0;
   out_3019980379600892185[65] = 0;
}
void h_10(double *state, double *unused, double *out_6927010569651698419) {
   out_6927010569651698419[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6927010569651698419[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6927010569651698419[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5151621143608136929) {
   out_5151621143608136929[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5151621143608136929[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5151621143608136929[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5151621143608136929[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5151621143608136929[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5151621143608136929[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5151621143608136929[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5151621143608136929[7] = 0;
   out_5151621143608136929[8] = 0;
   out_5151621143608136929[9] = 0;
   out_5151621143608136929[10] = 0;
   out_5151621143608136929[11] = 0;
   out_5151621143608136929[12] = 0;
   out_5151621143608136929[13] = 0;
   out_5151621143608136929[14] = 0;
   out_5151621143608136929[15] = 0;
   out_5151621143608136929[16] = 1;
   out_5151621143608136929[17] = 0;
   out_5151621143608136929[18] = 0;
   out_5151621143608136929[19] = 1;
   out_5151621143608136929[20] = 0;
   out_5151621143608136929[21] = 0;
   out_5151621143608136929[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5151621143608136929[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5151621143608136929[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5151621143608136929[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5151621143608136929[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5151621143608136929[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5151621143608136929[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5151621143608136929[29] = 0;
   out_5151621143608136929[30] = 0;
   out_5151621143608136929[31] = 0;
   out_5151621143608136929[32] = 0;
   out_5151621143608136929[33] = 0;
   out_5151621143608136929[34] = 0;
   out_5151621143608136929[35] = 0;
   out_5151621143608136929[36] = 0;
   out_5151621143608136929[37] = 0;
   out_5151621143608136929[38] = 0;
   out_5151621143608136929[39] = 1;
   out_5151621143608136929[40] = 0;
   out_5151621143608136929[41] = 0;
   out_5151621143608136929[42] = 1;
   out_5151621143608136929[43] = 0;
   out_5151621143608136929[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5151621143608136929[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5151621143608136929[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5151621143608136929[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5151621143608136929[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5151621143608136929[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5151621143608136929[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5151621143608136929[51] = 0;
   out_5151621143608136929[52] = 0;
   out_5151621143608136929[53] = 0;
   out_5151621143608136929[54] = 0;
   out_5151621143608136929[55] = 0;
   out_5151621143608136929[56] = 0;
   out_5151621143608136929[57] = 0;
   out_5151621143608136929[58] = 0;
   out_5151621143608136929[59] = 0;
   out_5151621143608136929[60] = 0;
   out_5151621143608136929[61] = 0;
   out_5151621143608136929[62] = 1;
   out_5151621143608136929[63] = 0;
   out_5151621143608136929[64] = 0;
   out_5151621143608136929[65] = 1;
}
void h_12(double *state, double *unused, double *out_4103364396423413669) {
   out_4103364396423413669[0] = state[0];
   out_4103364396423413669[1] = state[1];
   out_4103364396423413669[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1758286381801478965) {
   out_1758286381801478965[0] = 1;
   out_1758286381801478965[1] = 0;
   out_1758286381801478965[2] = 0;
   out_1758286381801478965[3] = 0;
   out_1758286381801478965[4] = 0;
   out_1758286381801478965[5] = 0;
   out_1758286381801478965[6] = 0;
   out_1758286381801478965[7] = 0;
   out_1758286381801478965[8] = 0;
   out_1758286381801478965[9] = 0;
   out_1758286381801478965[10] = 0;
   out_1758286381801478965[11] = 0;
   out_1758286381801478965[12] = 0;
   out_1758286381801478965[13] = 0;
   out_1758286381801478965[14] = 0;
   out_1758286381801478965[15] = 0;
   out_1758286381801478965[16] = 0;
   out_1758286381801478965[17] = 0;
   out_1758286381801478965[18] = 0;
   out_1758286381801478965[19] = 0;
   out_1758286381801478965[20] = 0;
   out_1758286381801478965[21] = 0;
   out_1758286381801478965[22] = 0;
   out_1758286381801478965[23] = 1;
   out_1758286381801478965[24] = 0;
   out_1758286381801478965[25] = 0;
   out_1758286381801478965[26] = 0;
   out_1758286381801478965[27] = 0;
   out_1758286381801478965[28] = 0;
   out_1758286381801478965[29] = 0;
   out_1758286381801478965[30] = 0;
   out_1758286381801478965[31] = 0;
   out_1758286381801478965[32] = 0;
   out_1758286381801478965[33] = 0;
   out_1758286381801478965[34] = 0;
   out_1758286381801478965[35] = 0;
   out_1758286381801478965[36] = 0;
   out_1758286381801478965[37] = 0;
   out_1758286381801478965[38] = 0;
   out_1758286381801478965[39] = 0;
   out_1758286381801478965[40] = 0;
   out_1758286381801478965[41] = 0;
   out_1758286381801478965[42] = 0;
   out_1758286381801478965[43] = 0;
   out_1758286381801478965[44] = 0;
   out_1758286381801478965[45] = 0;
   out_1758286381801478965[46] = 1;
   out_1758286381801478965[47] = 0;
   out_1758286381801478965[48] = 0;
   out_1758286381801478965[49] = 0;
   out_1758286381801478965[50] = 0;
   out_1758286381801478965[51] = 0;
   out_1758286381801478965[52] = 0;
   out_1758286381801478965[53] = 0;
   out_1758286381801478965[54] = 0;
   out_1758286381801478965[55] = 0;
   out_1758286381801478965[56] = 0;
   out_1758286381801478965[57] = 0;
   out_1758286381801478965[58] = 0;
   out_1758286381801478965[59] = 0;
   out_1758286381801478965[60] = 0;
   out_1758286381801478965[61] = 0;
   out_1758286381801478965[62] = 0;
   out_1758286381801478965[63] = 0;
   out_1758286381801478965[64] = 0;
   out_1758286381801478965[65] = 0;
}
void h_35(double *state, double *unused, double *out_531220340974882437) {
   out_531220340974882437[0] = state[7];
   out_531220340974882437[1] = state[8];
   out_531220340974882437[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2542179874508364151) {
   out_2542179874508364151[0] = 0;
   out_2542179874508364151[1] = 0;
   out_2542179874508364151[2] = 0;
   out_2542179874508364151[3] = 0;
   out_2542179874508364151[4] = 0;
   out_2542179874508364151[5] = 0;
   out_2542179874508364151[6] = 0;
   out_2542179874508364151[7] = 1;
   out_2542179874508364151[8] = 0;
   out_2542179874508364151[9] = 0;
   out_2542179874508364151[10] = 0;
   out_2542179874508364151[11] = 0;
   out_2542179874508364151[12] = 0;
   out_2542179874508364151[13] = 0;
   out_2542179874508364151[14] = 0;
   out_2542179874508364151[15] = 0;
   out_2542179874508364151[16] = 0;
   out_2542179874508364151[17] = 0;
   out_2542179874508364151[18] = 0;
   out_2542179874508364151[19] = 0;
   out_2542179874508364151[20] = 0;
   out_2542179874508364151[21] = 0;
   out_2542179874508364151[22] = 0;
   out_2542179874508364151[23] = 0;
   out_2542179874508364151[24] = 0;
   out_2542179874508364151[25] = 0;
   out_2542179874508364151[26] = 0;
   out_2542179874508364151[27] = 0;
   out_2542179874508364151[28] = 0;
   out_2542179874508364151[29] = 0;
   out_2542179874508364151[30] = 1;
   out_2542179874508364151[31] = 0;
   out_2542179874508364151[32] = 0;
   out_2542179874508364151[33] = 0;
   out_2542179874508364151[34] = 0;
   out_2542179874508364151[35] = 0;
   out_2542179874508364151[36] = 0;
   out_2542179874508364151[37] = 0;
   out_2542179874508364151[38] = 0;
   out_2542179874508364151[39] = 0;
   out_2542179874508364151[40] = 0;
   out_2542179874508364151[41] = 0;
   out_2542179874508364151[42] = 0;
   out_2542179874508364151[43] = 0;
   out_2542179874508364151[44] = 0;
   out_2542179874508364151[45] = 0;
   out_2542179874508364151[46] = 0;
   out_2542179874508364151[47] = 0;
   out_2542179874508364151[48] = 0;
   out_2542179874508364151[49] = 0;
   out_2542179874508364151[50] = 0;
   out_2542179874508364151[51] = 0;
   out_2542179874508364151[52] = 0;
   out_2542179874508364151[53] = 1;
   out_2542179874508364151[54] = 0;
   out_2542179874508364151[55] = 0;
   out_2542179874508364151[56] = 0;
   out_2542179874508364151[57] = 0;
   out_2542179874508364151[58] = 0;
   out_2542179874508364151[59] = 0;
   out_2542179874508364151[60] = 0;
   out_2542179874508364151[61] = 0;
   out_2542179874508364151[62] = 0;
   out_2542179874508364151[63] = 0;
   out_2542179874508364151[64] = 0;
   out_2542179874508364151[65] = 0;
}
void h_32(double *state, double *unused, double *out_4916647171418676380) {
   out_4916647171418676380[0] = state[3];
   out_4916647171418676380[1] = state[4];
   out_4916647171418676380[2] = state[5];
   out_4916647171418676380[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8141590287375446384) {
   out_8141590287375446384[0] = 0;
   out_8141590287375446384[1] = 0;
   out_8141590287375446384[2] = 0;
   out_8141590287375446384[3] = 1;
   out_8141590287375446384[4] = 0;
   out_8141590287375446384[5] = 0;
   out_8141590287375446384[6] = 0;
   out_8141590287375446384[7] = 0;
   out_8141590287375446384[8] = 0;
   out_8141590287375446384[9] = 0;
   out_8141590287375446384[10] = 0;
   out_8141590287375446384[11] = 0;
   out_8141590287375446384[12] = 0;
   out_8141590287375446384[13] = 0;
   out_8141590287375446384[14] = 0;
   out_8141590287375446384[15] = 0;
   out_8141590287375446384[16] = 0;
   out_8141590287375446384[17] = 0;
   out_8141590287375446384[18] = 0;
   out_8141590287375446384[19] = 0;
   out_8141590287375446384[20] = 0;
   out_8141590287375446384[21] = 0;
   out_8141590287375446384[22] = 0;
   out_8141590287375446384[23] = 0;
   out_8141590287375446384[24] = 0;
   out_8141590287375446384[25] = 0;
   out_8141590287375446384[26] = 1;
   out_8141590287375446384[27] = 0;
   out_8141590287375446384[28] = 0;
   out_8141590287375446384[29] = 0;
   out_8141590287375446384[30] = 0;
   out_8141590287375446384[31] = 0;
   out_8141590287375446384[32] = 0;
   out_8141590287375446384[33] = 0;
   out_8141590287375446384[34] = 0;
   out_8141590287375446384[35] = 0;
   out_8141590287375446384[36] = 0;
   out_8141590287375446384[37] = 0;
   out_8141590287375446384[38] = 0;
   out_8141590287375446384[39] = 0;
   out_8141590287375446384[40] = 0;
   out_8141590287375446384[41] = 0;
   out_8141590287375446384[42] = 0;
   out_8141590287375446384[43] = 0;
   out_8141590287375446384[44] = 0;
   out_8141590287375446384[45] = 0;
   out_8141590287375446384[46] = 0;
   out_8141590287375446384[47] = 0;
   out_8141590287375446384[48] = 0;
   out_8141590287375446384[49] = 1;
   out_8141590287375446384[50] = 0;
   out_8141590287375446384[51] = 0;
   out_8141590287375446384[52] = 0;
   out_8141590287375446384[53] = 0;
   out_8141590287375446384[54] = 0;
   out_8141590287375446384[55] = 0;
   out_8141590287375446384[56] = 0;
   out_8141590287375446384[57] = 0;
   out_8141590287375446384[58] = 0;
   out_8141590287375446384[59] = 0;
   out_8141590287375446384[60] = 0;
   out_8141590287375446384[61] = 0;
   out_8141590287375446384[62] = 0;
   out_8141590287375446384[63] = 0;
   out_8141590287375446384[64] = 0;
   out_8141590287375446384[65] = 0;
   out_8141590287375446384[66] = 0;
   out_8141590287375446384[67] = 0;
   out_8141590287375446384[68] = 0;
   out_8141590287375446384[69] = 0;
   out_8141590287375446384[70] = 0;
   out_8141590287375446384[71] = 0;
   out_8141590287375446384[72] = 1;
   out_8141590287375446384[73] = 0;
   out_8141590287375446384[74] = 0;
   out_8141590287375446384[75] = 0;
   out_8141590287375446384[76] = 0;
   out_8141590287375446384[77] = 0;
   out_8141590287375446384[78] = 0;
   out_8141590287375446384[79] = 0;
   out_8141590287375446384[80] = 0;
   out_8141590287375446384[81] = 0;
   out_8141590287375446384[82] = 0;
   out_8141590287375446384[83] = 0;
   out_8141590287375446384[84] = 0;
   out_8141590287375446384[85] = 0;
   out_8141590287375446384[86] = 0;
   out_8141590287375446384[87] = 0;
}
void h_13(double *state, double *unused, double *out_3726368511217429187) {
   out_3726368511217429187[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3726368511217429187[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3726368511217429187[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7185551590990909283) {
   out_7185551590990909283[0] = 0;
   out_7185551590990909283[1] = 0;
   out_7185551590990909283[2] = 0;
   out_7185551590990909283[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7185551590990909283[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7185551590990909283[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7185551590990909283[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7185551590990909283[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7185551590990909283[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7185551590990909283[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7185551590990909283[10] = 0;
   out_7185551590990909283[11] = 0;
   out_7185551590990909283[12] = 0;
   out_7185551590990909283[13] = 0;
   out_7185551590990909283[14] = 0;
   out_7185551590990909283[15] = 0;
   out_7185551590990909283[16] = 0;
   out_7185551590990909283[17] = 0;
   out_7185551590990909283[18] = 0;
   out_7185551590990909283[19] = 0;
   out_7185551590990909283[20] = 0;
   out_7185551590990909283[21] = 0;
   out_7185551590990909283[22] = 0;
   out_7185551590990909283[23] = 0;
   out_7185551590990909283[24] = 0;
   out_7185551590990909283[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7185551590990909283[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7185551590990909283[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7185551590990909283[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7185551590990909283[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7185551590990909283[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7185551590990909283[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7185551590990909283[32] = 0;
   out_7185551590990909283[33] = 0;
   out_7185551590990909283[34] = 0;
   out_7185551590990909283[35] = 0;
   out_7185551590990909283[36] = 0;
   out_7185551590990909283[37] = 0;
   out_7185551590990909283[38] = 0;
   out_7185551590990909283[39] = 0;
   out_7185551590990909283[40] = 0;
   out_7185551590990909283[41] = 0;
   out_7185551590990909283[42] = 0;
   out_7185551590990909283[43] = 0;
   out_7185551590990909283[44] = 0;
   out_7185551590990909283[45] = 0;
   out_7185551590990909283[46] = 0;
   out_7185551590990909283[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7185551590990909283[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7185551590990909283[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7185551590990909283[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7185551590990909283[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7185551590990909283[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7185551590990909283[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7185551590990909283[54] = 0;
   out_7185551590990909283[55] = 0;
   out_7185551590990909283[56] = 0;
   out_7185551590990909283[57] = 0;
   out_7185551590990909283[58] = 0;
   out_7185551590990909283[59] = 0;
   out_7185551590990909283[60] = 0;
   out_7185551590990909283[61] = 0;
   out_7185551590990909283[62] = 0;
   out_7185551590990909283[63] = 0;
   out_7185551590990909283[64] = 0;
   out_7185551590990909283[65] = 0;
}
void h_14(double *state, double *unused, double *out_5074359214044393374) {
   out_5074359214044393374[0] = state[10];
   out_5074359214044393374[1] = state[11];
   out_5074359214044393374[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3019980379600892185) {
   out_3019980379600892185[0] = 0;
   out_3019980379600892185[1] = 0;
   out_3019980379600892185[2] = 0;
   out_3019980379600892185[3] = 0;
   out_3019980379600892185[4] = 0;
   out_3019980379600892185[5] = 0;
   out_3019980379600892185[6] = 0;
   out_3019980379600892185[7] = 0;
   out_3019980379600892185[8] = 0;
   out_3019980379600892185[9] = 0;
   out_3019980379600892185[10] = 1;
   out_3019980379600892185[11] = 0;
   out_3019980379600892185[12] = 0;
   out_3019980379600892185[13] = 0;
   out_3019980379600892185[14] = 0;
   out_3019980379600892185[15] = 0;
   out_3019980379600892185[16] = 0;
   out_3019980379600892185[17] = 0;
   out_3019980379600892185[18] = 0;
   out_3019980379600892185[19] = 0;
   out_3019980379600892185[20] = 0;
   out_3019980379600892185[21] = 0;
   out_3019980379600892185[22] = 0;
   out_3019980379600892185[23] = 0;
   out_3019980379600892185[24] = 0;
   out_3019980379600892185[25] = 0;
   out_3019980379600892185[26] = 0;
   out_3019980379600892185[27] = 0;
   out_3019980379600892185[28] = 0;
   out_3019980379600892185[29] = 0;
   out_3019980379600892185[30] = 0;
   out_3019980379600892185[31] = 0;
   out_3019980379600892185[32] = 0;
   out_3019980379600892185[33] = 1;
   out_3019980379600892185[34] = 0;
   out_3019980379600892185[35] = 0;
   out_3019980379600892185[36] = 0;
   out_3019980379600892185[37] = 0;
   out_3019980379600892185[38] = 0;
   out_3019980379600892185[39] = 0;
   out_3019980379600892185[40] = 0;
   out_3019980379600892185[41] = 0;
   out_3019980379600892185[42] = 0;
   out_3019980379600892185[43] = 0;
   out_3019980379600892185[44] = 0;
   out_3019980379600892185[45] = 0;
   out_3019980379600892185[46] = 0;
   out_3019980379600892185[47] = 0;
   out_3019980379600892185[48] = 0;
   out_3019980379600892185[49] = 0;
   out_3019980379600892185[50] = 0;
   out_3019980379600892185[51] = 0;
   out_3019980379600892185[52] = 0;
   out_3019980379600892185[53] = 0;
   out_3019980379600892185[54] = 0;
   out_3019980379600892185[55] = 0;
   out_3019980379600892185[56] = 1;
   out_3019980379600892185[57] = 0;
   out_3019980379600892185[58] = 0;
   out_3019980379600892185[59] = 0;
   out_3019980379600892185[60] = 0;
   out_3019980379600892185[61] = 0;
   out_3019980379600892185[62] = 0;
   out_3019980379600892185[63] = 0;
   out_3019980379600892185[64] = 0;
   out_3019980379600892185[65] = 0;
}
void h_33(double *state, double *unused, double *out_4271086258777626497) {
   out_4271086258777626497[0] = state[16];
   out_4271086258777626497[1] = state[17];
   out_4271086258777626497[2] = state[18];
}
void H_33(double *state, double *unused, double *out_608377130130493453) {
   out_608377130130493453[0] = 0;
   out_608377130130493453[1] = 0;
   out_608377130130493453[2] = 0;
   out_608377130130493453[3] = 0;
   out_608377130130493453[4] = 0;
   out_608377130130493453[5] = 0;
   out_608377130130493453[6] = 0;
   out_608377130130493453[7] = 0;
   out_608377130130493453[8] = 0;
   out_608377130130493453[9] = 0;
   out_608377130130493453[10] = 0;
   out_608377130130493453[11] = 0;
   out_608377130130493453[12] = 0;
   out_608377130130493453[13] = 0;
   out_608377130130493453[14] = 0;
   out_608377130130493453[15] = 0;
   out_608377130130493453[16] = 1;
   out_608377130130493453[17] = 0;
   out_608377130130493453[18] = 0;
   out_608377130130493453[19] = 0;
   out_608377130130493453[20] = 0;
   out_608377130130493453[21] = 0;
   out_608377130130493453[22] = 0;
   out_608377130130493453[23] = 0;
   out_608377130130493453[24] = 0;
   out_608377130130493453[25] = 0;
   out_608377130130493453[26] = 0;
   out_608377130130493453[27] = 0;
   out_608377130130493453[28] = 0;
   out_608377130130493453[29] = 0;
   out_608377130130493453[30] = 0;
   out_608377130130493453[31] = 0;
   out_608377130130493453[32] = 0;
   out_608377130130493453[33] = 0;
   out_608377130130493453[34] = 0;
   out_608377130130493453[35] = 0;
   out_608377130130493453[36] = 0;
   out_608377130130493453[37] = 0;
   out_608377130130493453[38] = 0;
   out_608377130130493453[39] = 1;
   out_608377130130493453[40] = 0;
   out_608377130130493453[41] = 0;
   out_608377130130493453[42] = 0;
   out_608377130130493453[43] = 0;
   out_608377130130493453[44] = 0;
   out_608377130130493453[45] = 0;
   out_608377130130493453[46] = 0;
   out_608377130130493453[47] = 0;
   out_608377130130493453[48] = 0;
   out_608377130130493453[49] = 0;
   out_608377130130493453[50] = 0;
   out_608377130130493453[51] = 0;
   out_608377130130493453[52] = 0;
   out_608377130130493453[53] = 0;
   out_608377130130493453[54] = 0;
   out_608377130130493453[55] = 0;
   out_608377130130493453[56] = 0;
   out_608377130130493453[57] = 0;
   out_608377130130493453[58] = 0;
   out_608377130130493453[59] = 0;
   out_608377130130493453[60] = 0;
   out_608377130130493453[61] = 0;
   out_608377130130493453[62] = 1;
   out_608377130130493453[63] = 0;
   out_608377130130493453[64] = 0;
   out_608377130130493453[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7192626465969426310) {
  H(in_vec, out_7192626465969426310);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8267414924958799098) {
  err_fun(nom_x, delta_x, out_8267414924958799098);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6790801154123303470) {
  inv_err_fun(nom_x, true_x, out_6790801154123303470);
}
void live_H_mod_fun(double *state, double *out_7578437124212003399) {
  H_mod_fun(state, out_7578437124212003399);
}
void live_f_fun(double *state, double dt, double *out_7029063535498789077) {
  f_fun(state,  dt, out_7029063535498789077);
}
void live_F_fun(double *state, double dt, double *out_2753188682549842837) {
  F_fun(state,  dt, out_2753188682549842837);
}
void live_h_4(double *state, double *unused, double *out_7047424262828774852) {
  h_4(state, unused, out_7047424262828774852);
}
void live_H_4(double *state, double *unused, double *out_5908841931880971527) {
  H_4(state, unused, out_5908841931880971527);
}
void live_h_9(double *state, double *unused, double *out_5074359214044393374) {
  h_9(state, unused, out_5074359214044393374);
}
void live_H_9(double *state, double *unused, double *out_3019980379600892185) {
  H_9(state, unused, out_3019980379600892185);
}
void live_h_10(double *state, double *unused, double *out_6927010569651698419) {
  h_10(state, unused, out_6927010569651698419);
}
void live_H_10(double *state, double *unused, double *out_5151621143608136929) {
  H_10(state, unused, out_5151621143608136929);
}
void live_h_12(double *state, double *unused, double *out_4103364396423413669) {
  h_12(state, unused, out_4103364396423413669);
}
void live_H_12(double *state, double *unused, double *out_1758286381801478965) {
  H_12(state, unused, out_1758286381801478965);
}
void live_h_35(double *state, double *unused, double *out_531220340974882437) {
  h_35(state, unused, out_531220340974882437);
}
void live_H_35(double *state, double *unused, double *out_2542179874508364151) {
  H_35(state, unused, out_2542179874508364151);
}
void live_h_32(double *state, double *unused, double *out_4916647171418676380) {
  h_32(state, unused, out_4916647171418676380);
}
void live_H_32(double *state, double *unused, double *out_8141590287375446384) {
  H_32(state, unused, out_8141590287375446384);
}
void live_h_13(double *state, double *unused, double *out_3726368511217429187) {
  h_13(state, unused, out_3726368511217429187);
}
void live_H_13(double *state, double *unused, double *out_7185551590990909283) {
  H_13(state, unused, out_7185551590990909283);
}
void live_h_14(double *state, double *unused, double *out_5074359214044393374) {
  h_14(state, unused, out_5074359214044393374);
}
void live_H_14(double *state, double *unused, double *out_3019980379600892185) {
  H_14(state, unused, out_3019980379600892185);
}
void live_h_33(double *state, double *unused, double *out_4271086258777626497) {
  h_33(state, unused, out_4271086258777626497);
}
void live_H_33(double *state, double *unused, double *out_608377130130493453) {
  H_33(state, unused, out_608377130130493453);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
