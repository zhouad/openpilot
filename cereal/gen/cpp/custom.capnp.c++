// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: custom.capnp

#include "custom.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<476> b_81c2f05a394cf4af = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    175, 244,  76,  57,  90, 240, 194, 129,
     13,   0,   0,   0,   1,   0,  10,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      9,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  95,   6,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 114,
    114, 111, 116,  77,  97, 110,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
    116,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   3,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   3,   0,   0,   3,   0,   1,   0,
     40,   3,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   3,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   3,   0,   0,   3,   0,   1,   0,
     48,   3,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   3,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   3,   0,   0,   3,   0,   1,   0,
     52,   3,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   3,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   3,   0,   0,   3,   0,   1,   0,
     60,   3,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   3,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   3,   0,   0,   3,   0,   1,   0,
     68,   3,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   3,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   3,   0,   0,   3,   0,   1,   0,
     76,   3,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   3,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   3,   0,   0,   3,   0,   1,   0,
     84,   3,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   3,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   3,   0,   0,   3,   0,   1,   0,
     92,   3,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   3,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   3,   0,   0,   3,   0,   1,   0,
    100,   3,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   3,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   3,   0,   0,   3,   0,   1,   0,
    108,   3,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   3,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   3,   0,   0,   3,   0,   1,   0,
    112,   3,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   3,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   3,   0,   0,   3,   0,   1,   0,
    120,   3,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   3,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   3,   0,   0,   3,   0,   1,   0,
    128,   3,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   3,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   3,   0,   0,   3,   0,   1,   0,
    136,   3,   0,   0,   2,   0,   1,   0,
     14,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   3,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   3,   0,   0,   3,   0,   1,   0,
    144,   3,   0,   0,   2,   0,   1,   0,
     15,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   3,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   3,   0,   0,   3,   0,   1,   0,
    152,   3,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   3,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   3,   0,   0,   3,   0,   1,   0,
    160,   3,   0,   0,   2,   0,   1,   0,
     17,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,  17,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   3,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   3,   0,   0,   3,   0,   1,   0,
    168,   3,   0,   0,   2,   0,   1,   0,
     18,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   3,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   3,   0,   0,   3,   0,   1,   0,
    176,   3,   0,   0,   2,   0,   1,   0,
     19,   0,   0,   0,  12,   0,   0,   0,
      0,   0,   1,   0,  19,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   3,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   3,   0,   0,   3,   0,   1,   0,
    180,   3,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,  13,   0,   0,   0,
      0,   0,   1,   0,  20,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    177,   3,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   3,   0,   0,   3,   0,   1,   0,
    184,   3,   0,   0,   2,   0,   1,   0,
     21,   0,   0,   0,  14,   0,   0,   0,
      0,   0,   1,   0,  21,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   3,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   3,   0,   0,   3,   0,   1,   0,
    192,   3,   0,   0,   2,   0,   1,   0,
     22,   0,   0,   0,  15,   0,   0,   0,
      0,   0,   1,   0,  22,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   3,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   3,   0,   0,   3,   0,   1,   0,
    200,   3,   0,   0,   2,   0,   1,   0,
     23,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   3,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   3,   0,   0,   3,   0,   1,   0,
    208,   3,   0,   0,   2,   0,   1,   0,
     24,   0,   0,   0,  17,   0,   0,   0,
      0,   0,   1,   0,  24,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   3,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   3,   0,   0,   3,   0,   1,   0,
    216,   3,   0,   0,   2,   0,   1,   0,
     25,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   1,   0,  25,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   3,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   3,   0,   0,   3,   0,   1,   0,
    224,   3,   0,   0,   2,   0,   1,   0,
     26,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   3,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   3,   0,   0,   3,   0,   1,   0,
    232,   3,   0,   0,   2,   0,   1,   0,
     27,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,  27,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   3,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   3,   0,   0,   3,   0,   1,   0,
    240,   3,   0,   0,   2,   0,   1,   0,
     28,   0,   0,   0,  19,   0,   0,   0,
      0,   0,   1,   0,  28,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   3,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   3,   0,   0,   3,   0,   1,   0,
    244,   3,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 105, 118, 101,  67,  97,
    114, 114, 111, 116,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  82, 111,  97, 100,  76, 105, 109,
    105, 116,  83, 112, 101, 101, 100,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 109, 111, 116, 101,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  83, 112, 100,  84, 121, 112, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  83, 112, 100,  76, 105, 109, 105,
    116,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  83, 112, 100,  68, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  83, 112, 100,  67, 111, 117, 110,
    116,  68, 111, 119, 110,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  84, 117, 114, 110,  73, 110, 102,
    111,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  68, 105, 115, 116,  84, 111,  84,
    117, 114, 110,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  84, 117, 114, 110,  67, 111, 117,
    110, 116,  68, 111, 119, 110,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 116,  99,  84, 121, 112, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  84, 117, 114, 110,  83, 112, 101,
    101, 100,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 122,  80, 111, 115,  82, 111,  97,
    100,  78,  97, 109, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 122,  84,  66,  84,  77,  97, 105,
    110,  84, 101, 120, 116,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115, 105, 114, 101, 100,  83,
    112, 101, 101, 100,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115, 105, 114, 101, 100,  83,
    111, 117, 114,  99, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 114, 114, 111, 116,  67, 109,
    100,  73, 110, 100, 101, 120,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 114, 114, 111, 116,  67, 109,
    100,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 114, 114, 111, 116,  65, 114,
    103,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  80, 111, 115,  76,  97, 116,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  80, 111, 115,  76, 111, 110,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  80, 111, 115,  65, 110, 103, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,  80, 111, 115,  83, 112, 101, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 114,  97, 102, 102, 105,  99,  83,
    116,  97, 116, 101,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  71, 111,  80, 111, 115,  68, 105,
    115, 116,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  71, 111,  80, 111, 115,  84, 105,
    109, 101,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 122,  83, 100, 105,  68, 101, 115,
     99, 114,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 118, 105,  80,  97, 116, 104,
    115,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 102, 116,  83, 101,  99,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_81c2f05a394cf4af = b_81c2f05a394cf4af.words;
#if !CAPNP_LITE
static const uint16_t m_81c2f05a394cf4af[] = {0, 10, 18, 17, 16, 15, 14, 28, 24, 25, 1, 27, 2, 12, 26, 13, 23, 11, 8, 21, 19, 20, 22, 6, 5, 4, 3, 9, 7};
static const uint16_t i_81c2f05a394cf4af[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28};
const ::capnp::_::RawSchema s_81c2f05a394cf4af = {
  0x81c2f05a394cf4af, b_81c2f05a394cf4af.words, 476, nullptr, m_81c2f05a394cf4af,
  0, 29, i_81c2f05a394cf4af, nullptr, nullptr, { &s_81c2f05a394cf4af, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_aedffd8f31e7b55d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93, 181, 231,  49, 143, 253, 223, 174,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_aedffd8f31e7b55d = b_aedffd8f31e7b55d.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_aedffd8f31e7b55d = {
  0xaedffd8f31e7b55d, b_aedffd8f31e7b55d.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_aedffd8f31e7b55d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_f35cc4560bbf6ec2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    194, 110, 191,  11,  86, 196,  92, 243,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  50,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f35cc4560bbf6ec2 = b_f35cc4560bbf6ec2.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f35cc4560bbf6ec2 = {
  0xf35cc4560bbf6ec2, b_f35cc4560bbf6ec2.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f35cc4560bbf6ec2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_da96579883444c35 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53,  76,  68, 131, 152,  87, 150, 218,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  51,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_da96579883444c35 = b_da96579883444c35.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_da96579883444c35 = {
  0xda96579883444c35, b_da96579883444c35.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_da96579883444c35, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_80ae746ee2596b11 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     17, 107,  89, 226, 110, 116, 174, 128,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  52,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_80ae746ee2596b11 = b_80ae746ee2596b11.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_80ae746ee2596b11 = {
  0x80ae746ee2596b11, b_80ae746ee2596b11.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_80ae746ee2596b11, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_a5cd762cd951a455 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     85, 164,  81, 217,  44, 118, 205, 165,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  53,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a5cd762cd951a455 = b_a5cd762cd951a455.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a5cd762cd951a455 = {
  0xa5cd762cd951a455, b_a5cd762cd951a455.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a5cd762cd951a455, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_f98d843bfd7004a3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    163,   4, 112, 253,  59, 132, 141, 249,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  54,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f98d843bfd7004a3 = b_f98d843bfd7004a3.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f98d843bfd7004a3 = {
  0xf98d843bfd7004a3, b_f98d843bfd7004a3.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f98d843bfd7004a3, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_b86e6369214c01c8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    200,   1,  76,  33, 105,  99, 110, 184,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  55,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_b86e6369214c01c8 = b_b86e6369214c01c8.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b86e6369214c01c8 = {
  0xb86e6369214c01c8, b_b86e6369214c01c8.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b86e6369214c01c8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_f416ec09499d9d19 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25, 157, 157,  73,   9, 236,  22, 244,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  56,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f416ec09499d9d19 = b_f416ec09499d9d19.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f416ec09499d9d19 = {
  0xf416ec09499d9d19, b_f416ec09499d9d19.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f416ec09499d9d19, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_a1680744031fdb2d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     45, 219,  31,   3,  68,   7, 104, 161,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  57,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a1680744031fdb2d = b_a1680744031fdb2d.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a1680744031fdb2d = {
  0xa1680744031fdb2d, b_a1680744031fdb2d.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a1680744031fdb2d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_cb9fd56c7057593a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     58,  89,  87, 112, 108, 213, 159, 203,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  48,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_cb9fd56c7057593a = b_cb9fd56c7057593a.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cb9fd56c7057593a = {
  0xcb9fd56c7057593a, b_cb9fd56c7057593a.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cb9fd56c7057593a, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_c2243c65e0340384 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    132,   3,  52, 224, 101,  60,  36, 194,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  49,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_c2243c65e0340384 = b_c2243c65e0340384.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c2243c65e0340384 = {
  0xc2243c65e0340384, b_c2243c65e0340384.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c2243c65e0340384, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_9ccdc8676701b412 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     18, 180,   1, 103, 103, 200, 205, 156,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  50,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_9ccdc8676701b412 = b_9ccdc8676701b412.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9ccdc8676701b412 = {
  0x9ccdc8676701b412, b_9ccdc8676701b412.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9ccdc8676701b412, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_cd96dafb67a082d0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    208, 130, 160, 103, 251, 218, 150, 205,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  51,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_cd96dafb67a082d0 = b_cd96dafb67a082d0.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cd96dafb67a082d0 = {
  0xcd96dafb67a082d0, b_cd96dafb67a082d0.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cd96dafb67a082d0, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_b057204d7deadf3f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     63, 223, 234, 125,  77,  32,  87, 176,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  52,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_b057204d7deadf3f = b_b057204d7deadf3f.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b057204d7deadf3f = {
  0xb057204d7deadf3f, b_b057204d7deadf3f.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b057204d7deadf3f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_bd443b539493bc68 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104, 188, 147, 148,  83,  59,  68, 189,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  53,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_bd443b539493bc68 = b_bd443b539493bc68.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_bd443b539493bc68 = {
  0xbd443b539493bc68, b_bd443b539493bc68.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_bd443b539493bc68, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_fc6241ed8877b611 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     17, 182, 119, 136, 237,  65,  98, 252,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  54,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_fc6241ed8877b611 = b_fc6241ed8877b611.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fc6241ed8877b611 = {
  0xfc6241ed8877b611, b_fc6241ed8877b611.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fc6241ed8877b611, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_a30662f84033036c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    108,   3,  51,  64, 248,  98,   6, 163,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  55,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a30662f84033036c = b_a30662f84033036c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a30662f84033036c = {
  0xa30662f84033036c, b_a30662f84033036c.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a30662f84033036c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_c86a3d38d13eb3ef = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    239, 179,  62, 209,  56,  61, 106, 200,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  56,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_c86a3d38d13eb3ef = b_c86a3d38d13eb3ef.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c86a3d38d13eb3ef = {
  0xc86a3d38d13eb3ef, b_c86a3d38d13eb3ef.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c86a3d38d13eb3ef, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_a4f1eb3323f5f582 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130, 245, 245,  35,  51, 235, 241, 164,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  57,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a4f1eb3323f5f582 = b_a4f1eb3323f5f582.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a4f1eb3323f5f582 = {
  0xa4f1eb3323f5f582, b_a4f1eb3323f5f582.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a4f1eb3323f5f582, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace cereal {

// CarrotMan
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CarrotMan::_capnpPrivate::dataWordSize;
constexpr uint16_t CarrotMan::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CarrotMan::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CarrotMan::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved1
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved1::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved1::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved1::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved1::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved2
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved2::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved2::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved2::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved2::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved3
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved3::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved3::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved3::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved3::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved4
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved4::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved4::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved4::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved4::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved5
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved5::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved5::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved5::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved5::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved6
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved6::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved6::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved6::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved6::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved7
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved7::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved7::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved7::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved7::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved8
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved8::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved8::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved8::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved8::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved9
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved9::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved9::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved9::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved9::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved10
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved10::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved10::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved10::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved10::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved11
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved11::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved11::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved11::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved11::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved12
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved12::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved12::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved12::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved12::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved13
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved13::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved13::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved13::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved13::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved14
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved14::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved14::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved14::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved14::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved15
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved15::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved15::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved15::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved15::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved16
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved16::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved16::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved16::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved16::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved17
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved17::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved17::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved17::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved17::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved18
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved18::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved18::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved18::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved18::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved19
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved19::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved19::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved19::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved19::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace

